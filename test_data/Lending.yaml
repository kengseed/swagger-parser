openapi: 3.0.0
info:
  title: 'MBPAPI: Lending'
  description: Operations related to creating, retrieving and updating loan accounts
  contact:
    email: MBPAPI-Support@fisglobal.com
  license:
    name: FIS Proprietary and Confidential
  version: 2.0.0
servers:
  - url: https://api-gw-uat.fisglobal.com/api/mbp-api/lending/v2
  - url: http://api-gw-uat.fisglobal.com/api/mbp-api/lending/v2
security:
  - oauth2: []
paths:
  /unsecured-term-loan-accounts:
    post:
      tags:
        - Unsecured Loan Accounts
      summary: Create a new unsecured term loan account
      description: >-
        Creates a new unsecured term loan account by providing basic details
        such as the product code, loan amount, term, disbursement and payment
        details.
      operationId: createUNTAccount
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
      requestBody:
        description: The loan account record to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnsecuredTermLoanAccount'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /unsecured-term-loan-accounts/{protectedAccountId}:
    get:
      tags:
        - Unsecured Loan Accounts
      summary: Retrieve unsecured term loan account information
      description: Retrieve unsecured term loan information related to the given account
      operationId: getUNTAccountInfo
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: filter
          in: query
          description: >-
            List of comma separated values of the aggregate structure contents
            desired in the response. Valid values are ownerships, business,
            skipPayments, repaymentSchedules, accountToAccountRelationships,
            officers, balance, activity, includeAll
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: ownerships
        - name: effectiveDate
          in: query
          description: Effective date
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsecuredTermLoanAccountInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /secured-term-loan-accounts:
    post:
      tags:
        - Secured Loan Accounts
      summary: Create new secured term loan account
      description: >-
        Creates a new secured term loan account by providing basic details such
        as the product code, loan amount, collateral details, term, disbursement
        and payment details.
      operationId: createSTAccount
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
      requestBody:
        description: The secured loan account record to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuredTermLoanAccount'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /secured-term-loan-accounts/{protectedAccountId}:
    get:
      tags:
        - Secured Loan Accounts
      summary: Retrieve secured term loan account information
      description: Retrieve secured term loan information related to the given account
      operationId: getSTAccountInfo
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: filter
          in: query
          description: >-
            List of comma separated values of the aggregate structure contents
            desired in the response. Valid values are ownerships, business,
            skipPayments, repaymentSchedules, accountToAccountRelationships,
            officers, balance, activity
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: ownerships
        - name: effectiveDate
          in: query
          description: Effective date
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
        - name: approvalStatus
          in: query
          description: Approval status
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Approved
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuredTermLoanAccountInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/basic-details:
    put:
      tags:
        - Basic Details
      summary: Updates an account basic detail
      description: Update account basic detail of an existing loan account
      operationId: updateAccountBasicDetail
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The account basic detail record to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountBasicDetail'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/status:
    put:
      tags:
        - Status
      summary: Updates an account status
      description: Update account status of an existing account
      operationId: updateAccountStatus
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The account status record to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountStatus'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /secured-term-loan-accounts/{protectedAccountId}/business-details:
    put:
      tags:
        - Business
      summary: Updates an account business detail
      description: Update account business detail of an existing loan account
      operationId: updateBusinessDetail
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The account business detail record to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountBusinessDetail'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/related-accounts:
    put:
      tags:
        - Account To Account
      summary: Update an account relationship
      description: Update an existing account relationship for a loan account
      operationId: updateAccToAccRelationship
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The account bill to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedAccount'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Account To Account
      summary: Create an account relationship
      description: Create an account relationship for a loan account
      operationId: createAccToAccRelationship
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: To create the account realtionship
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedAccount'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    delete:
      tags:
        - Account To Account
      summary: Delete an account relationship
      description: Delete an account relationship for a loan account
      operationId: deleteAccToAccRelationship
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: relationshipType
          in: query
          description: Indicates the type of the relationship.
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: RepaymentAccount, DisbursmentAccount.
        - name: internalAccountType
          in: query
          description: The account type of an internal account number
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: >-
              Consumer Savings, Consumer Checking, External , Internal ,
              Checking, Savings
          example: SecuredInstallmentLoan
        - name: internalAccountId
          in: query
          description: The account id type of the related account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: '4030000097'
        - name: confirmationValue
          in: query
          description: Indicates the value of financial entity id
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: Cancel, Confirm, Draft
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: accountClassificationType
          in: query
          description: Indicates the account classification type.
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Internal, External
        - name: internalAccountProcessorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: internalAccountApplicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: externalAccountType
          in: query
          description: Indicates the account type of settlement
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: >-
            Consumer Savings, Consumer Checking, Consumer Loan, Corporate Loan,
            Corporate Checking, etc.
        - name: externalAccountFinancialEntityIdType
          in: query
          description: >-
            Indicates the transaction type/settlement medium through which the
            settlement happens
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: ACH, FEDWIRE, SWIFT, CHIPS, etc.
        - name: externalAccountFinancialEntityIdValue
          in: query
          description: Indicates the value of financial entity id
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: ABA Number, BIC, UI, etc.
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/billings:
    get:
      tags:
        - Billing and Repayments
      summary: Retrieve billing information
      description: Retrieve billing information related to the given account
      operationId: getBilling
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: approvalStatus
          in: query
          description: Approval status
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Approved
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillSchedules'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    put:
      tags:
        - Billing and Repayments
      summary: Update an account bill
      description: Update an existing account bill for a loan account
      operationId: updateBill
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The account bill to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Billing'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/billing-schedules:
    put:
      tags:
        - Billing and Repayments
      summary: Update an account repayment schedule
      description: Update an existing account repayment schedule for a loan account
      operationId: updateBillSchedule
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The account bill or repayment to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillSchedule'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Billing and Repayments
      summary: Create new repayment schedule
      description: Creates a new repayment record for an existing loan account
      operationId: createRepaymentSchedule
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: Bill schedule record on loan account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillScheduleCreate'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/bills/{billId}:
    get:
      tags:
        - Bills
      summary: Retrieve bill details
      description: Retrieve bill details for a loan account
      operationId: getBillDetail
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: billId
          in: path
          description: Bill number
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: number
          example: 232000000394032450
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: approvalStatus
          in: query
          description: Approval status
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Approved
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillDetailInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/bills:
    put:
      tags:
        - Bills
      summary: Cancel bill
      description: Cancel bill to an existing bill
      operationId: cancelBillRecord
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBillDetail'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillDetailResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Bills
      summary: Create bill
      description: Create a bill manually for a loan account
      operationId: createBillRecord
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBillDetail'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillDetailResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/skip-payments:
    post:
      tags:
        - Skip Payments
      summary: Create new skip payments
      description: Creates a new skip payment record for a loan account
      operationId: createSkipPayment
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: Skip payment record on loan account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkipPayment_1'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/charge-interests:
    put:
      tags:
        - Charges
      summary: Update an account charge interest
      description: Update an existing charge interest for a loan account
      operationId: updateChargeInterest
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The account charge interest to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargeInterest'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Charges
      summary: Create charge interest
      description: Create new charge interest on a loan account
      operationId: createChargeInterest
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The loan account record to create charge interest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargeInterest'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/charge-fees:
    put:
      tags:
        - Charges
      summary: Update an account charge fees
      description: Update an existing account charge fees
      operationId: updateChargeFee
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The account charge interest to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargeFee'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Charges
      summary: Create new charge fee on loan account
      description: Create charge fee instruction on the loan account
      operationId: createChargeFee
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The loan account record to create charge interest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargeFeeCreate'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    delete:
      tags:
        - Charges
      summary: Delete a charge fee
      description: Deletes a charge fee on an account
      operationId: deleteChargeFee
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: chargeScheduleCode
          in: query
          description: Charge schedule code
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: LOANFEE
        - name: chargeInstructionCode
          in: query
          description: Charge instruction code
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: LOANFEE
        - name: confirmationValue
          in: query
          description: Indicates the confirmation value
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: Cancel
            enum:
              - Cancel
              - Confirm
              - Draft
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: effectiveDate
          in: query
          description: Effective date
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/charges:
    get:
      tags:
        - Charges
      summary: Retrieve loan account charges using account id
      description: Retrieve loan account charges information related to the given account
      operationId: getAccountChargesById
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: effectiveDate
          in: query
          description: Effective date from which charge detail should be retrieved
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
        - name: chargeInstructionType
          in: query
          description: Charge instruction type
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Accruing
        - name: priorPeriodBalanceIndicator
          in: query
          description: Indicates whether to view prior period balance
          required: false
          style: form
          explode: true
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/manual-charge-assessments:
    put:
      tags:
        - Charges
      summary: Update manual charge assessment
      description: >-
        To update charge fee on an adhoc basis on the loan account. The charge
        fee can either be a loan fee or a late charge
      operationId: updateManualChargeAssessment
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualChargeAssessment'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualChargeAssesmentResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/non-accruals:
    put:
      tags:
        - Non Accrual Charge Off
      summary: Update non accrual account
      description: Updates non accrual account details of an existing account
      operationId: updateNonAccrual
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The account record to update non accrual
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonAccrualDetail'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Non Accrual Charge Off
      summary: Create new non accrual account
      description: Creates a new non accrual account information
      operationId: createNonAccrual
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: Non accrual record on loan account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonAccrualCreate'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/charge-off:
    put:
      tags:
        - Non Accrual Charge Off
      summary: Update charge off details
      description: Updates charge off of an existing account
      operationId: updateChargeOff
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The charge off account record to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargeOffDetail'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Non Accrual Charge Off
      summary: Create new charge off information
      description: Creates a new charge off on an existing account
      operationId: createChargeOff
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: Charge off record on loan account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargeOffCreate'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/non-accrual-charge-off:
    get:
      tags:
        - Non Accrual Charge Off
      summary: Retrieve non accrual charge off information
      description: Retrieve non accrual charge off information related to the given account
      operationId: getNonAccrualChargeOff
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: filter
          in: query
          description: >-
            List of comma separated values of the aggregate structure contents
            desired in the response. Valid values are institutionalView,
            priorPeriodBalances
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: institutionalView
        - name: effectiveDate
          in: query
          description: Effective date
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonAccrualChargeOffInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/past-dues:
    get:
      tags:
        - Dues
      summary: Retrieve past due information
      description: Retrieve past due information related to the given account id
      operationId: getPastDue
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PastDueInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/us-compliance:
    get:
      tags:
        - Compliance
      summary: Retrieve US compliance information
      description: Retrieve US compliance information for a loan account
      operationId: getUSCompliance
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: asOfDate
          in: query
          description: Date as of which the details are to be inquired
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2028-02-07'
        - name: approvalStatus
          in: query
          description: Approval status
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Approved
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USComplianceInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    put:
      tags:
        - Compliance
      summary: Updates US compliance information
      description: Updates US compliance record on loan account
      operationId: updateUSCompliance
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: US compliance record on loan account to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/USCompliance'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/extensions:
    get:
      tags:
        - Extension
      summary: Retrieve loan account extension information
      description: Retrieve loan extension information related to the given account id
      operationId: getAccountExtensionDetail
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: effectiveDate
          in: query
          description: Effective date
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
        - name: extensionType
          in: query
          description: Extension type
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: DelinquencyExtension
        - name: transactionId
          in: query
          description: Extension transaction identifier
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: '385018621'
        - name: includeHistoryIndicator
          in: query
          description: Include history indicator
          required: false
          style: form
          explode: true
          schema:
            type: boolean
          example: true
        - name: approvalStatus
          in: query
          description: Approval status
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Approved
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/delinquency-extension:
    put:
      tags:
        - Extension
      summary: Update delinquency or promotional extension
      description: Updates an existing account delinquency or promotional extension
      operationId: updateDelinquencyExtension
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The account extension record to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelinquencyPromoExtension'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/payment-date-change-extension:
    put:
      tags:
        - Extension
      summary: Update payment date change extension
      description: Updates an existing account payment date change extension
      operationId: updatePaymentDateChangeExtension
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The account extension record to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentDateExtension'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /unsecured-term-loan-accounts/{protectedAccountId}/business-details:
    put:
      tags:
        - Business
      summary: Updates an unsecured account business detail
      description: Update an unsecured business detail of an existing loan account
      operationId: updateUNABusinessDetail
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The unsecured account business detail record to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUnsecuredAccountBusinessDetail'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/billing-schedule-definitions:
    get:
      tags:
        - Billing and Repayments
      summary: Retrieve billing schedule definitions information
      description: Retrieve all the billing schedule definitions related to a loan product
      operationId: getProdBillSchedDefInfo
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: productKey
          in: query
          description: Product key
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: UNSECLNPROD
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingScheduleDefinitionInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/early-payoff-quotes-calculator:
    get:
      tags:
        - Early PayOff
      summary: Calculate payoff quote for an early settlement
      description: >-
        Calculate payoff quote for an early settlement related to the loan
        account
      operationId: getEarlyPayOffQuoteCalculator
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: settlementCode
          in: query
          description: Settlement reason code
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: BetterRate
        - name: settlementDescription
          in: query
          description: Settlement reason description
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Account closure
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: payOffQuote
          in: query
          description: >-
            Specifies the set of fields that are required to generate a payoff
            quote
          required: false
          style: deepObject
          explode: true
          schema:
            $ref: '#/components/schemas/PayOffQuote'
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarlyPayOffQuoteInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/early-payoff-quotes/{payOffQuoteId}:
    get:
      tags:
        - Early PayOff
      summary: Retrieve payoff quote for an early settlement
      description: >-
        Retrieve payoff quote for an early settlement related to the loan
        account
      operationId: getEarlyPayOffQuote
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: payOffQuoteId
          in: path
          description: Pay off quote identifier
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
            format: int64
          example: 153001517
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: approvalStatus
          in: query
          description: Approval status
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Approved
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarlyPayOffQuote'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/early-payoff-quotes:
    get:
      tags:
        - Early PayOff
      summary: Search the list of payoff quote for an early settlement
      description: >-
        Search the list of payoff quote for an early settlement of a loan
        account
      operationId: getEarlyPayOffQuotesList
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: payoffStatus
          in: query
          description: Payoffquote Status
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Active, Cancelled, Expired, Paid - Closed, Incorrect Quote
        - name: fromDate
          in: query
          description: The search start date
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
        - name: toDate
          in: query
          description: The search end date
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchEarlyPayOffQuote'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    put:
      tags:
        - Early PayOff
      summary: Update payoff quote for an early settlement
      description: Update payoff quote for an early settlement related to the loan account
      operationId: updateEarlyPayOffQuote
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
      requestBody:
        description: >-
          Update payoff quote for an early settlement related to the loan
          account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEarlyPayOffQuote'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarlyPayOffQuoteResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/notes:
    get:
      tags:
        - Notes
      summary: Retrieve list of notes for an account
      description: Returns the list of remarks and notes for a given account
      operationId: getAccountNotesByType
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: asOfDate
          in: query
          description: Date as of which the details are to be inquired
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2028-02-07'
        - name: includePreviousVersionInd
          in: query
          description: >-
            Indicates if all versions of the account identifier, note type and
            sub type should be retrieved
          required: false
          style: form
          explode: true
          schema:
            type: boolean
          example: true
        - name: type
          in: query
          description: Indicates the note type
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: FRAUD
        - name: subType
          in: query
          description: Indicates the note sub type
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: FIRST DATE OF FRAUD
        - name: activeInd
          in: query
          description: >-
            Indicates retrieval of records with an  effective date equal to or
            less than the current processing date and an end date equal to or
            greater than the current processing date
          required: false
          style: form
          explode: true
          schema:
            type: boolean
          example: true
        - name: expiredInd
          in: query
          description: >-
            Indicates retrieval of records with an end date less than current
            processing date
          required: false
          style: form
          explode: true
          schema:
            type: boolean
          example: true
        - name: futureInd
          in: query
          description: >-
            Indicates retrieval of records with an effective date greater than
            current processing date
          required: false
          style: form
          explode: true
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteList'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    put:
      tags:
        - Notes
      summary: Update an account note
      description: Update an existing account note or remark
      operationId: updateAccountNote
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The account note to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNote'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Notes
      summary: Create an acount note
      description: Create an account note or remark
      operationId: createAccountNote
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: The account note to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/notes/{noteId}:
    get:
      tags:
        - Notes
      summary: Retrieve note detail for an account
      description: Returns remarks and note for a given account and note id
      operationId: getAccountNotes
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: noteId
          in: path
          description: The unique reference id of the note
          required: true
          style: simple
          explode: false
          schema:
            minimum: 0
            type: integer
            format: int64
          example: 999900201395888
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: asOfDate
          in: query
          description: Date as of which the details are to be inquired
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2028-02-07'
        - name: includePreviousVersionInd
          in: query
          description: >-
            Indicates if all versions of the account identifier, note type and
            sub type should be retrieved
          required: false
          style: form
          explode: true
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteIdInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    delete:
      tags:
        - Notes
      summary: Delete an account note
      description: Delete an existing account note or remark
      operationId: deleteAccountNote
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: noteId
          in: path
          description: The unique reference id of the note
          required: true
          style: simple
          explode: false
          schema:
            minimum: 0
            type: integer
            format: int64
          example: 999900201395888
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/attributes:
    get:
      tags:
        - Attributes
      summary: Retrieve an extended attribute
      description: Retrieve an extended attribute values recorded on a loan account
      operationId: getExtendedAttributes
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: dateRange
          in: query
          description: Specifies the date range
          required: false
          style: deepObject
          explode: true
          schema:
            $ref: '#/components/schemas/DateRange'
        - name: effectiveDate
          in: query
          description: Business effective date
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
        - name: attributeCode
          in: query
          description: Attribute identifier
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: EffectiveInterestRate
        - name: cursorKey
          in: query
          description: >-
            The cursor string indicates where the system of record should start
            on the next query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: generatedCursorKey
        - name: numberRecordsRequested
          in: query
          description: The number of records to be returned in the response.
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int64
          example: 10
      responses:
        '200':
          description: Successful response
          headers:
            Link:
              description: A list of HATEOS links for page navigation
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                <PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequested=INTEGER_VAL>;
                rel=first,<PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequeste=INTEGER_VAL&cursorKey=NEXT_VAL>;
                rel=next
            total-records-available:
              description: >-
                If provided by the System Of Record, should be the total number
                of items that matched the search criteria
              style: simple
              explode: false
              schema:
                type: integer
                format: int64
              example: 50
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedAttributeListInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    put:
      tags:
        - Attributes
      summary: Update an existing account attribute
      description: Update an existing attribute on the account identifier
      operationId: updateExtendedAttribute
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendedAttributes'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedAttributeResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Attributes
      summary: Create a new account attribute
      description: Create a new attribute to an account identifier
      operationId: createExtendedAttribute
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendedAttributes'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedAttributeResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    delete:
      tags:
        - Attributes
      summary: Delete an existing account attribute
      description: Delete an extended attribute from the loan account
      operationId: deleteExtendedAttribute
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: attributeCode
          in: query
          description: The attribute code associated with the unique attribute definition
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: EffectiveInterestRate
        - name: effectiveDate
          in: query
          description: The effective date of the attribute instance
          required: true
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: amount
          in: query
          description: Amount involved with the entity
          required: false
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 100
        - name: currencyCode
          in: query
          description: The code of currency
          required: false
          style: form
          explode: true
          schema:
            maxLength: 3
            minLength: 2
            type: string
            example: USD
        - name: amountDate
          in: query
          description: The date associated within the amount
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2030-01-10'
        - name: date
          in: query
          description: The attribute value when the attribute data type is date
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2030-01-10'
        - name: dateTime
          in: query
          description: The attribute value when the attribute data type is date time
          required: false
          style: form
          explode: true
          schema:
            pattern: >-
              [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
            type: string
            format: date-time
            example: '2018-03-19T21:19:00.576Z'
        - name: time
          in: query
          description: The attribute value when the attribute data type is time
          required: false
          style: form
          explode: true
          schema:
            pattern: (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]
            type: string
            example: '20:20:39'
        - name: number
          in: query
          description: The attribute value when the attribute data type is number
          required: false
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 100
        - name: text
          in: query
          description: The attribute value when the attribute data type is text
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Changed
        - name: percentage
          in: query
          description: The attribute value when the attribute data type is percentage
          required: false
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 100
        - name: boolean
          in: query
          description: The attribute value when the attribute data type is boolean
          required: false
          style: form
          explode: true
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/amortization-calculators:
    post:
      tags:
        - Amortization
      summary: Calculate the amortization schedule
      description: >-
        Calculate amortization schedule which includes the installment amount,
        principal and interest components of installment and the scheduled due
        dates
      operationId: createLoanCalculator
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmortizationLoan'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmortizationLoanResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/amortization-calculators/product-account-key:
    post:
      tags:
        - Amortization
      summary: Calculate the amortization schedule based on product key of account id
      description: >-
        Calculate amortization schedule which includes the installment amount,
        principal and interest components of installment and the scheduled due
        dates
      operationId: createLoanCalculatorByProdAcc
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductKeyAmortizationLoan'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmortizationLoanResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/restrictions:
    get:
      tags:
        - Restrictions
      summary: Retrieve loan account restrictions
      description: Retrieve restrictions applied on a loan account
      operationId: getAccountRestrictions
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: asOfDate
          in: query
          description: Date as of which the details are to be inquired
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2028-02-07'
        - name: approvalStatus
          in: query
          description: Approval status
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Approved
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    put:
      tags:
        - Restrictions
      summary: Update loan account restrictions
      description: Update restrictions on a loan account such as stop payments
      operationId: updateAccountRestriction
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRestriction'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Restrictions
      summary: Create loan account restrictions
      description: Create restrictions on a loan account such as stop payments
      operationId: createAccountRestrictions
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRestriction'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    delete:
      tags:
        - Restrictions
      summary: Delete loan account restriction
      description: Delete restriction on a loan account such as stop payments
      operationId: deleteAccountRestriction
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: restrictionCode
          in: query
          description: The unique identifier for the restriction
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: ManualStopAccrual
        - name: confirmationValue
          in: query
          description: Specifies the confirmation value
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: Cancel
            enum:
              - Cancel
              - Confirm
              - Draft
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /secured-term-loan-accounts/{protectedAccountId}/collateral-relationships:
    get:
      tags:
        - Collateral
      summary: Retrieve collateral relationships
      description: Retrieve collateral relationship and details to a loan account
      operationId: getCollateralRelationship
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: collateralId
          in: query
          description: Collateral Identifier
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: '1234567'
        - name: collateralType
          in: query
          description: Collateral Type
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: ATV, Auto, Motorcycle
        - name: fromDate
          in: query
          description: from date
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
        - name: toDate
          in: query
          description: to date
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
        - name: cursorKey
          in: query
          description: >-
            The cursor string indicates where the system of record should start
            on the next query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: generatedCursorKey
        - name: numberRecordsRequested
          in: query
          description: The number of records to be returned in the response.
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int64
          example: 10
      responses:
        '200':
          description: Successful response
          headers:
            Link:
              description: A list of HATEOS links for page navigation
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                <PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequested=INTEGER_VAL>;
                rel=first,<PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequeste=INTEGER_VAL&cursorKey=NEXT_VAL>;
                rel=next
            total-records-available:
              description: >-
                If provided by the System Of Record, should be the total number
                of items that matched the search criteria
              style: simple
              explode: false
              schema:
                type: integer
                format: int64
              example: 50
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralRelationshipInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    put:
      tags:
        - Collateral
      summary: Update collateral relationship
      description: Update collateral relationship and details to a loan account
      operationId: updateCollateralRelationship
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollateralRelationship'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Collateral
      summary: Create collateral relationships
      description: Create collateral relationship and details to a loan account
      operationId: createCollateralRelationship
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollateralRelationship'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    delete:
      tags:
        - Collateral
      summary: Delete collateral relationship
      description: Delete collateral relationship and details to a loan account
      operationId: deleteCollateralRelationship
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: collateralId
          in: query
          description: The unique collateral identifier to be related with the account
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: '12345'
        - name: crossPledgedIndicator
          in: query
          description: Indicates if cross pledging is allowed
          required: true
          style: form
          explode: true
          schema:
            type: boolean
          example: true
        - name: confirmationValue
          in: query
          description: Specifies the confirmation value
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: Cancel
            enum:
              - Cancel
              - Confirm
              - Draft
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/us-bankruptcy:
    get:
      tags:
        - Bankruptcy
      summary: Retrieve US bankruptcy information
      description: Retrieve US bankruptcy information of a loan account
      operationId: getUSBankruptcy
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: asOfDate
          in: query
          description: Date as of which the details are to be inquired
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2028-02-07'
        - name: approvalStatus
          in: query
          description: Approval status
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Approved
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USBankruptcyInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Bankruptcy
      summary: Create US bankruptcy information
      description: Create US bankruptcy information to a loan account
      operationId: createUSBankruptcy
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: effectiveDate
          in: query
          description: The date when the bankruptcy record is maintained in the system
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2028-02-07'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/USBankruptcy'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/us-bankruptcy/{bankruptcyId}:
    put:
      tags:
        - Bankruptcy
      summary: Update US bankruptcy information
      description: Update US bankruptcy information to a loan account
      operationId: updateUSBankruptcy
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: bankruptcyId
          in: path
          description: >-
            Bankruptcy Chapter Field.  Identifies the chapter when a loan
            account is included in the bankruptcy filing for any customers
            associated with the account
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Chapter 7
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: effectiveDate
          in: query
          description: The date when the bankruptcy record is maintained in the system
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2028-02-08'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUSBankruptcy'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /products/{productKey}/loan-accounts:
    get:
      tags:
        - Account
      summary: Retrieve account based on product key
      description: Retrieve account based on product key
      operationId: getPrdKeyAccountInfo
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: productKey
          in: path
          description: Enterprise product key
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: MBPAPIBILL
        - name: branchIdentifier
          in: query
          description: Specifies branch where the account is originated/held
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: OU001
        - name: searchCriteria
          in: query
          description: Secondary search criteria for the account
          required: false
          style: deepObject
          explode: true
          schema:
            $ref: '#/components/schemas/AccountSearchCriteria'
        - name: dateRange
          in: query
          description: Specifies the date range
          required: false
          style: deepObject
          explode: true
          schema:
            $ref: '#/components/schemas/DateRange'
        - name: cursorKey
          in: query
          description: >-
            The cursor string indicates where the system of record should start
            on the next query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: generatedCursorKey
        - name: numberRecordsRequested
          in: query
          description: The number of records to be returned in the response.
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int64
          example: 10
      responses:
        '200':
          description: Successful response
          headers:
            Link:
              description: A list of HATEOS links for page navigation
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                <PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequested=INTEGER_VAL>;
                rel=first,<PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequeste=INTEGER_VAL&cursorKey=NEXT_VAL>;
                rel=next
            total-records-available:
              description: >-
                If provided by the System Of Record, should be the total number
                of items that matched the search criteria
              style: simple
              explode: false
              schema:
                type: integer
                format: int64
              example: 50
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /customers/{customerId}/loan-accounts:
    get:
      tags:
        - Account
      summary: Retrieve account based on customer id
      description: Retrieve list of loan account based on customer id
      operationId: getCustAccountInfo
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: customerId
          in: path
          description: Customer identifier
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '00000000000'
        - name: searchCriteria
          in: query
          description: Secondary search criteria for the account
          required: false
          style: deepObject
          explode: true
          schema:
            $ref: '#/components/schemas/AccountSearchCriteria'
        - name: balanceIndicator
          in: query
          description: Indicates if balance details are required
          required: false
          style: form
          explode: true
          schema:
            type: boolean
          example: true
        - name: dateRange
          in: query
          description: Specifies the date range
          required: false
          style: deepObject
          explode: true
          schema:
            $ref: '#/components/schemas/DateRange'
        - name: cursorKey
          in: query
          description: >-
            The cursor string indicates where the system of record should start
            on the next query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: generatedCursorKey
        - name: numberRecordsRequested
          in: query
          description: The number of records to be returned in the response.
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int64
          example: 10
      responses:
        '200':
          description: Successful response
          headers:
            Link:
              description: A list of HATEOS links for page navigation
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                <PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequested=INTEGER_VAL>;
                rel=first,<PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequeste=INTEGER_VAL&cursorKey=NEXT_VAL>;
                rel=next
            total-records-available:
              description: >-
                If provided by the System Of Record, should be the total number
                of items that matched the search criteria
              style: simple
              explode: false
              schema:
                type: integer
                format: int64
              example: 50
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /accounts/account-number:
    get:
      tags:
        - Generate Account
      summary: Generate account number
      description: >-
        Generate account number with or without product key from a third party
        system.
      operationId: getThirdPartyAccountNumber
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: productKey
          in: query
          description: Product Key
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: UNSECLNPRD
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNumberInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/collection-reports:
    put:
      tags:
        - Collection Report
      summary: Update loan account to collection
      description: >-
        Update the loan account manually to collection, also update the manual
        collection to automatic mode
      operationId: updateCollectionReport
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionReport'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /line-of-credit-accounts:
    post:
      tags:
        - Line Of Credit
      summary: Create LOC account
      description: Creates a new line of credit account
      operationId: createLocAccount
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
      requestBody:
        description: Create line of credit account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocAccount'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /line-of-credit-accounts/{protectedAccountId}:
    get:
      tags:
        - Line Of Credit
      summary: Retrieve line of credit account information
      description: Retrieve line of credit information related to the given account
      operationId: getLocAccountInfo
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: approvalStatus
          in: query
          description: Approval status
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - Approved
              - Cancelled
              - InProgress
              - PendingApproval
              - Rejected
          example: Approved
        - name: includeLatestIndicator
          in: query
          description: Include latest indicator
          required: false
          style: form
          explode: true
          schema:
            type: boolean
          example: true
        - name: asOfDate
          in: query
          description: Date as of which the details are to be inquired
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2028-02-07'
        - name: filter
          in: query
          description: >-
            List of comma separated values of the aggregate structure contents
            desired in the response. Valid values are ownerships, business,
            accountToAccountRelationships, officers, nonChargeBalances,
            activity, creditLimit, termout, takeDown, includeAll
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: creditLimit
        - name: subAreaApprovalStatus
          in: query
          description: Sub area approval status
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - Approved
              - Cancelled
              - InProgress
              - PendingApproval
              - Rejected
          example: Approved
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocAccountInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /line-of-credit-accounts/{protectedAccountId}/credit-limits:
    put:
      tags:
        - Line Of Credit
      summary: Update credit limit
      description: >-
        Update credit limit details of line of credit account, perform limit
        increase & decrease, and enable & disable over-line limit.
      operationId: updateCreditLimit
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCreditLimit'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /line-of-credit-accounts/{protectedAccountId}/term-outs:
    put:
      tags:
        - Line Of Credit
      summary: Term out an LOC account.
      description: >-
        Convert LOC loan in to a term loan with a fixed tenure. Loan term would
        be derived based on First payment date, Installment amount and vice
        versa.
      operationId: updateTermOutLOCAccount
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTermOutLOC'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /line-of-credit-accounts/{protectedAccountId}/business-details:
    put:
      tags:
        - Line Of Credit
      summary: Update business detail for LOC account .
      description: Update business details of line of credit account.
      operationId: updateLOCBusiness
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLOCAccountBusiness'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/scheduled-events:
    get:
      tags:
        - Events
      summary: Retrieves a list of scheduled business events
      description: Retrieves a list of scheduled business events for a loan account
      operationId: getScheduledEvents
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: dateRange
          in: query
          description: Specifies the date range
          required: false
          style: deepObject
          explode: true
          schema:
            $ref: '#/components/schemas/DateRange'
        - name: businessEventCode
          in: query
          description: Specifies business event code mapped to a scheduled event
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Backdated Transaction
        - name: unprocessedEventIndicator
          in: query
          description: >-
            Indicates whether the service should fetch unprocessed or processed
            event
          required: false
          style: form
          explode: true
          schema:
            type: boolean
          example: true
        - name: cursorKey
          in: query
          description: >-
            The cursor string indicates where the system of record should start
            on the next query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: generatedCursorKey
        - name: numberRecordsRequested
          in: query
          description: The number of records to be returned in the response.
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int64
          example: 10
      responses:
        '200':
          description: Successful response
          headers:
            Link:
              description: A list of HATEOS links for page navigation
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                <PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequested=INTEGER_VAL>;
                rel=first,<PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequeste=INTEGER_VAL&cursorKey=NEXT_VAL>;
                rel=next
            total-records-available:
              description: >-
                If provided by the System Of Record, should be the total number
                of items that matched the search criteria
              style: simple
              explode: false
              schema:
                type: integer
                format: int64
              example: 50
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleEventInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    put:
      tags:
        - Events
      summary: Update scheduled business event
      description: Update the scheduled business event for a loan account
      operationId: updateScheduledEvent
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: Update scheduled business event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScheduledEvent'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/scheduled-event-status:
    put:
      tags:
        - Events
      summary: Update Account scheduled event status
      description: Update the scheduled business event status for a loan account
      operationId: updateScheduledEventStatus
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: Update scheduled business event status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScheduledEventStatus'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventStatusResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/searches/bills:
    get:
      tags:
        - Bill Searches
      summary: Search bill details
      description: Search bill details for a loan account
      operationId: getBills
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: dateRange
          in: query
          description: Specifies the date range
          required: false
          style: deepObject
          explode: true
          schema:
            $ref: '#/components/schemas/DateRange'
        - name: billStatus
          in: query
          description: Bill status
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Paid
        - name: advanceBillIndicator
          in: query
          description: Advance bill indicator
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: takeDownBillIndicator
          in: query
          description: >-
            Indicates whether takedown bill records shall be listed along with
            main line bill records or not
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: cursorKey
          in: query
          description: >-
            The cursor string indicates where the system of record should start
            on the next query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: generatedCursorKey
        - name: numberRecordsRequested
          in: query
          description: The number of records to be returned in the response.
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int64
          example: 10
      responses:
        '200':
          description: Successful response
          headers:
            Link:
              description: A list of HATEOS links for page navigation
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                <PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequested=INTEGER_VAL>;
                rel=first,<PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequeste=INTEGER_VAL&cursorKey=NEXT_VAL>;
                rel=next
            total-records-available:
              description: >-
                If provided by the System Of Record, should be the total number
                of items that matched the search criteria
              style: simple
              explode: false
              schema:
                type: integer
                format: int64
              example: 50
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchBillInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/payment-instructions/{paymentInstructionReferenceNumber}:
    get:
      tags:
        - Payments
      summary: Retrieve auto debit payment instructions
      description: >-
        Retrieve auto debit payment instructions for a loan account based on
        reference number
      operationId: getPaymentInstByRefNum
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: paymentInstructionReferenceNumber
          in: path
          description: Payment instruction reference number
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
            format: int64
          example: 5
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstructionDetail'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/payment-instructions:
    get:
      tags:
        - Payments
      summary: Retrieve auto debit payment instructions
      description: Retrieve auto debit payment instructions for a loan account
      operationId: getPaymentInstruction
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstructionInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    put:
      tags:
        - Payments
      summary: Update auto debit payment instructions
      description: Update auto debit payment instructions for a loan account
      operationId: updatePaymentInstruction
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: paymentInstructionReferenceNumber
          in: query
          description: Payment instruction reference number
          required: true
          style: form
          explode: true
          schema:
            minimum: 1
            type: integer
            format: int64
          example: 5
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInstruction'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstructionResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Payments
      summary: Create auto debit payment instructions
      description: Create auto debit payment instructions for a  loan account
      operationId: createPaymentInstruction
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInstruction'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstructionResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/disbursements/{disbursementId}:
    get:
      tags:
        - Disbursements
      summary: Retrieve disbursements
      description: Retrieve disbursements for a loan account based on disbursement id
      operationId: getDisbursementsById
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: disbursementId
          in: path
          description: The unique disbursement identifier related with the account
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
          example: 191010119
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisbursementInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/disbursements:
    get:
      tags:
        - Disbursements
      summary: Retrieve disbursements
      description: Retrieve disbursements for a loan account
      operationId: getDisbursements
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisbursementsInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    put:
      tags:
        - Disbursements
      summary: Update disbursements
      description: Update disbursements for a loan account
      operationId: updateDisbursements
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDisbursement'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Disbursements
      summary: Create disbursements
      description: >-
        Create disbursements for a loan account.This API is used only when
        disbursement details were not passed at the time of account creation. If
        disbursement details is passed during account creation, then PUT
        disbursement API to be used to update the disbursement details.
      operationId: createDisbursements
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disbursement'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/insurances:
    get:
      tags:
        - Insurance
      summary: Retrieve insurances
      description: Retrieve insurances for a loan account.
      operationId: getLoanInsurances
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: effectiveDate
          in: query
          description: Date on which the changes are to be effected
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
        - name: priorPeriodBalanceIndicator
          in: query
          description: Indicates whether to view prior period balance
          required: false
          style: form
          explode: true
          schema:
            type: boolean
          example: true
        - name: approvalStatus
          in: query
          description: >-
            Approval status is the Object status to notify and list if the
            definition is Pending approved or Approved
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Approved
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    put:
      tags:
        - Insurance
      summary: Update insurances
      description: Update insurances for a loan account
      operationId: updateLoanInsurances
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insurance'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Insurance
      summary: Create insurances
      description: Create insurances for a loan account
      operationId: createLoanInsurances
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInsurance'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/insurances/{planId}:
    delete:
      tags:
        - Insurance
      summary: Delete insurances
      description: Delete insurances for a loan account
      operationId: deleteLoanInsurances
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: planId
          in: path
          description: Insurance Plan Identifier
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: '60004003'
        - name: startDate
          in: query
          description: Effective date of the insurance policy
          required: true
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
        - name: status
          in: query
          description: Indicates the status of the Insurance on the loan account
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: Active,Expired,Cancelled
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/renewals:
    get:
      tags:
        - Renewal
      summary: Retrieve renewal based on the loan account
      description: >-
        Retrieve renewal details based on renewal configuration, specific
        renewal processed, last renewal date processed on the loan account
      operationId: getAccountRenewal
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: transactionId
          in: query
          description: Renewal Identifier getting inquired
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: '385018621'
        - name: includeHistoryIndicator
          in: query
          description: Include history indicator
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: asOfDate
          in: query
          description: Date as of which the details are to be inquired
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2028-02-07'
        - name: approvalStatus
          in: query
          description: Approval status
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Approved
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenewalInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    put:
      tags:
        - Renewal
      summary: Update account renewals
      description: Update renewal conditions related to a loan account
      operationId: updateAccountRenewal
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenewalDetail'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/holds:
    get:
      tags:
        - Hold
      summary: Get holds
      description: Get an existing hold on the LOC account
      operationId: getAccountHolds
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: cursorKey
          in: query
          description: >-
            The cursor string indicates where the system of record should start
            on the next query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: generatedCursorKey
        - name: numberRecordsRequested
          in: query
          description: The number of records to be returned in the response.
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int64
          example: 10
        - name: holdType
          in: query
          description: Identifies the type of hold on an account.
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: POS Authorization Hold, Overdraft Protection Hold
        - name: holdStatus
          in: query
          description: Hold status
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - Active
              - Expired
              - Released
          example: Active
        - name: amountRange
          in: query
          description: >-
            Enquire the transactions based on an amount range for the amount in
            original currency
          required: false
          style: deepObject
          explode: true
          schema:
            $ref: '#/components/schemas/AmountRange'
        - name: dateRange
          in: query
          description: Specifies the date range
          required: false
          style: deepObject
          explode: true
          schema:
            $ref: '#/components/schemas/DateRange'
      responses:
        '200':
          description: Successful response
          headers:
            Link:
              description: A list of HATEOS links for page navigation
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                <PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequested=INTEGER_VAL>;
                rel=first,<PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequeste=INTEGER_VAL&cursorKey=NEXT_VAL>;
                rel=next
            total-records-available:
              description: >-
                If provided by the System Of Record, should be the total number
                of items that matched the search criteria
              style: simple
              explode: false
              schema:
                type: integer
                format: int64
              example: 50
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HoldInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - Hold
      summary: Create holds
      description: Create hold on the available balance on a account
      operationId: createAccountHolds
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHold'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HoldResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/holds/{holdId}:
    get:
      tags:
        - Hold
      summary: Get holds
      description: Get an existing hold on the LOC account
      operationId: getAccountHoldsById
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: holdId
          in: path
          description: Hold identifier
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '12345678'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HoldInfoById'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    put:
      tags:
        - Hold
      summary: Update holds
      description: Update an active existing hold on the LOC account
      operationId: updateAccountHolds
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: holdId
          in: path
          description: Hold identifier
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '12345678'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHold'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HoldResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    delete:
      tags:
        - Hold
      summary: Release hold
      description: Release an existing hold on the LOC account
      operationId: deleteAccountHold
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: holdId
          in: path
          description: Hold identifier
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '12345678'
        - name: customerInducedIndicator
          in: query
          description: Indicates if this transaction is initiated by customer request
          required: true
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/atmposmessage:
    post:
      tags:
        - ATM POS Message
      summary: Process ATM POS Messages
      description: Create / process the ISO 8583 message for a debit card transaction
      operationId: createAtmPosMessage
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtmPosMessageRequest'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtmPosMessageResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/geographic:
    get:
      tags:
        - US Account
      summary: Retrieve geographic information
      description: Retrieve geographic specific information for a loan account
      operationId: getGeographicInfo
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeographicInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    put:
      tags:
        - US Account
      summary: Update geographic information
      description: Update geographic specific information for a loan account
      operationId: updateGeographicInfo
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: US geographic specific account information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/USAccountRequest'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    post:
      tags:
        - US Account
      summary: Create geographic information
      description: Create geographic specific information for a loan account
      operationId: createGeographicInfo
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: US geographic specific account information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/USAccountRequest'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/additional-accounts:
    post:
      tags:
        - Additional Account
      summary: Add additional account on the loan account
      description: >-
        Add additional account details such as debit card, wallet number and
        MMID on the loan account.
      operationId: createAdditionalAccountOnLoanAccount
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
      requestBody:
        description: Additional account on Loan account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountToAdditionalAccountRelationship'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountToAdditionalAccountResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
    delete:
      tags:
        - Additional Account
      summary: Delete additional account Id on Loan account
      description: Delete exisiting additional account from a loan account
      operationId: deleteAdditionalAccountOnLoanAccount
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: additionalAccountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: DebitCardNumber
        - name: protectedAdditionalAccountId
          in: query
          description: The account identifier from the system of record
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: '5588990000000949'
        - name: accountType
          in: query
          description: The account type of the account number
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: accountIdType
          in: query
          description: The account id type of the account number
          required: false
          style: form
          explode: true
          schema:
            maximum: 32
            minimum: 1
            type: string
          example: IBAN, MobileNumber, Email, LegacyAccountNumber
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: acceptedTimestamp
          in: query
          description: Date and time the transaction was accepted by a delivery channel
          required: false
          style: form
          explode: true
          schema:
            pattern: >-
              [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
            type: string
            format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/{protectedAccountId}/allied-accounts:
    get:
      tags:
        - Allied Account
      summary: Get details of a third party account
      description: To retreive details of an third party loan account.
      operationId: getAlliedAccountInfo
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: approvalStatus
          in: query
          description: Approval Status of the account.
          required: true
          style: form
          explode: true
          schema:
            type: string
            enum:
              - Approved
              - Cancelled
              - InProgress
              - PendingApproval
              - Rejected
          example: Approved
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: asOfDate
          in: query
          description: Date as of which the details are to be inquired
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2028-02-07'
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlliedAccountInfo'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/allied-accounts:
    post:
      tags:
        - Allied Account
      summary: Add third party account details
      description: Add  third party account like Insurance account, Dealer's account etc.
      operationId: createAlliedAccount
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
      requestBody:
        description: Additional allied account to account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlliedAccount'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse_1'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/searches/allied-accounts/{protectedAccountId}:
    get:
      tags:
        - Allied Account Search
      summary: Get accounts related to allied account.
      description: Retrieves the loan accounts that are linked to an allied account
      operationId: getAlliedAccountSearch
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
        - name: protected-parameters
          in: header
          description: >
            Base64 encoded JSON object containing one or more path or query
            parameters

            ```
             e.g. Base64 of protected account id
              {
                  "protectedAccountId" : "123456789"
              }
            ```
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: ewogICAgICAicHJvdGVjdGVkQWNjb3VudElkIiA6ICIxMjM0NTY3ODkiCiAgfQ==
        - name: protectedAccountId
          in: path
          description: >-
            Protected account identifier or  "protectedAccountId" (account
            identifier passed in protected params header)
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: '0000000000'
        - name: accountType
          in: query
          description: The account type of the account number
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: SecuredInstallmentLoan
        - name: processorName
          in: query
          description: The processor name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: FIS NextGen
        - name: applicationName
          in: query
          description: The application name of the external system
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: Lending
        - name: primaryStatus
          in: query
          description: Primary life cycle status of the account
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: UnderEstablishment
            enum:
              - Active
              - Cancelled
              - Settled
              - UnderEstablishment
        - name: secondaryStatus
          in: query
          description: Secondary life cycle status of the account
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: InProcess
        - name: postingFromDate
          in: query
          description: The search start date
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
        - name: postingToDate
          in: query
          description: The search end date
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
            type: string
            format: date
            example: '2021-01-01'
        - name: insurancePlanType
          in: query
          description: Insurance Plan Type
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Health Accident and Life
        - name: insuranceStatus
          in: query
          description: Insurance Status
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: Active
        - name: originatingBranchId
          in: query
          description: Originating Branch Id
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: '123456'
        - name: cursorKey
          in: query
          description: >-
            The cursor string indicates where the system of record should start
            on the next query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: generatedCursorKey
        - name: numberRecordsRequested
          in: query
          description: The number of records to be returned in the response.
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int64
          example: 10
      responses:
        '200':
          description: Successful response
          headers:
            Link:
              description: A list of HATEOS links for page navigation
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                <PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequested=INTEGER_VAL>;
                rel=first,<PROTOCOL://DOMAIN/API_RESOURCE_PATH?numberRecordsRequeste=INTEGER_VAL&cursorKey=NEXT_VAL>;
                rel=next
            total-records-available:
              description: >-
                If provided by the System Of Record, should be the total number
                of items that matched the search criteria
              style: simple
              explode: false
              schema:
                type: integer
                format: int64
              example: 50
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsInfoRelatedToAlliedAccount'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
  /loan-accounts/gl-posting-corrections:
    post:
      tags:
        - General Ledger
      summary: GL posting correction
      description: Create general ledger posting correction
      operationId: createGLPostingCorrection
      parameters:
        - name: uuid
          in: header
          description: >-
            Unique request identifier (generated by channelServices server if
            not provided)
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 36
            minLength: 36
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            type: string
          example: 22585e06-3da4-427e-a4e3-0ad5cd3f0fe9
        - name: organization-id
          in: header
          description: >-
            FIS processing organization ID - the fe/orgId the consumer is
            focused upon
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 1000
        - name: Accept-Language
          in: header
          description: Defines which language sets are accepted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: en-US
        - name: activity-id
          in: header
          description: Service consumer defined, used for tracking purposes.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: myActivityId
        - name: device-id
          in: header
          description: >-
            The device IP address from which the transaction request is
            originated.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 127.0.0.1
        - name: branch-organization-id
          in: header
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within org.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: 1000
        - name: client-metadata
          in: header
          description: Client metadata.
          required: false
          style: simple
          explode: false
          schema:
            minLength: 1
            type: string
          example: '{ "metadata" : true }'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGLPosting'
        required: true
      responses:
        '200':
          description: Successful response
          headers:
            X-Info-Messages:
              description: |
                Array of additional info messages in the format
                ```
                [
                  {
                    "code" : "MessageCode",
                    "message" : "The info message",
                    "service" : "ServiceName",
                    "parameters" : [{
                      "type" : "string", 
                      "code": "string",
                      "value" : "string", 
                      "valueCode" : "string"}]
                  }
                ]
                ```
              style: simple
              explode: false
              schema:
                type: string
              example: >-
                [ {"code"; "MessageCode", "message": "The info message",
                "service" : "ServiceName" } ]
            uuid:
              description: Unique request identifier.
              required: false
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GLPostingResponse'
        '400':
          description: Bad Request
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '404':
          description: Not Found
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Internal Server Error
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '501':
          description: Not Implemented
          headers:
            uuid:
              description: Unique request identifier.
              required: true
              style: simple
              explode: false
              schema:
                maxLength: 36
                minLength: 36
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                type: string
              example: 9730593d-436c-4404-8a51-5afd51ba977a
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
        - default: []
      x-auth-type: Application
      x-throttling-tier: Unlimited
components:
  schemas:
    UnsecuredTermLoanAccount:
      required:
        - basic
        - business
        - ownerships
      type: object
      properties:
        basic:
          $ref: '#/components/schemas/UnsecuredTermAccountBasicDetail'
        business:
          $ref: '#/components/schemas/UnsecuredTermLoanAccount_business'
        payeeOneOf:
          type: object
          description: Contains payee information
          oneOf:
            - required:
                - customerId
              type: object
              properties:
                customerId:
                  type: string
                  description: >-
                    This is the primary customer id of the customer system to
                    which the MBP Deposits is integrated with
                  example: >-
                    Default Integration – MBP Core Deposits by default
                    integrated with FIS Enterprise Customer system
            - required:
                - additionalDetails
                - name
              type: object
              properties:
                name:
                  type: string
                  description: Payee name
                  example: Joe Root
                additionalDetails:
                  type: array
                  description: Array of additional detail
                  items:
                    $ref: '#/components/schemas/AdditionalDetail'
        ownerships:
          type: array
          description: Account ownership detail
          items:
            $ref: '#/components/schemas/UnsecuredTermAccountOwnership'
        officers:
          type: array
          description: Array of officer info
          items:
            $ref: '#/components/schemas/OfficerInfo'
        accountToAccountRelationships:
          type: array
          description: Array of account relationship
          items:
            $ref: '#/components/schemas/UnsecuredTermAccountToAccountRelation'
        sameAsCashOneOf:
          type: object
          description: Same as Cash One of
          oneOf:
            - required:
                - endDateOption
                - termType
                - termValue
              type: object
              properties:
                termType:
                  $ref: '#/components/schemas/TermType'
                termValue:
                  minimum: 1
                  type: integer
                  description: >-
                    Term value identifies the actual number of days or months or
                    year.
                  format: int64
                  example: 1
                endDateOption:
                  type: string
                  description: >-
                    The specific date on which same-as-cash period ends. Either
                    end date or term should be passed, but not both.
                  example: Account Effective Date, First Payment Due Date
            - required:
                - endDate
              type: object
              properties:
                endDate:
                  pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
                  type: string
                  description: Same as cash period end date
                  format: date
                  example: '2021-01-01'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: '3'
      description: Contains data for creating unsecured loan account.
    UnsecuredTermLoanAccountInfo:
      required:
        - accountSummary
        - basic
      type: object
      properties:
        accountSummary:
          $ref: '#/components/schemas/UnsecuredTermLoanAccountInfo_accountSummary'
        basic:
          $ref: '#/components/schemas/BasicDetail'
        securedIndicator:
          type: boolean
          description: Indicates whether the account is secured or not
          example: true
        ownerships:
          type: array
          description: Array of ownership info
          items:
            $ref: '#/components/schemas/AccountOwnership'
        business:
          $ref: '#/components/schemas/Business'
        skipPayments:
          type: array
          description: Array of skip payment info
          items:
            $ref: '#/components/schemas/SkipPayment_1'
        repaymentSchedule:
          $ref: '#/components/schemas/UnsecuredTermLoanAccountInfo_repaymentSchedule'
        accountToAccountRelationships:
          type: array
          description: Array of account relationship
          items:
            $ref: '#/components/schemas/AccountToAccountRelation'
        officers:
          type: array
          description: Array of officer info
          items:
            $ref: '#/components/schemas/OfficerInfo'
        balance:
          $ref: '#/components/schemas/UnsecuredTermLoanAccountInfo_balance'
        activity:
          $ref: '#/components/schemas/Activity'
        nonSufficientFundCounters:
          type: array
          description: Array of non sufficient fund counters
          items:
            $ref: >-
              #/components/schemas/UnsecuredTermLoanAccountInfo_nonSufficientFundCounters
        repaymentModificationOverPaymentNumberToDate:
          type: array
          description: >-
            Number of times repayment modification have been processed due to
            over payment
          items:
            $ref: '#/components/schemas/PeriodTypeAndDefaultNumber'
        sameAsCash:
          $ref: '#/components/schemas/UnsecuredTermLoanAccountInfo_sameAsCash'
      description: Contains data for a unsecured term loan account.
    SecuredTermLoanAccount:
      required:
        - basic
        - business
        - ownerships
      type: object
      properties:
        basic:
          $ref: '#/components/schemas/AccountBasicDetail'
        business:
          $ref: '#/components/schemas/SecuredTermLoanAccount_business'
        payeeOneOf:
          type: object
          description: Contains payee information
          oneOf:
            - required:
                - customerId
              type: object
              properties:
                customerId:
                  type: string
                  description: >-
                    This is the primary customer id of the customer system to
                    which the MBP Deposits is integrated with
                  example: >-
                    Default Integration – MBP Core Deposits by default
                    integrated with FIS Enterprise Customer system
            - required:
                - additionalDetails
                - name
              type: object
              properties:
                name:
                  type: string
                  description: Payee name
                  example: Joe Root
                additionalDetails:
                  type: array
                  description: Array of additional detail
                  items:
                    $ref: '#/components/schemas/AdditionalDetail'
        ownerships:
          type: array
          description: Account ownership detail
          items:
            $ref: '#/components/schemas/AccountOwnership'
        officers:
          type: array
          description: Array of officer info
          items:
            $ref: '#/components/schemas/OfficerInfo'
        accountToAccountRelationships:
          type: array
          description: Array of account relationship
          items:
            $ref: '#/components/schemas/SecuredTermAccountToAccountRelation'
        sameAsCashOneOf:
          type: object
          description: Same as Cash One of
          oneOf:
            - required:
                - endDateOption
                - termType
                - termValue
              type: object
              properties:
                termType:
                  $ref: '#/components/schemas/TermType'
                termValue:
                  minimum: 1
                  type: integer
                  description: >-
                    Term value identifies the actual number of days or months or
                    year.
                  format: int64
                  example: 1
                endDateOption:
                  type: string
                  description: >-
                    The specific date on which same-as-cash period ends. Either
                    end date or term should be passed, but not both.
                  example: Account Effective Date, First Payment Due Date
            - required:
                - endDate
              type: object
              properties:
                endDate:
                  pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
                  type: string
                  description: Same as cash period end date
                  format: date
                  example: '2021-01-01'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: '3'
      description: Contains data for creating secured loan account
    SecuredTermLoanAccountInfo:
      required:
        - accountSummary
        - basic
      type: object
      properties:
        accountSummary:
          $ref: '#/components/schemas/SecuredTermLoanAccountInfo_accountSummary'
        basic:
          $ref: '#/components/schemas/SecuredLoanBasicDetail'
        securedIndicator:
          type: boolean
          description: Indicates whether the account is secured or not
          example: true
        ownerships:
          type: array
          description: Array of ownership info
          items:
            $ref: '#/components/schemas/AccountOwnership'
        business:
          $ref: '#/components/schemas/SecuredBusiness'
        skipPayments:
          type: array
          description: Array of skip payment info
          items:
            $ref: '#/components/schemas/SkipPayment_1'
        repaymentSchedule:
          $ref: '#/components/schemas/SecuredTermLoanAccountInfo_repaymentSchedule'
        accountToAccountRelationships:
          type: array
          description: Array of account relationship
          items:
            $ref: '#/components/schemas/AccountToAccountRelation'
        officers:
          type: array
          description: Array of officer info
          items:
            $ref: '#/components/schemas/OfficerInfo'
        balance:
          $ref: '#/components/schemas/UnsecuredTermLoanAccountInfo_balance'
        activity:
          $ref: '#/components/schemas/Activity'
        nonSufficientFundCounters:
          type: array
          description: Array of non sufficient fund counters
          items:
            $ref: >-
              #/components/schemas/UnsecuredTermLoanAccountInfo_nonSufficientFundCounters
        repaymentModificationOverPaymentNumberToDate:
          type: array
          description: >-
            Number of times repayment modification have been processed due to
            over payment
          items:
            $ref: '#/components/schemas/PeriodTypeAndDefaultNumber'
        sameAsCash:
          $ref: '#/components/schemas/SecuredTermLoanAccountInfo_sameAsCash'
      description: Contains data for a unsecured term loan account.
    Billing:
      required:
        - bill
        - confirmationValue
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective date
          format: date
          example: '2021-01-01'
        bill:
          $ref: '#/components/schemas/Billing_bill'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: '3'
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains data for updating loan account billings.
    BillSchedule:
      required:
        - billSchedules
        - confirmationValue
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective date
          format: date
          example: '2021-01-01'
        billSchedules:
          type: array
          description: Bill schedules
          items:
            $ref: '#/components/schemas/BillSchedule_billSchedules'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: Customer
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Confirm
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains data for updating bill schedules for loan account.
    BillScheduleCreate:
      required:
        - billSchedules
        - confirmationValue
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective date
          format: date
          example: '2021-01-01'
        billSchedules:
          type: array
          description: Bill schedules
          items:
            $ref: '#/components/schemas/BillScheduleCreate_billSchedules'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: Step 1
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains data for updating bill schedules for loan account.
    RepaymentScheduleCreate:
      type: object
      properties:
        repaymentBalanceType:
          type: string
          description: Repayment balance type
          example: Principal
        paymentFrequencyType:
          type: string
          description: >-
            The frequency at which the payments should be scheduled. The payment
            frequency type defined at the product level should default
          example: EveryMonth
        paymentFrequencyValue:
          type: string
          description: >-
            A component of the payment frequency which identifies the date of
            repayment. The value defined at the product level should default
          example: '5'
        scheduleStartDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Schedule start date
          format: date
          example: '2021-01-01'
        numberOfSchedule:
          minimum: 1
          type: integer
          description: Number of schedule
          format: int64
          example: 4
        firstScheduleDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: First schedule date
          format: date
          example: '2021-01-01'
        scheduleEndDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Schedule end date
          format: date
          example: '2021-01-01'
        amount:
          $ref: '#/components/schemas/Amount'
    BillSchedules:
      required:
        - bills
      type: object
      properties:
        billings:
          type: array
          description: Array of bill detail
          items:
            $ref: '#/components/schemas/BillScheduleInfo'
        financialEntityOperationalTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Financial entity operational timestamp
          format: date-time
          example: '2021-07-11T01:03:49.730403-05:00'
        operatorUTCTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time that the service was completed
          format: date-time
          example: '2021-07-11T06:03:49.730403Z'
        organizationUnitOperationalTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Organization unit operational timestamp
          format: date-time
          example: '2021-07-11T01:03:49.730403-05:00'
      description: Contains details of bill schedule
    BillScheduleInfo:
      required:
        - billScheduleCode
      type: object
      properties:
        billScheduleCode:
          type: string
          description: Code of the billing schedule
          example: PRINANDPROJINT
        billScheduleDescription:
          type: string
          description: Description of the code
          example: PrincipalAndProjectedInterest
        bill:
          $ref: '#/components/schemas/BillScheduleInfo_bill'
      description: Contains bill schedule information
    BasicDetail:
      type: object
      properties:
        accountTitles:
          type: array
          description: Title of the account
          items:
            type: string
            example: Loan Acc
        nickName:
          type: string
          description: Nick name of the account
          example: UNSECURED LENDING ACCOUNT
        branchOrganizationUnitId:
          type: string
          description: >-
            The unique identifier used to identify the branch organization unit
            (OU) within organization
          example: OU001
        currencyCode:
          type: string
          description: The code of currency
          example: USD
        currencyName:
          type: string
          description: Name of the currency
          example: US Dollar
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from which account is going to be effective
          format: date
          example: '2021-01-01'
        primaryStatus:
          type: string
          description: Primary status
          example: Active
        secondaryStatus:
          type: string
          description: Secondary status of the account
          example: Normal
        secondaryStatusReason:
          type: string
          description: Reason for the secondary status
          example: InProcess
        secondaryStatusReasonDescription:
          type: string
          description: Description for the secondary status reason
          example: New branch made active
        approvalStatus:
          type: string
          description: Approval status
          example: Approved
        externalAccount:
          $ref: '#/components/schemas/ExternalAccount'
        conversionDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Indicates the date on which the account was converted from legacy
            system
          format: date
          example: '2021-01-01'
        reportToCollectionIndicator:
          type: boolean
          description: Indicates whether account should be reported to collection
          example: true
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains account basic information
    SecuredLoanBasicDetail:
      type: object
      properties:
        accountTitles:
          type: array
          description: Title of the account
          items:
            type: string
            example: Loan Acc
        nickName:
          type: string
          description: Nick name of the account
          example: SECURED LENDING ACCOUNT
        branchOrganizationUnitId:
          type: string
          description: >-
            The unique identifier used to identify the branch organization unit
            (OU) within organization
          example: OU001
        currencyCode:
          type: string
          description: The code of currency
          example: USD
        currencyName:
          type: string
          description: Name of the currency
          example: US Dollar
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from which account is going to be effective
          format: date
          example: '2021-01-01'
        primaryStatus:
          type: string
          description: Primary status
          example: Active
        secondaryStatus:
          type: string
          description: Secondary status of the account
          example: Normal
        secondaryStatusReason:
          type: string
          description: Reason for the secondary status
          example: InProcess
        secondaryStatusReasonDescription:
          type: string
          description: Description for the secondary status reason
          example: New branch made active
        approvalStatus:
          type: string
          description: Approval status
          example: Approved
        externalAccount:
          $ref: '#/components/schemas/ExternalAccount'
        conversionDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Indicates the date on which the account was converted from legacy
            system
          format: date
          example: '2021-01-01'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains secured loan basic information
    ChargeInterest:
      type: object
      properties:
        rate:
          $ref: '#/components/schemas/RateUpdate'
        charges:
          type: array
          description: Charges
          items:
            $ref: '#/components/schemas/ChargeInterest_charges'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: Step 2
      description: Charge interest information
    InterestRate:
      type: array
      description: Array of interest rate
      items:
        $ref: '#/components/schemas/InterestRate_inner'
    ChargeFee:
      required:
        - charges
      type: object
      properties:
        charges:
          type: array
          description: Charge applicable
          items:
            $ref: '#/components/schemas/ChargeFee_charges'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: Step 2
      description: Charge fee information
    FeeUpdate:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        rate:
          type: number
          description: Rate
          format: double
          example: 10
        financedIndicator:
          type: boolean
          description: Indicates whether it is financed
          example: true
      description: Fee update information
    FeeCreate:
      type: object
      properties:
        rate:
          type: number
          description: Percentage of base balance to be charged as fee
          format: double
          example: 12
        calculationFrequency:
          $ref: '#/components/schemas/TypeValueOptional'
        amount:
          $ref: '#/components/schemas/Amount'
        financedIndicator:
          type: boolean
          description: Indicates whether it is financed
          example: true
      description: Fee creation information
    ChargeFeeCreate:
      required:
        - charges
      type: object
      properties:
        charges:
          type: array
          description: Charge applicable
          items:
            $ref: '#/components/schemas/ChargeFeeCreate_charges'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: Step 2
      description: Charge fee information
    ChargeInfo:
      type: object
      properties:
        customerInducedIndicator:
          type: boolean
          description: Indicates if this transaction is initiated by customer request
          example: true
        rate:
          $ref: '#/components/schemas/RateInfo'
        charges:
          type: array
          description: Array of charges
          items:
            $ref: '#/components/schemas/ChargeInfo_charges'
        operationalTimestamp:
          $ref: '#/components/schemas/OperationalTimestamp'
      description: Contains charge interest and fee details
    FeeInfo:
      type: object
      properties:
        calculationFrequency:
          $ref: '#/components/schemas/TypeValueOptional'
        collectionFrequency:
          $ref: '#/components/schemas/TypeValueOptional'
        charge:
          $ref: '#/components/schemas/Amount'
        counter:
          minimum: 1
          type: integer
          description: Count of transactions performed of a specific type
          format: int64
          example: 2
        applicableCharge:
          $ref: '#/components/schemas/Amount'
        rate:
          type: number
          description: Percentage of base balance to be charged as fee
          format: double
          example: 10
        applicableRate:
          type: number
          description: Sum of charge(amount or rate), deviation(amount or rate)
          format: double
          example: 10
        balanceBasedTier:
          $ref: '#/components/schemas/BalanceBasedTier'
        periodicBalances:
          type: array
          description: Array of periodic balance
          items:
            $ref: '#/components/schemas/PeriodicBalanceToDate'
        reasonCode:
          type: string
          description: Reason code
          example: Documentation
        reasonDescription:
          type: string
          description: A description of the reason code
          example: Documentation fee
        deviations:
          type: array
          description: Array of fee deviation
          items:
            $ref: '#/components/schemas/FeeDeviation'
        financedIndicator:
          type: boolean
          description: Indicates whether it is Financed
          example: true
        includeInPayoffIndicator:
          type: boolean
          description: Indicates whether it should be included in payoff
          example: true
        manualFeeAssessmentIndicator:
          type: boolean
          description: Indicates if manual fee assessment is allowed on an account
          example: true
        amortizationFee:
          $ref: '#/components/schemas/AmortizationFee'
      description: Contains fee info
    AmortizationFee:
      type: object
      properties:
        periodicAmortizationAmount:
          $ref: '#/components/schemas/Amount'
        effectiveInterestRate:
          type: number
          description: Effective interest rate
          format: double
          example: 10
        previousAccrualDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Previous accrual date
          format: date
          example: '2021-01-01'
        nextAccrualDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Next accrual date
          format: date
          example: '2021-01-01'
      description: Contains the amortized fee details on the account for FASB/ IFRS 9
    ChargeRateInfo:
      required:
        - current
      type: object
      properties:
        current:
          $ref: '#/components/schemas/ChargeRateInfo_current'
        currentMargin:
          $ref: '#/components/schemas/ChargeRateInfo_currentMargin'
        deviations:
          type: array
          description: Array of deviation
          items:
            $ref: '#/components/schemas/Deviation'
        applicableRate:
          type: number
          description: >-
            Applicable rate. Sum of charge(amount or rate), deviation(amount or
            rate) and if applicable margin (spread)
          format: double
          example: 10
        balanceBasedTier:
          $ref: '#/components/schemas/BalanceBasedTier'
        financedIndicator:
          type: boolean
          description: Indicates whether it is Financed
          example: true
        includeInPayoffIndicator:
          type: boolean
          description: Indicates whether it should be included in payoff
          example: true
        interestType:
          type: string
          description: Specifies interest type
          example: V,F
        accrualStartDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Indicates when the accrual needs to start on an account.This field
            cannot be updated once account is activated i.e., Account status is
            "Active" and "Normal"
          format: date
          example: '2021-01-01'
        periodicBalances:
          type: array
          description: Array of periodic balance
          items:
            $ref: '#/components/schemas/PeriodicBalanceToDate'
      description: Charge rate information
    PeriodicBalanceToDate:
      type: object
      properties:
        balanceCode:
          type: string
          description: Balance attribute code
          example: PrincipalRecoveries
        balanceDescription:
          type: string
          description: Balance attribute code
          example: NonAccrualInterest
        balances:
          type: array
          description: Array of balance amount
          items:
            $ref: '#/components/schemas/PeriodBalanceAmount'
        priorPeriodBalances:
          type: array
          description: Array of prior periodic balance amount
          items:
            $ref: '#/components/schemas/PeriodBalanceAmount'
      description: Contains periodic balance information
    BalanceBasedTier:
      type: object
      properties:
        minimum:
          $ref: '#/components/schemas/Amount'
        maximum:
          $ref: '#/components/schemas/Amount'
      description: Contains balance based tier information
    Deviation:
      type: object
      properties:
        code:
          type: string
          description: Deviation code
          example: DEV
        description:
          type: string
          description: Description of the deviation code
          example: DEV
        operator:
          type: string
          description: >-
            Indicates whether the value should be added or subtracted from the
            base deviation value
          example: Add
        rate:
          type: number
          description: Devaition rate
          format: double
          example: 10
    FeeDeviation:
      type: object
      properties:
        code:
          type: string
          description: Deviation code
          example: DEV
        description:
          type: string
          description: Description of the deviation code
          example: DEV
        operator:
          type: string
          description: >-
            Indicates whether the value should be added or subtracted from the
            base deviation value
          example: Add
        amount:
          $ref: '#/components/schemas/Amount'
        rate:
          type: number
          description: Devaition rate
          format: double
          example: 10
        percentage:
          type: number
          description: Devaition percentage
          format: double
          example: 10
    RateUpdate:
      required:
        - primaryFrequency
      type: object
      properties:
        resetMaturityRecalculationOption:
          type: string
          description: >-
            Rate reset maturity recalculation option. Option to determine
            whether the maturity date of the account needs to be recalculated or
            the repayment amount needs to be recalculated.
          example: Recalculate Maturity Date, Recalculate Payment Amount
        primaryFrequency:
          $ref: '#/components/schemas/TypeValueOptional'
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Date from which the rate change is going to be effective on the
            account
          format: date
          example: '2021-01-01'
      description: Contains rate update information
    NonAccrualDetail:
      required:
        - confirmationValue
        - effectiveDate
        - nonAccrual
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective date of charge-off non accrual
          format: date
          example: '2021-01-01'
        status:
          type: string
          description: Non accrual status
          example: Accrual, Non Accrual, Partial Non Accrual
        nonAccrual:
          $ref: '#/components/schemas/NonAccrual'
        balances:
          type: array
          description: Array of balance detail
          items:
            $ref: '#/components/schemas/AdditionalBalance'
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains non accrual details
    NonAccrualCreate:
      required:
        - confirmationValue
        - effectiveDate
        - status
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective date of charge-off non accrual
          format: date
          example: '2021-01-01'
        status:
          type: string
          description: Non accrual status
          example: Accrual, Non Accrual, Partial Non Accrual
        reason:
          type: string
          description: Reason for putting the account in non-accrual status
          example: Bankruptcy, Judgement
        balances:
          type: array
          description: Array of balance detail
          items:
            $ref: '#/components/schemas/AdditionalBalance'
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains non accrual details
    ChargeOffCreate:
      required:
        - confirmationValue
        - status
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective date of charge-off non accrual
          format: date
          example: '2021-01-01'
        status:
          type: string
          description: Charge-off status
          example: Charge Off/ Partial Charge Off
        reason:
          type: string
          description: Reason for putting the account in charge off status
          example: Bankruptcy, Judgement
        balances:
          type: array
          description: Array of balance detail
          items:
            $ref: '#/components/schemas/AdditionalBalance'
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains charge off details
    ChargeOffDetail:
      required:
        - chargeOff
        - confirmationValue
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective date of charge-off non accrual
          format: date
          example: '2021-01-01'
        status:
          type: string
          description: Charge-off status
          example: Charge Off/ Partial Charge Off
        chargeOff:
          $ref: '#/components/schemas/ChargeOff'
        balances:
          type: array
          description: Array of balance detail
          items:
            $ref: '#/components/schemas/AdditionalBalance'
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains charge off details
    NonAccrualChargeOffInfo:
      type: object
      properties:
        accrualStatus:
          type: string
          description: Accrual status of the loan
          example: Accrual
        accrualStatusChangeDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Accrual status change date. Date when the accrual status was changed
            on a loan account
          format: date
          example: '2021-01-01'
        accountSecondaryStatus:
          type: string
          description: Account secondary status
          example: Normal
        secondaryStatusChangeDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Secondary status changed date
          format: date
          example: '2021-01-01'
        lastMonetaryTransactionDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Last monetary transaction date
          format: date
          example: '2021-01-01'
        nonAccrual:
          $ref: '#/components/schemas/NonAccrual_1'
        chargeOff:
          $ref: '#/components/schemas/ChargeOffInfo'
        unpostedPayment:
          $ref: '#/components/schemas/Amount'
        unpostedPaymentDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Unposted payment date
          format: date
          example: '2021-01-01'
        institutionalView:
          $ref: '#/components/schemas/BalanceView'
        customerView:
          $ref: '#/components/schemas/BalanceView'
        periodicBalances:
          type: array
          description: Array of perodic balance
          items:
            $ref: '#/components/schemas/PeriodicBalanceToDate'
        lastRecovery:
          $ref: '#/components/schemas/LastRecovery'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
        operationalTimestamp:
          $ref: '#/components/schemas/OperationalTimestamp'
      description: Contains non accrual charge off information
    LastRecovery:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Last recovery date
          format: date
          example: '2021-01-01'
      description: Contains last recovery details on the account
    ChargeOffInfo:
      type: object
      properties:
        autoChargeOffIndicator:
          type: boolean
          description: Indicates whether automatic charge-off is allowed on an account
          example: true
        billChargeOffIndicator:
          type: boolean
          description: >-
            Indicates whether bill charge-off is allowed on an account when in
            charge-off
          example: true
        autoRecoveryIndicator:
          type: boolean
          description: >-
            Indicates whether auto recovery is allowed on an account when in
            charge-Off/partial charge-Off
          example: true
        reason:
          type: string
          description: Reason for putting the account in charge off status
          example: Bankruptcy, Judgement
        shadowAccountingIndicator:
          type: boolean
          description: Indicates whether the loan is utilizing the dual accounting feature.
          example: true
      description: Contains charge off information
    PastDueInfo:
      type: object
      properties:
        firstPaymentDefaultDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date when the account first went in to delinquency
          format: date
          example: '2021-01-01'
        daysPastDue:
          minimum: 0
          type: integer
          description: Number of days the account is delinquent
          format: int64
          example: 2
        paymentsDue:
          minimum: 0
          type: integer
          description: Number of payments due as on current date
          format: int64
          example: 2
        projectedDelinquencyDay:
          minimum: 0
          type: integer
          description: >-
            Projection for the accounts delinquency days state as on the End Of
            Month (EOM)
          format: int64
          example: 2
        consecutivePaymentsWithoutLateCharge:
          minimum: 0
          type: integer
          description: Number of consecutive payments where late charge is not processed
          format: int64
          example: 2
        delinquencyBoundaryCounters:
          type: array
          description: Array of delinquency boundary counter
          items:
            $ref: '#/components/schemas/DelinquencyBoundaryCounter'
        dueAmount:
          $ref: '#/components/schemas/DueAmount'
        lastPaymentAmount:
          $ref: '#/components/schemas/Amount'
        lastPaymentCreditedDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date when the account received the most recent credit
          format: date
          example: '2021-01-01'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Past due information of an account
    DelinquencyBoundaryCounter:
      required:
        - description
        - periodTypeCounters
        - type
        - value
      type: object
      properties:
        type:
          type: string
          description: Boundary type
          example: Category01
        value:
          type: string
          description: Boundary value
          example: '10'
        description:
          type: string
          description: Boundary description
          example: Number of Days Category 1
        periodTypeCounters:
          type: array
          description: Array of period type counter
          items:
            $ref: '#/components/schemas/PeriodTypeCounter'
      description: Contains delinquency boundary information
    PeriodTypeCounter:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: Period type code
          example: Loanslife
        description:
          type: string
          description: Period type description
          example: Category01
        counterForBoundary:
          type: string
          description: >-
            Applicable count for period type boundary. Specifies billing cycle
            for delinquency categories to be updated
          example: '0'
    DueAmount:
      required:
        - totalPastDue
      type: object
      properties:
        pastDue:
          type: array
          description: Array of past due detail
          items:
            $ref: '#/components/schemas/AdditionalBalance'
        currentDue:
          type: array
          description: Array of current due detail
          items:
            $ref: '#/components/schemas/AdditionalBalance'
        totalPastDue:
          $ref: '#/components/schemas/Amount'
      description: Loan amount outstanding
    USCompliance:
      required:
        - confirmationValue
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Date from which the credit bureau details are applicable for the
            account
          format: date
          example: '2021-01-01'
        serviceMemberBenefitOneOf:
          type: object
          description: Contains service member benefit information
          oneOf:
            - $ref: '#/components/schemas/SCRAProtection'
            - $ref: '#/components/schemas/MLAProtection'
        creditBureauReporting:
          $ref: '#/components/schemas/CreditBureauReporting'
        taxReporting:
          $ref: '#/components/schemas/TaxReporting'
        ffiecComplianceCallCode:
          type: string
          description: FFIEC Compliance Call Code
          example: 09B1_ALLOTHRLNNOTSECRLST
        fdicCode:
          type: string
          description: FDIC code
          example: 6E_OTHRINSTLLNFORHSHDFMLETC
        complianceGeneralForm:
          $ref: '#/components/schemas/ComplianceGeneralFormDetail'
        craReportingIndicator:
          type: boolean
          description: Community re-investment act. Indicates if account is CRA reportable
          example: false
        regulation1098Reporting:
          $ref: '#/components/schemas/USCompliance_regulation1098Reporting'
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Confirm
          enum:
            - Cancel
            - Confirm
            - Draft
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: Step 2
    ComplianceGeneralFormDetail:
      type: object
      properties:
        troubledDebt:
          type: string
          description: Specifies whether the loan is troubled debt or not
          example: 'Y'
        troubledDebtDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date on which the loan is marked as troubled
          format: date
          example: '2021-01-01'
        troubledDebtSubsequentDefault:
          type: string
          description: Specifies whether the loan is troubled debt subsequent default
          example: 'N'
        renegotiated:
          type: string
          description: Specifies whether the loan is renegotiated or not
          example: 'Y'
        restructuredLoanIndicator:
          type: string
          description: Indicates whether the loan is restructured or not
          example: 'Y'
        reclassificationStatus:
          type: string
          description: Specifies the status of loan reclassification
          example: SubStandard
        reclassificationDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date on which the loan is marked as reclassification
          format: date
          example: '2021-01-01'
      description: Contains compliance general form detail
    SCRAProtection:
      required:
        - courtProceedingIndicator
      type: object
      properties:
        scraProtected:
          type: string
          description: Specifies whether the Account is SCRA Protected
          example: 'false'
        courtProceedingIndicator:
          type: boolean
          description: >-
            Indicates whether creditor has applied to the courts to challenge
            servicemember's right to invoke SCRA protection
          example: true
        courtDecisionDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date when court decision was rendered
          format: date
          example: '2021-01-01'
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from when the account is SCRA protected
          format: date
          example: '2021-01-01'
    MLAProtection:
      required:
        - mlaProtected
      type: object
      properties:
        mlaProtected:
          type: string
          description: MLA protected
          example: 'true'
        militaryAnnualPercentageRate:
          type: number
          description: Military APR
          format: double
          example: 35
    CreditBureauReporting:
      type: object
      properties:
        negativeReportingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Negative reporting date
          format: date
          example: '2021-01-01'
        reporting:
          $ref: '#/components/schemas/Reporting'
        account:
          $ref: '#/components/schemas/CreditBureauAccount'
        paymentHistory:
          $ref: '#/components/schemas/PaymentHistory'
        customers:
          type: array
          description: Array of customer detail
          items:
            $ref: '#/components/schemas/CreditBureauCustomer'
      description: Contains credit bureau report information
    Reporting:
      required:
        - reportingIndicator
      type: object
      properties:
        reportingIndicator:
          type: string
          description: Indicates whether this account is reported to credit bureaus
          example: 'false'
        complianceConditionCode:
          type: string
          description: >-
            Compliance condition code. Allows the reporting of a condition that
            is required for legal compliance
          example: XD_AccClsdDsptIP
        specialCommentsCode:
          type: string
          description: Special comment code
          example: AB_DebtPaidTruIns
      description: Contains reporting information
    CreditBureauAccount:
      required:
        - portfolioType
        - status
        - type
      type: object
      properties:
        type:
          type: string
          description: Account type
          example: 01_Unsecured
        status:
          type: string
          description: Account status
          example: 11_CurAcct0to29DaysPDue
        paymentRating:
          type: string
          description: Payment rating
          example: 6_CurAcct180DaysPDue
        portfolioType:
          type: string
          description: Portfolio type
          example: I_Installment
        consumerResponsibleIndicator:
          type: boolean
          description: >-
            Indicates whether the customer is responsible for the outstanding
            balance amount
          example: true
      description: Contains credit bureu account information
    PaymentHistory:
      type: object
      properties:
        month:
          minimum: 0
          type: integer
          description: Payment history of the month
          format: int64
          example: 202802
        value:
          type: string
          description: >-
            Specifies for which month, the payment history needs to
            altered/entered. Should be in YYYYMM format
          example: 6_CurAcct180DaysPDue
        histories:
          type: array
          description: Array of history detail
          items:
            $ref: '#/components/schemas/History'
      description: Contains payment history information
    History:
      type: object
      properties:
        period:
          type: string
          description: Payment history period
          example: '202711'
        value:
          type: string
          description: Payment history value
          example: '0'
    CreditBureauCustomer:
      required:
        - customerId
        - customerReportToCreditBureauCode
        - ecoaCode
        - roleType
      type: object
      properties:
        customerId:
          type: string
          description: Customer id
          example: '70000021892'
        name:
          type: string
          description: Customer name
          example: Mr Johnny baristow
        roleType:
          type: string
          description: Role type
          example: Borrower
        customerReportToCreditBureauCode:
          type: string
          description: >-
            Specifies whether this customer on the account is reported to credit
            bureaus
          example: 'true'
        ecoaCode:
          type: string
          description: >-
            Specifies the relationship of the customer to the account in
            compliance with Equal credit Opportunity Act (ECOA)
          example: 3_AuthUsr
    CreditBureauCustomerChange:
      required:
        - customerId
        - customerReportToCreditBureauCode
        - ecoaCode
        - roleType
      type: object
      properties:
        customerId:
          type: string
          description: Customer id
          example: '70000021893'
        roleType:
          type: string
          description: Role type
          example: Borrower
        customerReportToCreditBureauCode:
          type: string
          description: >-
            Specifies whether this customer on the account is reported to credit
            bureaus
          example: 'true'
        creditBureauConsumerInformation:
          type: string
          description: >-
            Special condition of the account that applies to the
            primary/associated consumer.The special condition can be a
            Bankruptcy is filed, discharged, dismissed or withdrawn
          example: Discharged
        ecoaCode:
          type: string
          description: >-
            Specifies the relationship of the customer to the account in
            compliance with Equal credit Opportunity Act (ECOA)
          example: 1_Indv
    TaxReporting:
      required:
        - debtForgivenAmount
        - debtForgivenDate
        - eventCode
        - interestForgivenAmount
        - postingId
      type: object
      properties:
        debtForgivenAmount:
          type: number
          description: >-
            Specifies the total amount forgiven which includes principal and
            interest
          format: double
          example: 100
        interestForgivenAmount:
          type: number
          description: Interest forgiven amount
          format: double
          example: 10
        postingId:
          type: string
          description: Posting identifier
          example: Credit
        debtForgivenDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Debt forgiven date
          format: date
          example: '2021-01-01'
        eventCode:
          type: string
          description: Event code. Reason for forgiving debt
          example: B_OtherJudicialDebtRelief
      description: Contains tax reporting information
    DelinquencyPromoExtension:
      required:
        - confirmationValue
        - extensionFeeApplicableIndicator
        - numberOfPaymentsToExtend
        - paymentDateOfExtension
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date on which this extension needs to be effective
          format: date
          example: '2021-01-01'
        extensionFeeApplicableIndicator:
          type: boolean
          description: >-
            Indicates whether extension fee is going to be assessed or not when
            this extension would be processed
          example: true
        errorCorrectionIndicator:
          type: boolean
          description: >-
            Indicates whether the current extension, which is getting processed,
            is due to an error commited by the bank
          example: true
        extensionType:
          type: string
          description: Type of extension which is to be procesed on the loan account
          example: DelinquencyExtension
        numberOfPaymentsToExtend:
          minimum: 1
          type: integer
          description: >-
            Number of payments which is requested to be extended for either
            promotional extension or delinquency extension
          format: int64
          example: 2
        firstPaymentDateAfterExtension:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: First payment date after extension
          format: date
          example: '2021-01-01'
        paymentDateOfExtension:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Payment date of extension. This is the starting date of payment that
            is getting extended
          format: date
          example: '2021-01-01'
        earnDuringExtensionIndicator:
          type: boolean
          description: Specifies whether earning should continue during extension or not
          example: true
          default: true
        billDuringExtensionIndicator:
          type: boolean
          description: >-
            Specifies whether interest should be billed during extnesion period
            or not
          example: true
        billScheduleCode:
          type: string
          description: >-
            Billing schedule code. Details related to billing schedule if
            interest is to be billed during extension period. This field is
            applicable only when 'billDuringExtensionIndicator' is true. The
            default value is No
          example: 'false'
        extendSkippedMonthIndicator:
          type: boolean
          description: >-
            Indicates whether skip months are carried over to this extension
            during the period past the original maturity date
          example: true
        delinquencyCureType:
          type: string
          description: Specifies the type of Delinquency Extension processed on an account.
          example: DeferralExtension
        decreaseInterestAdjustment:
          type: boolean
          description: >-
            Specifies if Interest is waived as part of Deferral/Re-age
            Extension.
          example: true
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains delinquency or promo extension information
    PaymentDateExtension:
      required:
        - confirmationValue
        - extensionFeeApplicableIndicator
        - firstPaymentDateAfterExtension
        - newPaymentFrequencyType
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date on which this extension needs to be effective
          format: date
          example: '2021-01-01'
        extensionFeeApplicableIndicator:
          type: boolean
          description: >-
            Indicates whether extension fee is going to be assessed or not when
            this extension would be processed
          example: true
        errorCorrectionIndicator:
          type: boolean
          description: >-
            Indicates whether the current extension, which is getting processed,
            is due to an error commited by the bank
          example: true
        extensionType:
          type: string
          description: Type of extension which is to be procesed on the loan account
          example: PaymentDateChangeExtn
        newPaymentFrequencyType:
          type: string
          description: >-
            The new payment frequency type which is going to be applicable once
            a payment date change request is processed on the loan account
          example: EveryMonth
        newPaymentFrequencyValue:
          minimum: 1
          type: integer
          description: New payment frequency value
          format: int64
          example: 13
        firstPaymentDateAfterExtension:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The first payment after extension when a payment date change request
            is succesfully processed on the loan account
          format: date
          example: '2021-01-01'
        paymentDateOfExtension:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Payment date of extension. This is the starting date of payment that
            is getting extended
          format: date
          example: '2021-01-01'
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains payment date change extension
    Extension:
      type: object
      properties:
        delinquency:
          $ref: '#/components/schemas/DelinquencyExtension'
        promotional:
          $ref: '#/components/schemas/PromotionalExtension'
        paymentDateChange:
          $ref: '#/components/schemas/PaymentDateChangeExtension'
        extensionSpecifics:
          type: array
          description: Array of extension specific
          items:
            $ref: '#/components/schemas/ExtensionSpecific'
        lastExtension:
          $ref: '#/components/schemas/LastExtension'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
        operationalTimestamp:
          $ref: '#/components/schemas/OperationalTimestamp'
      description: Loan account extension information
    DelinquencyExtension:
      type: object
      properties:
        yearToDateNumber:
          minimum: 0
          type: integer
          description: >-
            Delinquency extension number-YTD. Number of delinquency extension
            allowed in a calendar year
          format: int64
          example: 2
        lifeToDateNumber:
          minimum: 0
          type: integer
          description: >-
            Delinquency extension number-LTD. Number of delinquency extensions
            allowed during life of the loan
          format: int64
          example: 5
        yearToDatePayment:
          minimum: 0
          type: integer
          description: >-
            Delinquency extension payment-YTD. Number of  payment terms allowed
            to be extended, as part of delinquency extension(s), in a calendar
            year
          format: int64
          example: 5
        lifeToDatePayment:
          minimum: 0
          type: integer
          description: >-
            Delinquency extension payment-LTD. Number of payment terms allowed
            to be extended, as part of delinquency extension(s), during the life
            of the loan
          format: int64
          example: 20
        lengthPayment:
          minimum: 0
          type: integer
          description: >-
            Number of payments terms allowed to be extended during each
            delinquency extension
          format: int64
          example: 5
        consecutiveExtensionsWithoutPayment:
          minimum: 0
          type: integer
          description: >-
            Number of delinquency extensions allowed to be processed
            consecutively without any payment being received on the loan account
          format: int64
          example: 2
        paymentBeforeFirstExtension:
          minimum: 0
          type: integer
          description: >-
            Number of payments received on the loan account ( including the
            payments made under tolernace) before first deliqneuncy extension
            would be allowed on the loan account
          format: int64
          example: 5
      description: Loan account delinquency extension information
    PromotionalExtension:
      type: object
      properties:
        yearToDateNumber:
          minimum: 0
          type: integer
          description: Number of promotional extension allowed in a calendar year
          format: int64
          example: 2
        lifeToDateNumber:
          minimum: 0
          type: integer
          description: Number of promotional extensions allowed during life of the loan
          format: int64
          example: 5
        lengthPayment:
          minimum: 0
          type: integer
          description: >-
            Number of payments terms allowed to be extended during each
            promotional extension
          format: int64
          example: 5
        paymentBeforeFirstExtension:
          minimum: 0
          type: integer
          description: >-
            Number of payments received on the loan account ( including the
            payments made under tolernace) before first promotional extension
            would be allowed on the loan account
          format: int64
          example: 2
      description: Loan account promotional extension information
    PaymentDateChangeExtension:
      type: object
      properties:
        yearToDateNumber:
          minimum: 0
          type: integer
          description: Number of payment date change extension allowed in a calendar year
          format: int64
          example: 2
        lifeToDateNumber:
          minimum: 0
          type: integer
          description: >-
            Number of payment date change extensions allowed during life of the
            loan
          format: int64
          example: 5
        lengthDay:
          minimum: 0
          type: integer
          description: >-
            Length in days that is allowed to be extended every time a payment
            date change extension is processed on the loan account. This is
            calculated as the difference between new maturity date( after
            extension) and current maturity date ( before extension)
          format: int64
          example: 5
      description: Contains payment date change extension information
    ExtensionSpecific:
      type: object
      properties:
        type:
          type: string
          description: Extension type
          example: DelinquencyExtension
        toDates:
          type: array
          description: Array of extension to date
          items:
            $ref: '#/components/schemas/ExtensionToDate'
        specifics:
          type: array
          description: Array of extension effective date
          items:
            $ref: '#/components/schemas/ExtensionEffectiveDated'
        delinquencyCureType:
          type: string
          description: Delinquency Cure Type
          example: DeferralExtension
      description: Extension type specific details
    ExtensionToDate:
      type: object
      properties:
        periodType:
          type: string
          description: >-
            Name of the period for which corresponding type and number would be
            displayed
          example: Delinquency Payment, Delinquency Number, Payment Date Change Number
        periodName:
          type: string
          description: Type of counter
          example: DelinquencyPayment
        number:
          type: integer
          description: Number
          format: int64
          example: 2
      description: Extension to date. Counters related to each extension type
    ExtensionEffectiveDated:
      required:
        - transactionReferenceNumber
      type: object
      properties:
        transactionReferenceNumber:
          type: string
          description: Transaction reference number
          example: '409025698'
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective date on which extension is to be processed
          format: date
          example: '2028-02-21'
        processingStatus:
          type: string
          description: Processing status of the extension
          example: Reversed
        extensionFeeAssessedIndicator:
          type: boolean
          description: Indicates if the extension fee has been assessed for this extension
          example: true
        errorCorrectionIndicator:
          type: boolean
          description: >-
            Indicates whether this extension is been processed to correct an
            error commited by the financial institution
          example: true
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
        decreaseInterestAdjustmentIndicator:
          type: boolean
          description: Decrease Interest Adjustment
          example: true
      description: >-
        Extension related detail for each extension under specific extension
        type
    LastExtension:
      type: object
      properties:
        extensionType:
          type: string
          description: Type of extension processed last on the loan account
          example: DelinquencyExtension
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date on which the last extension was processed on the loan account
          format: date
          example: '2021-01-01'
      description: Details related to last extension processed on the loan account
    UpdateAccountBasicDetail:
      required:
        - confirmationIndicator
      type: object
      properties:
        customerInducedIndicator:
          type: boolean
          description: Indicates if this transaction is initiated by customer request
          example: true
        accountTitles:
          uniqueItems: true
          type: array
          description: Title of the account
          items:
            type: string
            example: Loan Acc
        nickName:
          type: string
          description: Nick name of the account
          example: SECURED LENDING ACCOUNT
        currencyCode:
          type: string
          description: The code of currency
          example: USD
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from which account is going to be effective
          format: date
          example: '2021-01-01'
        confirmationIndicator:
          type: boolean
          description: Indicates if the changes made are to be confirmed
          example: true
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time the transaction was accepted by a delivery channel
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: Contains details common to accounts
    RelatedAccount:
      required:
        - accounts
      type: object
      properties:
        accounts:
          type: array
          description: Array of related accounts
          items:
            $ref: '#/components/schemas/RelatedAccountRelationship'
      description: Related account information
    RelatedAccountRelationship:
      required:
        - account
        - accountClassificationType
        - confirmationValue
        - relationshipType
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
        accountClassificationType:
          $ref: '#/components/schemas/ClassificationType'
        relationshipType:
          type: string
          description: The type of the relationship
          example: RepaymentAccount
        account:
          $ref: '#/components/schemas/LoanAccount_1'
        percentage:
          type: number
          description: Indicates the percentage applicable for the account relationship
          format: double
          example: 10
        externalAccount:
          $ref: '#/components/schemas/ExternalAccountInformation'
        settlementMethod:
          type: string
          description: >-
            Indicates a valid settlement type as defined for the FE like ACH,
            SWIFT, FEDWIRE
          example: ACH
        receiverName:
          type: string
          description: >-
            Name of the receiver to whom funds are to be made available or from
            whom funds are to be collected
          example: Receiver name
        priority:
          minimum: 1
          type: integer
          description: Indicates the priority of the account relationship
          format: int64
          example: 2
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains account to account relationship details
    UpdateAccountBusinessDetail:
      required:
        - confirmationValue
      type: object
      properties:
        customerInducedIndicator:
          type: boolean
          description: Indicates if this transaction is initiated by customer request
          example: true
        servicingBranch:
          type: string
          description: Branch where account is serviced
          example: OU001
        collateral:
          $ref: '#/components/schemas/TypeValueOptional'
        riskRating:
          type: string
          description: Current risk rating or loan grade on the loan
          example: NoRisk
        riskRatingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of last risk rating update
          format: date
          example: '2021-01-01'
        contractualAmount:
          $ref: '#/components/schemas/Amount'
        financedCharge:
          $ref: '#/components/schemas/Amount'
        originalProceed:
          $ref: '#/components/schemas/Amount'
        reporting:
          $ref: '#/components/schemas/Reporting_1'
        maturity:
          $ref: '#/components/schemas/SecuredTermLoanAccount_business_maturity'
        paymentAppropriationCode:
          type: string
          description: Payment appropriation code
          example: BYINVOICEPROJECTED
        accountClosure:
          $ref: '#/components/schemas/UpdateAccountBusinessDetail_accountClosure'
        stateCode:
          type: string
          description: Indicates the State where the account is been serviced.
          example: CA
        overpaymentMaturityRecalculationOption:
          type: string
          description: >-
            Option to determine whether the maturity date of the account needs
            to be recalculated or the repayment amount needs to be recalculated
          example: Recalculate Maturity Date, Recalculate payment amount
        extension:
          $ref: '#/components/schemas/UpdateAccountBusinessDetail_extension'
        sameAsCashStatus:
          type: string
          description: >-
            Indicates the status of same-as-cash period. This is system driven
            status based on life cycle of same-as-cash.
          example: Active, Processed, Expired, Cancelled
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time the transaction was accepted by a delivery channel
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: Contains business details
    UpdateUnsecuredAccountBusinessDetail:
      required:
        - confirmationValue
      type: object
      properties:
        customerInducedIndicator:
          type: boolean
          description: Indicates if this transaction is initiated by customer request
          example: true
        reportToCollectionIndicator:
          type: string
          description: Indicates whether account should be reported to collection
          example: 'true'
        prepaymentDetail:
          $ref: >-
            #/components/schemas/UpdateUnsecuredAccountBusinessDetail_prepaymentDetail
        servicingBranch:
          type: string
          description: Branch where account is serviced
          example: OU001
        classCode:
          type: string
          description: Code classification of the loan
          example: testdef@
        riskRating:
          type: string
          description: Current risk rating or loan grade on the loan
          example: NoRisk
        riskRatingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of last risk rating update
          format: date
          example: '2021-01-01'
        contractualAmount:
          $ref: '#/components/schemas/Amount'
        financedCharge:
          $ref: '#/components/schemas/Amount'
        originalProceed:
          $ref: '#/components/schemas/Amount'
        reporting:
          $ref: '#/components/schemas/Reporting_1'
        maturity:
          $ref: '#/components/schemas/SecuredTermLoanAccount_business_maturity'
        paymentAppropriationCode:
          type: string
          description: Payment appropriation code
          example: BYBALPYMNTPNI
        accountClosure:
          $ref: '#/components/schemas/UpdateAccountBusinessDetail_accountClosure'
        stateCode:
          type: string
          description: Indicates the State where the account is been serviced.
          example: CA
        extension:
          $ref: '#/components/schemas/UpdateAccountBusinessDetail_extension'
        sameAsCashStatus:
          type: string
          description: >-
            Indicates the status of same-as-cash period. This is system driven
            status based on life cycle of same-as-cash.
          example: Active, Processed, Expired, Cancelled
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time the transaction was accepted by a delivery channel
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: Contains unsecured account business details
    BillingScheduleDefinitionInfo:
      type: object
      properties:
        billingScheduleDefinitions:
          type: array
          description: Array of billing schedule definition
          items:
            $ref: '#/components/schemas/BillingScheduleDefinition'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Contains billing schedule definition details
    BillingScheduleDefinition:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: An unique code to define the billing schedule definition
          example: PRINANDPROJINT
        description:
          type: string
          description: Describes billing schedule definition
          example: PrincipalAndProjectedInterest
        paymentType:
          type: string
          description: Determines whether amortized loans or non-amortized loans
          example: PrincipalAndInterest
        paymentCalculationOption:
          type: string
          description: Determines calculation of bill amount
          example: PrincipalAndProjectedInterest
        billingCalculationMethodDescription:
          type: string
          description: Describes billing calculation method
          example: PrincipalAndProjectedInterest
        defaultIndicator:
          type: boolean
          description: >-
            Indicates whether billing schedule definition code is designated as
            default
          example: true
      description: Contains billing schedule definition code and description details
    MaintenanceTimeInfo:
      type: object
      properties:
        financialEntityOperationalTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Financial entity operational timestamp
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
        operatorUTCTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time that the service was completed
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
        organizationUnitOperationalTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Organization unit operational timestamp
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: Operational timestamp information
    PayOffQuote:
      type: object
      properties:
        settlementQuoteRequestDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date on which the early settlement quote was requested
          format: date
          example: '2021-01-01'
        standardNotificationDay:
          minimum: 0
          type: integer
          description: >-
            Standard number of days of notification to arrive at a settlement
            date
          format: int64
          example: 30
        settlementDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date on which the early payoff is expected
          format: date
          example: '2021-01-01'
        interveningScheduledPayment:
          type: boolean
          description: >-
            To define the regular payments between settlement quote generation
            date and settlement date
          example: true
        earlyPayoffFeeIndicator:
          type: boolean
          description: >-
            Indicator to specify whether a payoff fee is included in the net
            payoff amount
          example: true
      description: Specifies the set of fields that are required to generate a payoff quote
    PayOffBalances:
      required:
        - balanceTypeAndWaiver
        - balances
      type: object
      properties:
        balances:
          type: array
          description: Array of balance detail
          items:
            $ref: '#/components/schemas/AdditionalBalance'
        balanceTypeAndWaiver:
          $ref: '#/components/schemas/PayOffBalances_balanceTypeAndWaiver'
      description: >-
        The payoff balance will be the payment amount necessary to pay a loan in
        full, with all accrued interest and fees and the prepayment penalty, if
        applicable
    UpdateEarlyPayOffQuote:
      required:
        - confirmationValue
      type: object
      properties:
        confirmationValue:
          type: string
          description: Specifies the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
        payOffDataAndStatus:
          type: object
          description: Contains early payoff quote data and status
          oneOf:
            - required:
                - calculations
                - netPayOff
                - settlementCode
              type: object
              properties:
                quote:
                  $ref: '#/components/schemas/PayOffQuote'
                status:
                  type: string
                  description: Status of the payoff quote
                  example: Active
                settlementCode:
                  type: string
                  description: Settlement reason code
                  example: BetterRate
                settlementDescription:
                  type: string
                  description: Settlement reason description
                  example: Account closure
                calculations:
                  type: array
                  description: >-
                    Specifies the details such as outstanding balance,
                    anticipated adjustments, intervening payments and projected
                    balances for principal, interest, all fee on the account,
                    late charge and early settlement fee and Accrued Insurance
                    amount.
                  items:
                    $ref: '#/components/schemas/PayOffBalances'
                netPayOff:
                  $ref: '#/components/schemas/Amount'
                quoteLetterIndicator:
                  type: boolean
                  description: >-
                    Indicates whether a payoff quote letter is required to be
                    generated and sent for the payoff quote
                  example: true
                insuranceRebateDetails:
                  type: array
                  description: Array of insurance rebate details
                  items:
                    $ref: '#/components/schemas/InsuranceRebateDetail'
            - required:
                - quoteId
                - quoteStatus
              type: object
              properties:
                quoteId:
                  minimum: 0
                  type: integer
                  description: Unique identifier used to identify the payoff quote
                  format: int64
                  example: 146002670
                quoteStatus:
                  type: string
                  description: Status of the payoff quote
                  example: Cancelled
      description: Early payoff quote information related to loan account
    SearchEarlyPayOffQuote:
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          maximum: 40
          type: string
          description: The account identifier from the system of record
          example: '10001160000267'
        payOffQuotes:
          type: array
          description: payoff quote for an settlement
          items:
            $ref: '#/components/schemas/SearchPayOffInfo'
      description: Contains early payoff quote information related to account
    SearchPayOffInfo:
      required:
        - payOffQuoteId
        - payoffStatus
        - settlementDate
        - settlementQuoteRequestDate
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier used to identify the PayOff Quote.
          format: int64
          example: 22837
        settlementQuoteRequestDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date on which the early payoff quote was requested.
          format: date
          example: '2021-01-01'
        settlementDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date on which the early payoff is expected.
          format: date
          example: '2021-01-01'
        payoffStatus:
          type: string
          description: The status of the payoff quote.
          example: Active
        netAmount:
          type: number
          description: Amount involved with the entity
          format: double
          example: 100
      description: Indicates the detail set of fields for pay-off details
    EarlyPayOffQuoteInfo:
      required:
        - accountId
        - accountType
        - netPayOff
        - payOffCalculations
        - settlementCode
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          maximum: 40
          type: string
          description: The account identifier from the system of record
          example: '10001370002012'
        payOffQuote:
          $ref: '#/components/schemas/PayOffQuote'
        settlementCode:
          type: string
          description: Settlement reason code
          example: BetterRate
        settlementDescription:
          type: string
          description: Settlement reason description
          example: Account closure
        payOffCalculations:
          type: array
          description: >-
            Specifies the details such as outstanding balance, anticipated
            adjustments, intervening payments and projected balances for
            principal, interest, all fee on the account, late charge and early
            settlement fee and Accrued Insurance amount.
          items:
            $ref: '#/components/schemas/PayOffBalances'
        netPayOff:
          $ref: '#/components/schemas/Amount'
        insuranceRebateDetails:
          type: array
          description: Array of insurance rebate details
          items:
            $ref: '#/components/schemas/InsuranceRebateDetail'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Contains early payoff quote information related to account
    EarlyPayOffQuoteResponse:
      required:
        - accountId
        - accountType
        - netPayOff
        - payOffQuoteId
        - status
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '10001370002020'
        payOffQuoteId:
          minimum: 0
          type: integer
          description: Unique identifier used to identify the payoff quote
          format: int64
          example: 146002670
        status:
          type: string
          description: Status of the payoff quote
          example: Active
        netPayOff:
          $ref: '#/components/schemas/Amount'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Updation response data
    Note:
      required:
        - description
        - subType
        - type
      type: object
      properties:
        type:
          type: string
          description: Note type
          example: Fraud
        subType:
          type: string
          description: Sub type of the note
          example: FIRST DATE OF FRAUD
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the note is effective
          format: date
          example: '2021-01-01'
        description:
          type: string
          description: Descriptive text for the note
          example: Adding notes flow
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the note is no longer in effect
          format: date
          example: '2021-01-01'
      description: Contains information related to account notes or remarks
    UpdateNote:
      required:
        - description
        - id
      type: object
      properties:
        id:
          type: integer
          description: Indicates the unique reference id of the note
          format: int64
          example: 999900209503444
        description:
          type: string
          description: Descriptive text for the note
          example: Adding notes flow
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the note is no longer in effect
          format: date
          example: '2021-01-01'
      description: Contains information related to account notes or remarks
    NoteResponse:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '10001370002079'
        noteId:
          type: integer
          description: The unique reference id of the note
          format: int64
          example: 999900209503444
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Note creation/updation response data for a checking or savings account
    NoteList:
      required:
        - accountId
        - accountType
        - notes
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: SecuredInstallmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '00002450002247'
        notes:
          type: array
          description: Array of note info
          items:
            $ref: '#/components/schemas/NoteInfo'
      description: Contains list of note details
    NoteIdInfo:
      required:
        - accountId
        - accountType
        - note
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: SecuredInstallmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '00002450002247'
        note:
          $ref: '#/components/schemas/NoteInfo'
      description: Contains note details
    NoteInfo:
      required:
        - id
        - subType
        - type
      type: object
      properties:
        id:
          type: integer
          description: Indicates the unique reference id of the note
          format: int64
          example: 999900209503645
        type:
          type: string
          description: Note type
          example: FRAUD
        subType:
          type: string
          description: The sub type of the note
          example: FIRST DATE OF FRAUD
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the note is effective
          format: date
          example: '2021-01-01'
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetailInfo'
      description: Contains information related to account notes or remarks
    AdditionalDetailInfo:
      required:
        - description
      type: object
      properties:
        description:
          type: string
          description: Descriptive text for the note
          example: Adding notes flow
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the note is no longer in effect
          format: date
          example: '2021-01-01'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Additional details
    ExtendedAttributes:
      required:
        - attributes
      type: object
      properties:
        attributes:
          type: array
          description: Array of attribute detail
          items:
            $ref: '#/components/schemas/AttributeDetails'
      description: Contains information related to extended attribute
    AttributeHistory:
      required:
        - actionCode
        - code
        - effectiveDate
      type: object
      properties:
        code:
          type: string
          description: The attribute code associated with the unique attribute definition
          example: PowerOFAttorney
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The effective date of the attribute instance
          format: date
          example: '2021-01-01'
        actionCode:
          type: string
          description: Action code of attribute instance
          example: Add
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The expiration date of the attribute instance
          format: date
          example: '2021-01-01'
        valueOneOf:
          type: object
          description: The value of the attribute instance
          oneOf:
            - required:
                - amount
              type: object
              properties:
                amount:
                  $ref: '#/components/schemas/Amount'
            - required:
                - date
              type: object
              properties:
                date:
                  pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
                  type: string
                  description: The attribute value when the attribute data type is date
                  format: date
                  example: '2021-01-01'
            - required:
                - dateTime
              type: object
              properties:
                dateTime:
                  pattern: >-
                    [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
                  type: string
                  description: >-
                    The attribute value when the attribute data type is date
                    time
                  format: date-time
                  example: '2018-03-19T21:19:00.576Z'
            - required:
                - time
              type: object
              properties:
                time:
                  pattern: (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]
                  type: string
                  description: The attribute value when the attribute data type is time
                  example: '20:20:39'
            - required:
                - number
              type: object
              properties:
                number:
                  type: number
                  description: The attribute value when the attribute data type is number
                  format: double
                  example: 32
            - required:
                - text
              type: object
              properties:
                text:
                  type: string
                  description: The attribute value when the attribute data type is text
                  example: Changed
            - required:
                - percentage
              type: object
              properties:
                percentage:
                  type: number
                  description: >-
                    The attribute value when the attribute data type is
                    percentage
                  format: double
                  example: 100
            - required:
                - boolean
              type: object
              properties:
                boolean:
                  type: boolean
                  description: The attribute value when the attribute data type is booean
                  example: true
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains history of an attribute
    ExtendedAttributeVersion:
      type: object
      properties:
        currentVersion:
          $ref: '#/components/schemas/AttributeHistory'
        previousVersion:
          $ref: '#/components/schemas/AttributeHistory'
      description: Contains information related to extended attribute
    AttributeDetails:
      required:
        - code
        - effectiveDate
      type: object
      properties:
        code:
          type: string
          description: The attribute code associated with the unique attribute definition
          example: PowerOFAttorney
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The effective date of the attribute instance
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The expiration date of the attribute instance
          format: date
          example: '2021-01-01'
        valueOneOf:
          type: object
          description: The value of the attribute instance
          oneOf:
            - required:
                - amount
              type: object
              properties:
                amount:
                  $ref: '#/components/schemas/Amount'
            - required:
                - date
              type: object
              properties:
                date:
                  pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
                  type: string
                  description: The attribute value when the attribute data type is date
                  format: date
                  example: '2021-01-01'
            - required:
                - dateTime
              type: object
              properties:
                dateTime:
                  pattern: >-
                    [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
                  type: string
                  description: >-
                    The attribute value when the attribute data type is date
                    time
                  format: date-time
                  example: '2018-03-19T21:19:00.576Z'
            - required:
                - time
              type: object
              properties:
                time:
                  pattern: (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]
                  type: string
                  description: The attribute value when the attribute data type is time
                  example: '20:20:39'
            - required:
                - number
              type: object
              properties:
                number:
                  type: number
                  description: The attribute value when the attribute data type is number
                  format: double
                  example: 32
            - required:
                - text
              type: object
              properties:
                text:
                  type: string
                  description: The attribute value when the attribute data type is text
                  example: Changed
            - required:
                - percentage
              type: object
              properties:
                percentage:
                  type: number
                  description: >-
                    The attribute value when the attribute data type is
                    percentage
                  format: double
                  example: 100
            - required:
                - boolean
              type: object
              properties:
                boolean:
                  type: boolean
                  description: The attribute value when the attribute data type is booean
                  example: true
      description: Contains information related to extended attribute
    ExtendedAttributeResponse:
      type: object
      properties:
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: >-
        Extended attribute creation/updation response data for a checking or
        savings account
    ExtendedAttributeListInfo:
      type: object
      properties:
        extendedAttributes:
          type: array
          description: Array of extended attribute
          items:
            $ref: '#/components/schemas/ExtendedAttributeVersion'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Contains extended attribute values on a loan account
    ManualChargeAssessment:
      required:
        - assessmentReason
        - chargeEntity
      type: object
      properties:
        chargeEntity:
          $ref: '#/components/schemas/ManualChargeAssessment_chargeEntity'
        billNumber:
          type: number
          description: >-
            The bill number on the account for which the late charge is to be
            assessed
          example: 232000000265002430
        overriddenFeeAmount:
          $ref: '#/components/schemas/Amount'
        assessmentReason:
          $ref: '#/components/schemas/ManualChargeAssessment_assessmentReason'
      description: Contains information related to manual charge assessment
    ManualChargeAssesmentResponse:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: The type of the account on the system of record
          example: SecuredInstallmentLoan
        accountId:
          type: string
          description: The unique account identifier
          example: '00002450002312'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Creation/updation response data
    ProductKeyAmortizationLoan:
      required:
        - productKeyOneOf
        - scheduleIndicator
      type: object
      properties:
        productKeyOneOf:
          type: object
          description: Contains product details
          oneOf:
            - required:
                - productKey
              type: object
              properties:
                productKey:
                  type: string
                  description: Identifies the product key
                  example: UNSECLOANPROD
            - required:
                - account
              type: object
              properties:
                account:
                  $ref: '#/components/schemas/LoanAccount'
        scheduleIndicator:
          type: boolean
          description: >-
            Indicates to identify if the amortization schedule needs to be
            generated or not
          example: true
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from which account is going to be effective
          format: date
          example: '2021-01-01'
        repayment:
          $ref: '#/components/schemas/ProductKeyAmortizationLoan_repayment'
        interestCalculationBasis:
          $ref: >-
            #/components/schemas/ProductKeyAmortizationLoan_interestCalculationBasis
        contractualAmount:
          $ref: '#/components/schemas/Amount'
        maturity:
          $ref: '#/components/schemas/ProductKeyAmortizationLoan_maturity'
        skipPayments:
          type: array
          description: Array of skip payment
          items:
            $ref: '#/components/schemas/SkipPayment'
        equateInstallmentAmount:
          $ref: '#/components/schemas/Amount'
      description: Contains loan payment details for an amortized loan
    AmortizationLoan:
      required:
        - contractualAmount
        - interestCalculationBasis
        - maturity
        - repayment
        - scheduleIndicator
      type: object
      properties:
        scheduleIndicator:
          type: boolean
          description: >-
            Indicates to identify if the amortization schedule needs to be
            generated or not
          example: true
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from which account is going to be effective
          format: date
          example: '2021-01-01'
        repayment:
          $ref: '#/components/schemas/AmortizationLoan_repayment'
        interestCalculationBasis:
          $ref: >-
            #/components/schemas/ProductKeyAmortizationLoan_interestCalculationBasis
        contractualAmount:
          $ref: '#/components/schemas/Amount'
        maturity:
          $ref: '#/components/schemas/ProductKeyAmortizationLoan_maturity'
        skipPayments:
          type: array
          description: Array of skip payment
          items:
            $ref: '#/components/schemas/SkipPayment'
        equateInstallmentAmount:
          $ref: '#/components/schemas/Amount'
      description: Contains loan payment details for an amortized loan
    AmortizationLoanResponse:
      required:
        - contractualAmount
      type: object
      properties:
        contractualAmount:
          $ref: '#/components/schemas/Amount'
        maturity:
          $ref: '#/components/schemas/AmortizationLoanResponse_maturity'
        equateInstallmentAmount:
          $ref: '#/components/schemas/Amount'
        paymentDetail:
          $ref: '#/components/schemas/AmortizationLoanResponse_paymentDetail'
        amortizationSchedules:
          type: array
          description: Array of amortization schedule
          items:
            $ref: '#/components/schemas/AmortizationSchedule'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: >-
        Creation/Updation response data for an amortized loan related to secured
        or unsecured account
    AmortizationSchedule:
      required:
        - dueDate
        - interestDue
        - principalDue
        - scheduledBalance
        - totalDue
      type: object
      properties:
        dueDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The scheduled dates on which the payment will be due
          format: date
          example: '2021-01-01'
        totalDue:
          $ref: '#/components/schemas/Amount'
        principalDue:
          $ref: '#/components/schemas/Amount'
        interestDue:
          $ref: '#/components/schemas/Amount'
        scheduledBalance:
          $ref: '#/components/schemas/Amount'
        skipIndicator:
          type: boolean
          description: Indicates whether schedule due date falls on the skipped months
          example: true
      description: Specifies the details of the repayment schedule
    SkipPayment:
      required:
        - earnIndicator
        - months
        - startDate
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Specifies the start date for the skip payments in a schedule
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Specifies the end date for the skip payment. After the end date, the
            normal payment schedule continues
          format: date
          example: '2021-01-01'
        earnIndicator:
          type: boolean
          description: >-
            Indicates whether the accrual has to be continued during the skip
            payment period
          example: true
        months:
          uniqueItems: true
          type: array
          description: Months which are to be marked for skip payment for a loan account
          items:
            type: string
            example: May
      description: >-
        Contains the details of the skip payment based on which the schedule
        skips the payment for the relevant skip payment period
    LoanAccount:
      required:
        - accountId
        - accountTypeOneOf
      type: object
      properties:
        accountId:
          maximum: 40
          type: string
          description: The account identifier from the system of record
          example: '10001370002202'
        accountTypeOneOf:
          type: object
          description: Contains account details
          oneOf:
            - required:
                - accountType
              type: object
              properties:
                accountType:
                  type: string
                  description: Identifies the standard account type
                  example: UnsecuredInstalmentLoan
                systemOfRecord:
                  $ref: '#/components/schemas/SystemOfRecord'
            - required:
                - accountIdType
              type: object
              properties:
                accountIdType:
                  maximum: 32
                  minimum: 1
                  type: string
                  description: The account id type of the account number
                  example: IBAN, MobileNumber, Email, LegacyAccountNumber
      description: Contains loan account information
    AccountRestriction:
      required:
        - restrictions
      type: object
      properties:
        restrictions:
          type: array
          description: Array of restriction
          items:
            $ref: '#/components/schemas/Restriction'
      description: Contains restriction details for a loan account
    Restriction:
      required:
        - code
        - confirmationValue
        - reason
      type: object
      properties:
        code:
          type: string
          description: The unique identifier for the restriction
          example: ManualStopAccrual
        reason:
          type: string
          description: Reason for restriction
          example: ManualStopAccrual
        description:
          type: string
          description: Description for restriction
          example: ManualStop Accrual
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date from which restriction is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date from which restriction is no more effective
          format: date
          example: '2021-01-31'
        confirmationValue:
          type: string
          description: Specifies the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Specifies the restriction details on the account
    RestrictionResponse:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: The type of the account on the system of record
          example: SecuredInstallmentLoan
        accountId:
          type: string
          description: The unique account identifier
          example: '00002450002353'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Creation/Updation response data for an account restriction
    RestrictionInfo:
      type: object
      properties:
        restrictions:
          type: array
          description: Array of restriction
          items:
            $ref: '#/components/schemas/RestrictionDetail'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Contains restriction detail of the account
    RestrictionDetail:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: The unique identifier for the restriction
          example: ManualStopBillStatements
        reason:
          type: string
          description: Reason for restriction
          example: Manual Stop Bill Statements
        description:
          type: string
          description: Description for restriction
          example: Create restrictions
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date from which restriction is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date from which restriction is no more effective
          format: date
          example: '2021-01-01'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
    CollateralRelationship:
      required:
        - collaterals
        - confirmationValue
      type: object
      properties:
        collaterals:
          type: array
          description: Array of collateral
          items:
            $ref: '#/components/schemas/Collateral'
        calculatedLoanToValue:
          type: number
          description: Indicates the calculated loan to value
          format: double
          example: 100
        requiredLoanToValue:
          type: number
          description: Indicates the required loan to value
          format: double
          example: 100
        repossession:
          $ref: '#/components/schemas/CollateralRelationship_repossession'
        liquidation:
          $ref: '#/components/schemas/CollateralRelationship_liquidation'
        foreclosure:
          $ref: '#/components/schemas/CollateralRelationship_foreclosure'
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains the account collateral details
    Collateral:
      required:
        - crossPledgedIndicator
        - id
      type: object
      properties:
        id:
          type: string
          description: The collateral identifier to be related with the account
          example: '12345'
        description:
          type: string
          description: Specifies the Collateral description
          example: Action code - Add of Boats as collateral
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective Date of linkage/relationship with the account
          format: date
          example: '2021-01-01'
        crossPledgedIndicator:
          type: boolean
          description: Indicates if cross pledging is allowed
          example: true
        type:
          type: string
          description: Specifies the type of collateral securing the loan
          example: ATV, Auto, Boats, Motorcycle, Camper, Jet Ski
        allocatedCollateralValue:
          $ref: '#/components/schemas/Amount'
        collateralValue:
          $ref: '#/components/schemas/Amount'
      description: Contains the collateral details
    CollateralRelationshipInfo:
      required:
        - account
        - collaterals
        - confirmationValue
      type: object
      properties:
        account:
          $ref: '#/components/schemas/CollateralRelationshipInfo_account'
        collaterals:
          type: array
          description: Array of collateral
          items:
            $ref: '#/components/schemas/CollateralInfo'
        calculatedLoanToValue:
          type: number
          description: Indicates the calculated loan to value
          format: double
          example: 100
        requiredLoanToValue:
          type: number
          description: Indicates the required loan to value
          format: double
          example: 100
        totalAllocatedCollateralValue:
          type: number
          description: Indicates the total Allocated Collateral Value
          format: double
          example: 100
        totalCollateralValue:
          type: number
          description: Total of Collateral Value
          format: double
          example: 100
        repossession:
          $ref: '#/components/schemas/CollateralRelationship_repossession'
        liquidation:
          $ref: '#/components/schemas/CollateralRelationship_liquidation'
        foreclosure:
          $ref: '#/components/schemas/CollateralRelationship_foreclosure'
      description: Contains the account collateral details
    CollateralInfo:
      required:
        - crossPledgedIndicator
        - id
      type: object
      properties:
        id:
          type: string
          description: The collateral identifier to be related with the account
          example: '12345'
        description:
          type: string
          description: Specifies the Collateral description
          example: Action code - Add of Boats as collateral
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective Date of linkage/relationship with the account
          format: date
          example: '2021-01-01'
        crossPledgedIndicator:
          type: boolean
          description: Indicates if cross pledging is allowed
          example: true
        type:
          type: string
          description: Specifies the type of collateral securing the loan
          example: ATV, Auto, Boats, Motorcycle, Camper, Jet Ski
        allocatedCollateralValue:
          $ref: '#/components/schemas/AmountWithoutDate'
        collateralValue:
          $ref: '#/components/schemas/AmountWithoutDate'
        originalCollateralValue:
          $ref: '#/components/schemas/AmountWithoutDate'
      description: Contains the collateral details
    USBankruptcy:
      required:
        - bankruptcy
        - confirmationValue
      type: object
      properties:
        bankruptcy:
          $ref: '#/components/schemas/Bankruptcy'
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains bankruptcy details
    UpdateUSBankruptcy:
      required:
        - bankruptcy
        - confirmationValue
      type: object
      properties:
        bankruptcy:
          $ref: '#/components/schemas/UpdateBankruptcy'
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains bankruptcy details
    Bankruptcy:
      required:
        - bookingDate
        - confirmationValue
        - customers
        - status
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Date from which the bankruptcy details are applicable for the
            account
          format: date
          example: '2021-01-01'
        id:
          type: string
          description: >-
            Bankruptcy chapter field.  Identifies the chapter when a loan
            account is included in the bankruptcy filing for any customers
            associated with the account
          example: Chapter 7
        customers:
          type: array
          description: Array of customer detail
          items:
            $ref: '#/components/schemas/CustomerDetail'
        status:
          type: string
          description: >-
            Manually updated by user on the account so that the appropriate
            bankruptcy verbiage can be passed to the Statement processing and
            printed
          example: >-
            0 - Bankruptcy process has begun, and bankruptcy effective date has
            not been entered
        bookingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            System default booking date. Defaulted with the date when the
            bankruptcy status value was changed
          format: date
          example: '2021-01-01'
        planFilingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date the bankruptcy plan was filed in court
          format: date
          example: '2028-02-07'
        caseNumber:
          type: string
          description: >-
            The value is manually entered by user ability to update audit
            history
          example: '12345669'
        planConfirmationDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The Bankruptcy plan confirmation date changes will be logged to
            account history for audit purposes
          format: date
          example: '2021-01-01'
        firstRegularDueDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date is defaulted with the next installment due date following
            the bankruptcy plan filing date
          format: date
          example: '2021-01-01'
        notificationDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of first delinquency when the customer files bankruptcy
          format: date
          example: '2021-01-01'
      description: Contains bankruptcy details
    UpdateBankruptcy:
      required:
        - bookingDate
        - confirmationValue
        - customers
        - status
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Date from which the bankruptcy details are applicable for the
            account
          format: date
          example: '2021-01-01'
        customers:
          type: array
          description: Array of customer detail
          items:
            $ref: '#/components/schemas/CustomerDetail'
        status:
          type: string
          description: >-
            Manually updated by user on the account so that the appropriate
            bankruptcy verbiage can be passed to the Statement processing and
            printed
          example: >-
            0 - Bankruptcy process has begun, and bankruptcy effective date has
            not been entered
        bookingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            System default booking date. Defaulted with the date when the
            bankruptcy status value was changed
          format: date
          example: '2021-01-01'
        planFilingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date the bankruptcy plan was filed in court
          format: date
          example: '2028-02-08'
        caseNumber:
          type: string
          description: >-
            The value is manually entered by user ability to update audit
            history
          example: '12345670'
        planConfirmationDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The Bankruptcy plan confirmation date changes will be logged to
            account history for audit purposes
          format: date
          example: '2021-01-01'
        firstRegularDueDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date is defaulted with the next installment due date following
            the bankruptcy plan filing date
          format: date
          example: '2021-01-01'
        notificationDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of first delinquency when the customer files bankruptcy
          format: date
          example: '2021-01-01'
      description: Contains bankruptcy details
    BankruptcyInfo:
      required:
        - bookingDate
        - confirmationValue
        - customers
        - status
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Date from which the bankruptcy details are applicable for the
            account
          format: date
          example: '2021-01-01'
        id:
          type: string
          description: >-
            Bankruptcy Chapter Field.  Identifies the chapter when a loan
            account is included in the bankruptcy filing for any customers
            associated with the account
          example: Chapter 7
        customers:
          type: array
          description: Array of customer info
          items:
            $ref: '#/components/schemas/CustomerInfo'
        status:
          type: string
          description: >-
            Manually updated by user on the account so that the appropriate
            bankruptcy verbiage can be passed to the Statement processing and
            printed
          example: >-
            0 - Bankruptcy process has begun, and bankruptcy effective date has
            not been entered
        bookingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            System default booking date. Defaulted with the date when the
            bankruptcy status value was changed
          format: date
          example: '2021-01-01'
        planFilingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date the bankruptcy plan was filed in court
          format: date
          example: '2028-02-08'
        caseNumber:
          type: string
          description: >-
            The value is manually entered by user ability to update audit
            history
          example: '12345670'
        planConfirmationDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The Bankruptcy plan confirmation date changes will be logged to
            account history for audit purposes
          format: date
          example: '2021-01-01'
        firstRegularDueDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date is defaulted with the next installment due date following
            the bankruptcy plan filing date
          format: date
          example: '2021-01-01'
        notificationDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of first delinquency when the customer files bankruptcy
          format: date
          example: '2021-01-01'
      description: Contains bankruptcy details
    CustomerInfo:
      required:
        - customerId
      type: object
      properties:
        customerId:
          type: string
          description: Customer id
          example: '70000021901'
        name:
          type: string
          description: Specifies customer name
          example: Laura Flores
        relationshipType:
          type: string
          description: Specifies relationship type
          example: Primary
        ecLegalStatus:
          type: string
          description: EC Legal Status
          example: A
        legalStatus:
          type: string
          description: Legal status
          example: Bankruptcy
        customerInformationCode:
          type: string
          description: >-
            Specifies Consumer Information Code (CII) values for all customers
            associated with the account
          example: B_PetitionChptr11
        ecoaCode:
          type: string
          description: >-
            Record and report the customer with a Terminated (T) value in the
            ECOA field to Metro 2 when a customer associated with the account is
            not part of bankruptcy filing for Chapter 12 or 13
          example: T_Trmnt
      description: Contains involved party bankruptcy details
    CustomerDetail:
      required:
        - customerId
      type: object
      properties:
        customerId:
          type: string
          description: Customer id
          example: '70000021901'
        legalStatus:
          type: string
          description: Legal status
          example: Bankruptcy
        customerInformationCode:
          type: string
          description: >-
            Specifies Consumer Information Code (CII) values for all customers
            associated with the account
          example: B_PetitionChptr11
        ecoaCode:
          type: string
          description: >-
            Record and report the customer with a Terminated (T) value in the
            ECOA field to Metro 2 when a customer associated with the account is
            not part of bankruptcy filing for Chapter 12 or 13
          example: T_Trmnt
      description: Contains involved party bankruptcy details
    USBankruptcyInfo:
      required:
        - accountId
        - accountType
        - bankruptcy
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '1870020342'
        bankruptcy:
          $ref: '#/components/schemas/BankruptcyInfo'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Contains bankruptcy information of the loan account
    USComplianceInfo:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: SecuredInstallmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '10001300071103'
        timesPastDueCounters:
          type: array
          description: Array of time past due counter
          items:
            $ref: '#/components/schemas/DelinquencyBoundaryCounter'
        serviceMembers:
          type: array
          description: Array of service member detail
          items:
            $ref: '#/components/schemas/ServiceMemberDetail'
        creditBureauReporting:
          $ref: '#/components/schemas/CreditBureauReport'
        creditBureauReportingChange:
          $ref: '#/components/schemas/CreditBureauReportingChange'
        ffiecComplianceCallCode:
          type: string
          description: FFIEC Compliance Call Code
          example: 06B0_OTHRRVLVCRDTPLN_SEC
        fdicCode:
          type: string
          description: FDIC code
          example: 6A_LNPRCHPRVTAUTOMBL_SEC
        taxReporting:
          $ref: '#/components/schemas/USComplianceInfo_taxReporting'
        complianceGeneralForm:
          $ref: '#/components/schemas/ComplianceGeneralFormDetail'
        craReportingIndicator:
          type: boolean
          description: Community re-investment act. Indicates if account is CRA reportable
          example: false
        regulation1098Detail:
          $ref: '#/components/schemas/USComplianceInfo_regulation1098Detail'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
    LifeToDate:
      required:
        - totalDebtForgivenAmount
      type: object
      properties:
        totalDebtForgivenAmount:
          type: number
          description: Total debt forgiven amount - LifeToDate
          format: double
          example: 100
        interestAmountForgiven:
          type: number
          description: Interest amount forgiven - LifeToDate
          format: double
          example: 10
        debtForgivenessDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Debt forgiveness date
          format: date
          example: '2021-01-01'
        eventCode:
          type: string
          description: Event code
          example: B_OtherJudicialDebtRelief
      description: Contains life to date information
    ServiceMemberDetail:
      type: object
      properties:
        serviceMemberBenefitOneOf:
          type: object
          description: Contains service member benefit information
          oneOf:
            - $ref: '#/components/schemas/SCRAProtection'
            - $ref: '#/components/schemas/MLAProtection'
        serviceStatus:
          $ref: '#/components/schemas/ServiceMemberDetail_serviceStatus'
      description: Service member detail
    CreditBureauReport:
      type: object
      properties:
        reporting:
          $ref: '#/components/schemas/Reporting'
        account:
          $ref: '#/components/schemas/CreditBureauAccount'
        paymentHistory:
          $ref: '#/components/schemas/PaymentHistory'
        customers:
          type: array
          description: Array of customer detail
          items:
            $ref: '#/components/schemas/CreditBureauCustomer'
        arrangementActivity:
          $ref: '#/components/schemas/ArrangementActivityDate'
        scheduledMonthlyPayment:
          $ref: '#/components/schemas/Amount'
        term:
          $ref: '#/components/schemas/Term'
        actualPaymentAmount:
          $ref: '#/components/schemas/Amount'
        currentBalance:
          $ref: '#/components/schemas/Amount'
        originalChargeOffAmount:
          $ref: '#/components/schemas/Amount'
        amountPastDue:
          $ref: '#/components/schemas/Amount'
        highestCreditAmount:
          $ref: '#/components/schemas/Amount'
      description: Contains credit bureau report information
    Term:
      required:
        - frequency
        - month
      type: object
      properties:
        month:
          type: string
          description: Indicates the term duration in month
          example: '12'
        frequency:
          type: string
          description: Indicates the payment frequency of the loan
          example: M
      description: Contains the fields for term and payment frequency
    CreditBureauReportingChange:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/CreditBureauAccount'
        negativeReportDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Credit bureau negative report date
          format: date
          example: '2021-01-01'
        paymentHistory:
          $ref: '#/components/schemas/PaymentHistory'
        customers:
          type: array
          description: Array of customer detail
          items:
            $ref: '#/components/schemas/CreditBureauCustomerChange'
        scheduledMonthlyPayment:
          $ref: '#/components/schemas/Amount'
        term:
          $ref: '#/components/schemas/Term'
        reporting:
          $ref: '#/components/schemas/Reporting'
      description: Credit bureau reporting change
    ArrangementActivityDate:
      required:
        - dateLastReported
        - effectiveDate
      type: object
      properties:
        dateLastReported:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from which account was last reported to the credit bureau
          format: date
          example: '2021-01-01'
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from which account is going to be effective
          format: date
          example: '2021-01-01'
        dateofFirstDelinquency:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Indicates when the account was 30 day delinquent first time
          format: date
          example: '2021-01-01'
        crbNegativeReportDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Indicates the  the date when the account turned delinquant
          format: date
          example: '2021-01-01'
        dateClosed:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Contains date the account was closed to further purchases, paid in
            full, transferred or sold
          format: date
          example: '2021-01-01'
        dateOfLastPayment:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Report the date the most recent payment was received, whether full
            or partial payment is made
          format: date
          example: '2021-01-01'
        dateOfAccountInformation:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Indicates date of  a specific activity within the reporting period.
            For current account this could be the billing date and for closed
            account this could  be the paid off date
          format: date
          example: '2021-01-01'
      description: account activity date
    Status:
      required:
        - value
      type: object
      properties:
        value:
          type: string
          description: Specifies value associated with the entity
          example: ActiveDuty
        description:
          type: string
          description: Description of the value
          example: ActiveDuty
      description: Contains service status of the service member
    CreateBillDetail:
      required:
        - bill
      type: object
      properties:
        bill:
          $ref: '#/components/schemas/BillInfo'
        additionalBill:
          $ref: '#/components/schemas/AdditionalBillInfo'
        billComponents:
          type: array
          description: Array of bill component detail
          items:
            $ref: '#/components/schemas/BillComponentDetail'
      description: Contains bill information
    UpdateBillDetail:
      required:
        - billCancellationReason
        - billId
      type: object
      properties:
        billId:
          type: number
          description: Bill number for which changes are to be made
          example: 232000000394032450
        billCancellationReason:
          type: string
          description: Reason for bill cancellation
          example: Duplicate
      description: Contains bill information to cancel an existing bill record
    BillInfo:
      required:
        - amount
        - dueDate
      type: object
      properties:
        dueDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Due date by which bill record is going to be due
          format: date
          example: '2021-01-01'
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
      description: Contains bill information
    AdditionalBillInfo:
      required:
        - interestAmountOwed
      type: object
      properties:
        principalAmountOwed:
          $ref: '#/components/schemas/AmountWithoutDate'
        interestAmountOwed:
          $ref: '#/components/schemas/AmountWithoutDate'
        totalFeeOwed:
          $ref: '#/components/schemas/AmountWithoutDate'
      description: Contains additional bill information to capture split on the bill
    BillComponentDetail:
      required:
        - billedAmount
        - code
      type: object
      properties:
        code:
          type: string
          description: Code used for the balance type
          example: PrincipalOwed
        name:
          type: string
          description: Name of balance type
          example: Principal Amount Owed
        billedAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
      description: >-
        Contains information related for billed amount corresponding to each
        bill component
    BillDetailResponse:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: SecuredInstallmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '00002250040405'
        billId:
          type: number
          description: Bill number
          example: 232000000394032450
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Creation/updation response data
    BillDetailInfo:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: SecuredInstallmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '00002250040405'
        bill:
          $ref: '#/components/schemas/BillDetailInfo_bill'
        additionalBill:
          $ref: '#/components/schemas/BillDetailInfo_additionalBill'
        billBalances:
          type: array
          description: Array of bill balance
          items:
            $ref: '#/components/schemas/BillBalance'
      description: Contains bill information based on search criteria
    BillBalance:
      required:
        - billedAmount
        - code
        - name
      type: object
      properties:
        code:
          type: string
          description: Code used for the balance type
          example: InterestOwed
        name:
          type: string
          description: Name of balance type
          example: Interest Owed
        billedAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
        paidAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
        unpaidAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
        prepaidAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
        adjustmentAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
      description: Bill balance details
    AccountSearchCriteria:
      type: object
      properties:
        primaryLifeCycleStatus:
          type: string
          description: Primary life cycle status of the account
          example: Active
          enum:
            - Active
            - Cancelled
            - Settled
            - UnderEstablishment
        secondaryLifeCycleStatus:
          type: string
          description: Secondary life cycle status of the account
          example: Normal
        approvalStatus:
          type: string
          description: Approval status
          example: Approved
          enum:
            - Approved
            - Cancelled
            - In Progress
            - Pending Approval
            - Rejected
        currencyCode:
          type: string
          description: Specifies the currency code
          example: USD
        servicingBranch:
          type: string
          description: Branch where the account is serviced
          example: OU001
      description: Secondary search criteria for the account
    AccountInfo:
      type: object
      properties:
        accounts:
          type: array
          description: Array of account info
          items:
            $ref: '#/components/schemas/Account'
      description: Account details
    Account:
      required:
        - accountId
        - accountType
        - basic
        - productGroup
        - productKey
        - productLine
        - productName
        - productTemplate
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '12345678901234'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: Step1-CreateAccount
        basic:
          $ref: '#/components/schemas/AccountBasicInfo'
        productKey:
          type: string
          description: Enterprise product key
          example: MBPAPIBILL
        productLine:
          type: string
          description: Product line
          example: Retail Lending
        productGroup:
          type: string
          description: Product group to group the specific type of products
          example: Consumer Loan
        productSubGroup:
          type: string
          description: Product subgroup
          example: Unsecured Loan
        productTemplate:
          type: string
          description: Template for a particular type of product
          example: UnsecuredTermLoan
        productName:
          type: string
          description: Name of the product
          example: UNSECURED LOAN PRODUCT
        customerId:
          type: string
          description: Customer id
          example: '70000021901'
        balances:
          type: array
          description: Array of balance info
          items:
            $ref: '#/components/schemas/AdditionalBalance'
      description: Contains account details
    AccountBasicInfo:
      required:
        - nickName
        - primaryStatus
        - productKey
      type: object
      properties:
        productKey:
          type: string
          description: Enterprise product key
          example: MBPAPIBILL
        accountTitles:
          type: array
          description: Title of the account
          items:
            type: string
            example: Loan Acc
        nickName:
          type: string
          description: Nick name of the account
          example: UNSECURED LENDING ACCOUNT
        branchOrganizationUnitId:
          type: string
          description: Specifies branch where the account is held
          example: OU001
        currencyCode:
          type: string
          description: The code of currency
          readOnly: true
          example: USD
        currencyName:
          type: string
          description: Name of the currency
          readOnly: true
          example: US Dollar
        currencySyntheticIndicator:
          type: boolean
          description: Indicates whether the currency is synthetic currency
          example: true
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from which account is going to be effective
          format: date
          example: '2021-01-01'
        primaryStatus:
          type: string
          description: Primary life cycle status of the account
          example: UnderEstablishment
          enum:
            - Active
            - Cancelled
            - Settled
            - UnderEstablishment
        secondaryStatus:
          type: string
          description: Secondary life cycle status of the account
          example: InProcess
        secondaryStatusReason:
          type: string
          description: Reason for the secondary status
          example: InProcess
        approvalStatus:
          type: string
          description: Approval status
          example: Approved
          enum:
            - Approved
            - Cancelled
            - In Progress
            - Pending Approval
            - Rejected
        externalAccount:
          $ref: '#/components/schemas/AccountBasicInfo_externalAccount'
        latestRecordAvailableIndicator:
          type: boolean
          description: Indicates if the latest version of the record is available
          example: true
        secondaryStatusReasonDescription:
          type: string
          description: Reason description for the secondary status
          example: New branch made active
      description: Contains basic detail of the account
    CollectionReport:
      type: object
      properties:
        reportToCollection:
          type: string
          description: If an account to be reported to collection, then the value to be Yes
          example: 'true'
        autoCollectionReport:
          type: string
          description: To restart the auto reporting from manual, then the value to be Yes
          example: 'true'
      description: Contains collection report information
    EarlyPayOffQuote:
      required:
        - accountId
        - accountType
        - netPayOff
        - payOffCalculations
        - settlementCode
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          maximum: 40
          type: string
          description: The account identifier from the system of record
          example: '10001160000267'
        payOffQuote:
          $ref: '#/components/schemas/EarlyPayOffQuote_payOffQuote'
        settlementCode:
          type: string
          description: Settlement reason code
          example: BetterRate
        settlementDescription:
          type: string
          description: Settlement reason description
          example: Account closure
        payOffCalculations:
          type: array
          description: >-
            Specifies the details such as outstanding balance, anticipated
            adjustments, intervening payments and projected balances for
            principal, interest, all fee on the account, late charge and early
            settlement fee and Accrued Insurance amount.
          items:
            $ref: '#/components/schemas/PayOffBalances'
        netPayOff:
          $ref: '#/components/schemas/Amount'
        payOffQuoteLetterIndicator:
          type: boolean
          description: >-
            Indicator to specify whether a payoff quote letter is required to be
            generated and sent for this payoff quote
          example: true
        insuranceRebateDetails:
          type: array
          description: Array of insurance rebate details
          items:
            $ref: '#/components/schemas/InsuranceRebateDetail'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Contains early payoff quote information related to account
    LocAccount:
      required:
        - basic
        - ownerships
      type: object
      properties:
        basic:
          $ref: '#/components/schemas/LocAccountBasicInfo'
        locApprovalDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date on which the line of credit is approved
          format: date
          example: '2021-01-01'
        business:
          $ref: '#/components/schemas/LocAccount_business'
        payeeOneOf:
          type: object
          description: Contains payee information
          oneOf:
            - required:
                - customerId
              type: object
              properties:
                customerId:
                  type: string
                  description: >-
                    This is the primary customer id of the customer system to
                    which the MBP Deposits is integrated with
                  example: >-
                    Default Integration – MBP Core Deposits by default
                    integrated with FIS Enterprise Customer system
            - required:
                - additionalDetails
                - name
              type: object
              properties:
                name:
                  type: string
                  description: Payee name
                  example: Joe Root
                additionalDetails:
                  type: array
                  description: Array of additional detail
                  items:
                    $ref: '#/components/schemas/AdditionalDetail'
        ownerships:
          type: array
          description: Account ownership detail
          items:
            $ref: '#/components/schemas/LocAccountOwnership'
        officers:
          type: array
          description: Array of officer info
          items:
            $ref: '#/components/schemas/LocOfficerInfo'
        accountToAccountRelationships:
          type: array
          description: Array of account to account relationship
          items:
            $ref: '#/components/schemas/LocAccountToAccountRelation'
        creditLimit:
          $ref: '#/components/schemas/LocCreditLimit'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: Step 2
      description: Contains data for creating unsecured line of credit loan account
    LocAccountBasicInfo:
      required:
        - primaryStatus
        - productKey
      type: object
      properties:
        account:
          $ref: '#/components/schemas/LoanAccount_1'
        productKey:
          type: string
          description: Enterprise product key
          example: MBPAPIBILL
        accountTitles:
          type: array
          description: Title of the account
          items:
            type: string
            example: Loan Acc
        nickName:
          type: string
          description: Nick name of the account
          example: UNSECURED LENDING ACCOUNT
        branchOrganizationUnitId:
          type: string
          description: Specifies branch where the account is held
          example: OU001
        currencyCode:
          type: string
          description: The code of currency
          example: USD
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from which account is going to be effective
          format: date
          example: '2021-01-01'
        primaryStatus:
          type: string
          description: Primary life cycle status of the account
          example: UnderEstablishment
          enum:
            - Active
            - Cancelled
            - Settled
            - UnderEstablishment
        secondaryStatus:
          type: string
          description: Secondary life cycle status of the account
          example: InProcess
        secondaryStatusReason:
          type: string
          description: Reason for the secondary status
          example: InProcess
        externalAccount:
          $ref: '#/components/schemas/LocAccountBasicInfo_externalAccount'
        secondaryStatusReasonDescription:
          type: string
          description: Reason description for the secondary status
          example: New branch made active
      description: Contains basic detail of the account
    UpdateScheduledEvent:
      required:
        - scheduledEventOneOf
      type: object
      properties:
        scheduledEventOneOf:
          type: object
          description: Contains scheduled event information
          oneOf:
            - required:
                - transactionReferenceNumber
              type: object
              properties:
                transactionReferenceNumber:
                  type: integer
                  description: >-
                    Specifies the transaction reference number mapped to
                    scheduled event
                  format: int64
                  example: 9000194650519
            - required:
                - businessEvent
              type: object
              properties:
                businessEvent:
                  required:
                    - code
                  type: object
                  properties:
                    code:
                      type: string
                      description: >-
                        Specifies the business event code mapped to a scheduled
                        event
                      example: Backdated Transaction
                  description: Contains business event information
      description: Scheduled event criteria
    ScheduleEventInfo:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          maximum: 40
          type: string
          description: The account identifier from the system of record
          example: '10001370120319'
        scheduledEvents:
          type: array
          description: Array of schedule event
          items:
            $ref: '#/components/schemas/ScheduledEvent'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Contains schedule event information
    ScheduledEvent:
      required:
        - code
        - effectiveDate
        - effectiveTime
        - status
        - transactionReferenceNumber
      type: object
      properties:
        transactionReferenceNumber:
          minimum: 1
          type: integer
          description: >-
            Specifies the transaction reference number mapped to scheduled
            business event
          format: int64
          example: 9000194650519
        code:
          type: string
          description: Specifies the business event code mapped to a scheduled event
          example: BackdatedTransaction
        status:
          type: string
          description: Specifies the current status of scheduled event
          example: Cancelled
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The effective date of scheduled event when it should be processed
          format: date
          example: '2021-01-01'
        effectiveTime:
          pattern: (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]
          type: string
          description: The effective time of scheduled event when it should be processed
          example: '00:00:00'
        amount:
          $ref: '#/components/schemas/Amount'
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
      description: Contains schedule event information
    UpdateScheduledEventStatus:
      required:
        - businessEventStatus
        - scheduledEventStatusOneOf
      type: object
      properties:
        businessEventStatus:
          type: string
          description: >-
            Indicates the new status of scheduled event getting changed. Only
            cancellation is in scope
          example: Suspended
          enum:
            - Cancelled
            - Created
            - Processed
            - Rejected
            - Retry
            - Suspended
        scheduledEventStatusOneOf:
          type: object
          description: Scheduled Event Status Criteria
          oneOf:
            - required:
                - transactionReferenceNumber
              type: object
              properties:
                transactionReferenceNumber:
                  type: integer
                  description: >-
                    Indicates the transaction reference number mapped to
                    scheduled event.
                  format: int64
                  example: 7000267184171
            - required:
                - businessEventCode
              type: object
              properties:
                businessEventCode:
                  type: string
                  description: >-
                    It indicates the business event code mapped to a scheduled
                    event
                  example: Backdated Transaction
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time the transaction was accepted by a delivery channel
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: Change Account Schedule Event Status
    ScheduledEventStatusResponse:
      required:
        - accountId
        - accountType
        - transactionReferenceNumbers
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: SecuredInstallmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '00001870020342'
        transactionReferenceNumbers:
          type: array
          description: Array of transaction reference number mapped to scheduled event
          items:
            minimum: 1
            type: integer
            format: int64
            example: 9000194650519
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Scheduled event status updation response data
    SearchBillInfo:
      required:
        - accountId
        - accountType
        - bills
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '10000790011611'
        bills:
          type: array
          description: Array of bill information
          items:
            $ref: '#/components/schemas/SearchBillInfo_bills'
      description: Contains bill information
    LocAccountInfo:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredLineOfCredit
        accountId:
          maximum: 40
          type: string
          description: The account identifier from the system of record
          example: '10001320041516'
        basic:
          $ref: '#/components/schemas/LocAccountBasicDetail'
        securedIndicator:
          type: boolean
          description: Indicates whether the account is secured or not
          example: false
        ownerships:
          type: array
          description: Array of ownership
          items:
            $ref: '#/components/schemas/LocAccountInfo_ownerships'
        business:
          $ref: '#/components/schemas/LocAccountInfo_business'
        accountToAccountRelationships:
          type: array
          description: Array of account to account relationship
          items:
            $ref: '#/components/schemas/LocAccountInfo_accountToAccountRelationships'
        officers:
          type: array
          description: Array of officer info
          items:
            $ref: '#/components/schemas/LocOfficer'
        nonChargeBalances:
          type: array
          description: Array of non charge balances
          items:
            $ref: '#/components/schemas/LocAccountInfo_nonChargeBalances'
        periodicBalances:
          type: array
          description: Array of periodic balance
          items:
            $ref: '#/components/schemas/PeriodicBalanceToDate'
        activity:
          $ref: '#/components/schemas/LocActivityInfo'
        creditLimit:
          $ref: '#/components/schemas/LocCreditLimitInfo'
        debitCard:
          $ref: '#/components/schemas/LocAccountInfo_debitCard'
        termout:
          $ref: '#/components/schemas/LocAccountInfo_termout'
        nonSufficientFundCounters:
          type: array
          description: Array of non sufficient fund counters
          items:
            $ref: '#/components/schemas/LocAccountInfo_nonSufficientFundCounters'
        takeDown:
          $ref: '#/components/schemas/LocAccountInfo_takeDown'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Contains account basic information
    TakeDownCounter:
      type: object
      properties:
        periodName:
          type: string
          description: >-
            Name of the period for which corresponding type and number would be
            displayed.
          example: Takedown Counter, Active Takedown Counter
        periodType:
          type: string
          description: Period Type
          example: Monthly, YTD (Year to Date) and LTD (Life to Date)
        defaultNumber:
          minimum: 1
          type: integer
          description: Number corresponding to each period type
          format: int64
          example: 5
      description: >-
        This aggregate signifies number of times takedown has been processed on
        the. Life to date, year to date and previous year shall be displayed
    LocAccountBasicDetail:
      required:
        - enterpriseProductKey
        - primaryStatus
        - productGroup
        - productKey
        - productLine
        - productName
        - productTemplate
      type: object
      properties:
        productKey:
          type: string
          description: Enterprise product key
          example: LOC001
        accountTitles:
          type: array
          description: Title of the account
          items:
            type: string
            example: LineOfCredit
        nickName:
          type: string
          description: Nick name of the account
          example: LineOfCredit
        branchOrganizationUnitId:
          type: string
          description: Specifies branch where the account is held
          example: OU001
        currencyCode:
          type: string
          description: The code of currency
          readOnly: true
          example: USD
        currencyName:
          type: string
          description: Name of the currency
          readOnly: true
          example: US Dollar
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from which account is going to be effective
          format: date
          example: '2021-01-01'
        primaryStatus:
          type: string
          description: Primary life cycle status of the account
          example: Active
          enum:
            - Active
            - Cancelled
            - Settled
            - UnderEstablishment
        secondaryStatus:
          type: string
          description: Secondary life cycle status of the account
          example: Normal
        secondaryStatusReason:
          type: string
          description: Reason for the secondary status
          example: InProcess
        approvalStatus:
          type: string
          description: Approval status
          example: Approved
          enum:
            - Approved
            - Cancelled
            - In Progress
            - Pending Approval
            - Rejected
        externalAccount:
          $ref: '#/components/schemas/LocAccountBasicDetail_externalAccount'
        latestRecordAvailableIndicator:
          type: boolean
          description: Indicates if the latest version of the record is available
          example: false
        secondaryStatusReasonDescription:
          type: string
          description: Reason description for the secondary status
          example: New branch made active
        locApprovalDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date on which the line of credit is approved
          format: date
          example: '2021-01-01'
        enterpriseProductKey:
          type: string
          description: Product key
          example: LOC001
        productLine:
          type: string
          description: Product line
          example: Retail Lending
        productGroup:
          type: string
          description: Product group
          example: Consumer Loan
        productSubGroup:
          type: string
          description: Product sub group
          example: Line Of Credit
        productTemplate:
          type: string
          description: Product template
          example: LineOfCredit
        productName:
          type: string
          description: Product name
          example: Line Of Credit
        productMarketName:
          type: string
          description: Market Name of the product
          example: Premier Line Of Credit
        conversionDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date on which account is converted from Legacy system.
          format: date
          example: '2021-01-01'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains basic detail of the account
    AdditionalBasicDetail:
      type: object
      properties:
        servicingBranch:
          type: string
          description: Branch where account is serviced
          example: OU001
        classificationCode:
          type: string
          description: Classification code of the loan
          example: ClassCode123@
        riskRating:
          type: string
          description: Current risk rating or loan grade on the loan
          example: 90%
        riskRatingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of last risk rating update
          format: date
          example: '2028-02-08'
        collateralType:
          type: string
          description: Indicates the type of collateral securing the loan
          example: >-
            House, Apartment, Auto, Motorcycle, ATV, Personal Water Craft,
            Camper, Boats
        financedCharge:
          $ref: '#/components/schemas/AmountWithoutDate'
        originalProceed:
          $ref: '#/components/schemas/AmountWithoutDate'
        reporting:
          $ref: '#/components/schemas/LocAccount_business_reporting'
        maturity:
          $ref: '#/components/schemas/SecuredTermLoanAccount_business_maturity'
        paymentAppropriationCode:
          type: string
          description: Payment appropriation code
          example: BALANCE01
        stateCode:
          type: string
          description: Indicates the State where the account is been serviced.
          example: CA
        accountClosure:
          $ref: '#/components/schemas/AdditionalBasicDetail_accountClosure'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains additional basic information
    PaymentInstruction:
      required:
        - accountOneOf
        - confirmationValue
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date from which instruction will be applicable
          format: date
          example: '2021-01-01'
        paymentCollectionAccount:
          $ref: '#/components/schemas/PaymentCollectionAccount'
        paymentInstructionOccurrence:
          type: string
          description: >-
            Defines whether this payment instruction set up is for one off
            occurrence or recurring occurrence
          example: OneOff, Recurring
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
        paymentInstructionAdditionalDetail:
          $ref: '#/components/schemas/PaymentAdditionalDetail'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: Step 2
        confirmationValue:
          type: string
          description: Specifies the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains auto debit payment instructions on the loan account
    PaymentInstructionFrequency:
      required:
        - inheritFromLoanAccount
      type: object
      properties:
        inheritFromLoanAccountIndicator:
          type: boolean
          description: >-
            Indicates payment instruction periodicity will be inherited from the
            loan account
          example: true
        alternateFrequency:
          $ref: '#/components/schemas/PaymentInstructionFrequency_alternateFrequency'
      description: >-
        Contains details related to periodicity at which payment instruction is
        be invoked on the loan account
    PaymentAdditionalDetail:
      required:
        - accountOneOf
        - paymentInstructionOccurrence
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Start date of payment instruction set up
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: End date of payment instruction set up
          format: date
          example: '2021-01-01'
        autoDebitFinancial:
          type: string
          description: The financial toward which the additional payment is to be directed
          example: Principal
        frequency:
          $ref: '#/components/schemas/PaymentInstructionFrequency'
      description: Contains additional details related to payment instruction
    PaymentInstructionInfo:
      required:
        - paymentInstructions
      type: object
      properties:
        paymentInstructions:
          type: array
          description: Array of payment instruction
          items:
            $ref: '#/components/schemas/PaymentInstructionInfo_paymentInstructions'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Contains auto debit payment instructions on the loan account
    PaymentInstructionDetail:
      required:
        - paymentInstruction
      type: object
      properties:
        paymentInstruction:
          $ref: '#/components/schemas/PaymentInstructionDetail_paymentInstruction'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Retrieves auto debit payment instruction based on reference number
    UpdateDisbursement:
      required:
        - disbursements
      type: object
      properties:
        disbursements:
          type: array
          description: Array of disbursement detail
          items:
            $ref: '#/components/schemas/AccountDisbursement'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: Step 2
        confirmationValue:
          type: string
          description: Specifies the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains account disbursement detail
    Disbursement:
      required:
        - disbursements
      type: object
      properties:
        disbursements:
          type: array
          description: Array of disbursement detail
          items:
            $ref: '#/components/schemas/DisbursementCommonData'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: Step 2
        confirmationValue:
          type: string
          description: Specifies the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains account disbursement detail
    DisbursementDetail:
      required:
        - amount
        - autoDisbursementIndicator
        - method
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the disbursement
          format: int64
          example: 191010119
        fundDuringOrginationIndicator:
          type: boolean
          description: Fund during origination
          example: true
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Disbursement date. The date on which the funds from the loan account
            is made available for the customer. In case of multiple
            disbursements, this will be the first date of disbursement
          format: date
          example: '2021-01-01'
        autoDisbursementIndicator:
          type: boolean
          description: Indicates whether automatic disbursement is allowed on the loan
          example: true
        method:
          type: string
          description: >-
            Disbursement method. Identifies if the disbursement is to an
            external account or internal account or via a cheque
          example: TransferExternalAccount
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
        beneficiaryOneOf:
          type: object
          description: >-
            Contains details of the beneficiary (payee) to whom the disbursement
            proceeds are to be transferred
          oneOf:
            - $ref: '#/components/schemas/GetDisbursementAccountToAccountRelation'
            - $ref: '#/components/schemas/Payee'
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains disbursement detail related to account
    DisbursementsInfo:
      required:
        - accountId
        - accountType
        - disbursements
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '10000790011611'
        disbursements:
          type: array
          description: Array of disbursement detail
          items:
            $ref: '#/components/schemas/DisbursementDetail'
      description: Contains disbursement details
    DisbursementInfo:
      required:
        - accountId
        - accountType
        - disbursements
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '10000790011611'
        disbursement:
          $ref: '#/components/schemas/DisbursementDetail'
      description: Contains disbursement details
    AccountNumberInfo:
      type: object
      properties:
        current:
          $ref: '#/components/schemas/AccountDetailWithoutSOR'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Account Number details
    Insurance:
      required:
        - insurances
      type: object
      properties:
        insurances:
          type: array
          description: Array of insurance detail
          items:
            $ref: '#/components/schemas/InsuranceInfo'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: Step 2
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time transaction was accepted by a delivery channel
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: Creating insurance details
    CreateInsurance:
      required:
        - insurances
      type: object
      properties:
        insurances:
          type: array
          description: Array of insurance detail
          items:
            $ref: '#/components/schemas/CreateInsuranceInfo'
        onboardingSequenceStep:
          type: string
          description: Onboarding sequence step
          example: Step 2
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time transaction was accepted by a delivery channel
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: Creating insurance details
    InsuranceResponse:
      required:
        - accountId
        - accountType
        - insurance
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '0000013912704'
        insurances:
          type: array
          description: Contains account insurance detail
          items:
            $ref: '#/components/schemas/AccountInsurance'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Contains the insurance details
    RenewalDetail:
      required:
        - confirmationValue
        - renewalOneOf
      type: object
      properties:
        renewalOneOf:
          type: object
          description: Contains renewal configuration and processing detail
          oneOf:
            - required:
                - renewalConfig
              type: object
              properties:
                renewalConfig:
                  $ref: '#/components/schemas/RenewalConfigDetail'
            - required:
                - renewalProcess
              type: object
              properties:
                renewalProcess:
                  $ref: '#/components/schemas/RenewalProcess'
        confirmationValue:
          type: string
          description: Specifies the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
      description: Contains renewal detail
    RenewalInfo:
      required:
        - accountId
        - accountType
        - renewal
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '10000790011611'
        renewal:
          $ref: '#/components/schemas/Renewals'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Contains renewal detail
    Renewals:
      type: object
      properties:
        renewalToDates:
          type: array
          description: Counters related to Renewal.
          items:
            $ref: '#/components/schemas/RenewalToDate'
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date on which the last renewal was processed on the loan account
          format: date
          example: '2021-01-01'
        renewalEffectiveDates:
          type: array
          description: Renewal Effective Date Details
          items:
            $ref: '#/components/schemas/RenewalEffectiveDateInfo'
      description: Contains renewal detail
    RenewalEffectiveDateInfo:
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/RenewalConfigDetail'
        processingInfo:
          $ref: '#/components/schemas/RenewalEffectiveDateInfo_processingInfo'
      description: Renewal Effective Date Details
    RenewalToDate:
      type: object
      properties:
        periodType:
          type: string
          description: Type Of Counter
          example: Monthly
        number:
          minimum: 1
          type: integer
          description: Number associated with each counter
          format: int64
          example: 1
      description: Contains renewal detail
    UpdateCreditLimit:
      type: object
      properties:
        revolvingIndicator:
          type: boolean
          description: Indicates whether the limit is revolving or not
          example: false
        drawPeriodEndDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            If the draw period end date is input, no further advances can be
            made from the LOC
          format: date
          example: '2027-12-31'
        limitDrawEndIndicator:
          type: boolean
          description: >-
            Indicates the credit limit value based on setting the value to
            yes/no
          example: true
        closedAtMaturityIndicator:
          type: boolean
          description: >-
            Indicates whether line gets closed based on the maturity date and no
            further advances can be made once the maturity of the LOC account is
            reached
          example: true
        creditLimitReviewDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Indicates the date the Credit Limit is due for review.
          format: date
          example: '2027-12-31'
        amount:
          $ref: '#/components/schemas/Amount'
        overLineAllowedIndicator:
          type: boolean
          description: Indicates whether overline is allowed in the LOC
          example: true
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time transaction was accepted by a delivery channel
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: >-
        The Credit Limit Detail aggregates records the credit limit and the
        overline amount for a Line of Credit Account. The limit amount is the
        maximum amount up to which the LOC is permits to advance.
    UpdateTermOutLOC:
      required:
        - billScheduleCode
        - maturity
        - termOut
      type: object
      properties:
        termOut:
          $ref: '#/components/schemas/TermOutLOC'
        paymentAmount:
          $ref: '#/components/schemas/Amount'
        maturity:
          $ref: '#/components/schemas/UpdateTermOutLOC_maturity'
        billScheduleCode:
          type: string
          description: Billing schedule definition code
          example: code
        description:
          type: string
          description: Description of the billing schedule defintion code
          example: description
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time transaction was accepted by a delivery channel
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: Business Details for Term Out LOC
    UpdateLOCAccountBusiness:
      required:
        - accountOneOf
        - business
        - confirmationValue
      type: object
      properties:
        customerInducedIndicator:
          type: boolean
          description: Indicates if this transaction is initiated by Customer requested.
          example: false
        business:
          $ref: '#/components/schemas/UpdateLOCAccountBusiness_business'
        confirmationValue:
          type: string
          description: Confirmation Value
          example: Confirm
          enum:
            - Cancel
            - Confirm
            - Draft
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time the transaction was accepted by a delivery channel.
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: LOC Account Business Detail
    SameAsCashTerm:
      required:
        - endDateOption
        - termType
        - termValue
      type: object
      properties:
        termType:
          $ref: '#/components/schemas/TermType'
        termValue:
          type: integer
          description: Term value identifies the actual number of days or months or year.
          format: int64
          example: 1
        endDateOption:
          type: string
          description: >-
            The specific date on which same-as-cash period ends. Either end date
            or term should be passed, but not both.
          example: Account Effective Date, First Payment Due Date
      description: Contains details about same as cash
    HoldInfo:
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: Savings
        accountId:
          type: string
          description: The account identifier
          example: '200111367856'
        holds:
          type: array
          description: Hold details
          items:
            $ref: '#/components/schemas/Hold'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
    HoldInfoById:
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: Savings
        accountId:
          type: string
          description: The account identifier
          example: '200111367856'
        hold:
          $ref: '#/components/schemas/Hold'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
    Hold:
      required:
        - reasonCode
        - status
        - type
      type: object
      properties:
        holdId:
          type: string
          description: Uniquely identifies the hold placed on an account.
          example: '12345678'
        customerInducedIndicator:
          type: boolean
          description: Indicates if this transaction is initiated by Customer requested
          example: false
        status:
          type: string
          description: Hold Status
          example: Active
          enum:
            - Active
            - Released
            - Expired
        type:
          type: string
          description: Identifies the type of hold on an account.
          example: POS Authorization Hold
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date on which the Hold is effective.
          format: date
          example: '2021-01-01'
        requestor:
          type: string
          description: Indicates whom or what process requested the hold.
          example: Banker
        payee:
          type: string
          description: The name of the payee for the hold.
          example: Payee
        reasonCode:
          type: string
          description: The reason code assigned to the hold.
          example: Garnishment
        description:
          type: string
          description: A description of the hold.
          example: Garnishment spent
        expirationTime:
          pattern: (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]
          type: string
          description: The expiration time of the hold.
          example: '20:20:39'
        expirationOneOf:
          type: object
          description: Hold expiration detail
          oneOf:
            - $ref: '#/components/schemas/TermTypeNumber_1'
            - required:
                - expirationDate
              type: object
              properties:
                expirationDate:
                  pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
                  type: string
                  description: >-
                    The date the Stop/Suspect/Hold record is no longer in
                    effect.
                  format: date
                  example: '2021-01-01'
            - required:
                - expireIndicator
              type: object
              properties:
                expireIndicator:
                  type: boolean
                  description: >-
                    Indicates whether the stop/suspect record will have an
                    expiration date or not.
                  example: true
        auditTrail:
          $ref: '#/components/schemas/AuditTrail_1'
      description: A hold transaction places a hold on the available amount
    AmountRange:
      required:
        - fromAmount
        - toAmount
      type: object
      properties:
        fromAmountCurrencyCode:
          maxLength: 3
          minLength: 2
          type: string
          description: The code of currency
          example: USD
        fromAmount:
          type: number
          description: Amount involved with the entity
          format: double
          example: 100
        fromDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date associated within the amount
          format: date
          example: '2021-01-01'
        toAmountCurrencyCode:
          maxLength: 3
          minLength: 2
          type: string
          description: The code of currency
          example: USD
        toAmount:
          type: number
          description: Amount involved with the entity
          format: double
          example: 100
        toDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date associated within the amount.
          format: date
          example: '2021-01-01'
      description: Amount Range
    AtmPosMessageRequest:
      required:
        - iso8583Message
      type: object
      properties:
        iso8583Message:
          type: string
          description: Contain the message from ATM/POS in ISO 8583 message.
          example: Authorization, Cash withdrawal, Cash Deposit
      description: Contain the message from ATM/POS Message.
    AtmPosMessageResponse:
      type: object
      properties:
        iso8583Message:
          type: string
          description: The message from ATM/POS in ISO 8583 message
          example: Authorization, Cash withdrawal, Cash Deposit
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Contain the message from ATM/POS Message response.
    GeographicInfo:
      required:
        - accountId
        - accountType
        - originatingAccountType
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '10000790011611'
        originatingAccountType:
          type: string
          description: >-
            Account type which is originating the ACH outgoing payment or
            collection request
          example: Consumer Loan, Corporate Loan
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Contains US geographic specific information for an account
    AccountToAdditionalAccountRelationship:
      type: object
      properties:
        additionalAccounts:
          type: array
          description: Additional account details.
          items:
            $ref: >-
              #/components/schemas/AccountToAdditionalAccountRelationship_additionalAccounts
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time the transaction was accepted by a delivery channel
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: Contains account to account relationship for Loan accounts
    AccountToAdditionalAccountResponse:
      required:
        - accountIdType
        - accountIdentifier
      type: object
      properties:
        accountIdType:
          type: string
          description: The account id type of the account number
          example: LegacyAccountNumber
        accountId:
          maximum: 40
          type: string
          description: The account identifier
          example: '1234535434'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Contains account to addtional account response
    AlliedAccount:
      required:
        - effectiveDate
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective Date
          format: date
          example: '2021-01-01'
        account:
          $ref: '#/components/schemas/LoanAccount_2'
        basic:
          $ref: '#/components/schemas/AlliedAccountBasic'
        ownership:
          $ref: '#/components/schemas/AlliedAccountCustomer'
        disbursement:
          $ref: '#/components/schemas/AlliedAccount_disbursement'
        alliedAccountToTransferringAccountRelationship:
          $ref: '#/components/schemas/AlliedAccountToAccount'
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time transaction was accepted by a delivery channel
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: the data needed for Record allied Account Detail Input.
    AlliedAccountBasic:
      required:
        - currencyCode
        - primaryStatus
        - productKey
      type: object
      properties:
        productKey:
          maxLength: 32
          minLength: 1
          type: string
          description: Product key
          example: MBPAPIBILL
        currencyCode:
          type: string
          description: The code of currency
          example: USD
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective Date
          format: date
          example: '2021-01-01'
        primaryStatus:
          type: string
          description: Primary life cycle status of the account
          example: Active
          enum:
            - Active
            - Cancelled
            - Settled
            - UnderEstablishment
        secondaryStatus:
          maxLength: 32
          minLength: 1
          type: string
          description: Secondary life cycle status of the account
          example: InProcess
      description: Allied Account  Detail
    AlliedAccountCustomer:
      required:
        - customerId
        - relationshipCode
      type: object
      properties:
        customerId:
          type: string
          description: >-
            Primary customer id of the customer system to which the MBP is
            integrated with
          example: '123456789'
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
        relationshipCode:
          type: string
          description: >-
            The code identifies how the customer and account are related to each
            other
          example: Borrower
        relationshipDescription:
          type: string
          description: The description of the relationship code
          readOnly: true
          example: Borrower
        relationshipType:
          $ref: '#/components/schemas/RelationType'
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
      description: Allied Account to customer relationship detail
    AlliedAccountToAccount:
      required:
        - account
        - accountClassificationType
        - relationshipType
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
        accountClassificationType:
          $ref: '#/components/schemas/ClassificationType'
        relationshipType:
          type: string
          description: The type of the relationship
          example: DisbursementAccount
        account:
          $ref: '#/components/schemas/LoanAccount_2'
        externalAccount:
          $ref: '#/components/schemas/ExternalAccountInformation'
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
      description: Allied Account to Account Relationship
    AlliedAccountToAccountInfo:
      required:
        - account
        - accountClassificationType
        - relationshipType
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
        accountClassificationType:
          $ref: '#/components/schemas/ClassificationType'
        relationshipType:
          type: string
          description: The type of the relationship
          example: DisbursementAccount
        account:
          $ref: '#/components/schemas/LoanAccount_2'
        externalAccount:
          $ref: >-
            #/components/schemas/ExternalAccountInformationWithoutTransferPurpose
        settlementMethod:
          type: string
          description: >-
            Indicates a valid settlement type as defined for the FE like ACH,
            SWIFT, FEDWIRE
          example: ACH
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
      description: Allied Account to Account Relationship
    AlliedAccountInfo:
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: SecuredInstallmentLoan, UnsecuredInstalmentLoan
        accountId:
          maximum: 40
          type: string
          description: The account identifier from the system of record
          example: '50002301049'
        productKey:
          type: string
          description: Product key
          example: UNSECLNPROD
        productLine:
          type: string
          description: Product line
          example: Retail Lending
        productGroup:
          type: string
          description: Product group
          example: Consumer Loan
        productTemplate:
          type: string
          description: Product template
          example: UnsecuredTermLoan
        productName:
          type: string
          description: Product name
          example: Premier Unsecured Loan Product
        basic:
          $ref: '#/components/schemas/AlliedAccountInfo_basic'
        disbursement:
          $ref: '#/components/schemas/AlliedAccountInfo_disbursement'
        ownership:
          $ref: '#/components/schemas/AlliedAccountInfo_ownership'
        alliedAccountToTransferringAccountRelationships:
          type: array
          description: Allied account to transferring account relationships info
          items:
            $ref: '#/components/schemas/AlliedAccountToAccountInfo'
        disbursementBalances:
          type: array
          description: Array of disbursement balances informations
          items:
            $ref: '#/components/schemas/AdditionalBalance_1'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail_1'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Allied Account Detail
    USAccountRequest:
      type: object
      properties:
        originatorAccountType:
          type: string
          description: >-
            Account type which is originating the ACH outgoing payment or
            collection request.
          example: Consumer Loan
      description: US geographic specific account information
    AccountsInfoRelatedToAlliedAccount:
      type: object
      properties:
        accounts:
          type: array
          description: Array of accounts info related To allied account.
          items:
            $ref: '#/components/schemas/AccountRelatedToAlliedAccount'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTimeInfo'
      description: Accounts related to allied account.
    AccountRelatedToAlliedAccount:
      required:
        - accountId
        - accountType
        - basic
        - insurance
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: SecuredInstallmentLoan, UnsecuredInstalmentLoan
        accountId:
          maximum: 40
          type: string
          description: The account identifier from the system of record
          example: '50002301049'
        basic:
          $ref: '#/components/schemas/AccountBasicInfoRelatedToAlliedAccount'
        insurance:
          $ref: '#/components/schemas/AccountRelatedToAlliedAccount_insurance'
      description: Accounts related to allied account.
    AccountBasicInfoRelatedToAlliedAccount:
      required:
        - nickName
        - primaryStatus
        - productKey
      type: object
      properties:
        productKey:
          type: string
          description: Enterprise product key
          example: MBPAPIBILL
        accountTitles:
          type: array
          description: Title of the account
          items:
            type: string
            example: Loan Acc
        nickName:
          type: string
          description: Nick name of the account
          example: UNSECURED LENDING ACCOUNT
        branchOrganizationUnitId:
          type: string
          description: Specifies branch where the account is held
          example: OU001
        currencyCode:
          type: string
          description: The code of currency
          readOnly: true
          example: USD
        currencyName:
          type: string
          description: Name of the currency
          readOnly: true
          example: US Dollar
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from which account is going to be effective
          format: date
          example: '2021-01-01'
        primaryStatus:
          type: string
          description: Primary life cycle status of the account
          example: UnderEstablishment
          enum:
            - Active
            - Cancelled
            - Settled
            - UnderEstablishment
        secondaryStatus:
          type: string
          description: Secondary life cycle status of the account
          example: InProcess
        secondaryStatusReason:
          type: string
          description: Reason for the secondary status
          example: InProcess
        approvalStatus:
          type: string
          description: Approval status
          example: Approved
          enum:
            - Approved
            - Cancelled
            - In Progress
            - Pending Approval
            - Rejected
        secondaryStatusReasonDescription:
          type: string
          description: Reason description for the secondary status
          example: New branch made active
      description: Contains basic detail of the account
    CreateGLPosting:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/AccountDetail'
        fromGeneralLedger:
          $ref: '#/components/schemas/CreateGLPosting_fromGeneralLedger'
        toGeneralLedger:
          $ref: '#/components/schemas/CreateGLPosting_toGeneralLedger'
        bookingDateRange:
          $ref: '#/components/schemas/CreateGLPosting_bookingDateRange'
        balanceCode:
          type: string
          description: Balance attribute code
          example: PrincipalRecoveries
        financialPosting:
          $ref: '#/components/schemas/CreateGLPosting_financialPosting'
        organizationUnitId:
          type: string
          description: >-
            The unique identifier used to identify the organization unit (OU)
            within organization
          example: OU001
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time the transaction was accepted by a delivery channel
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: LN Record GL Posting Correction
    GLPostingResponse:
      type: object
      properties:
        balanceCode:
          type: string
          description: Balance Code
          example: PrincipalRecoveries
        financialOperationId:
          type: integer
          description: Financial operation identifier
          format: int64
          example: 2620
        postingId:
          type: integer
          description: posting identifier
          format: int64
          example: 7000267184171
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: LN Record GL Posting Correction response
    CommonResponse:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: SecuredInstallmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '00001870020342'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Creation/updation response data
    MaintenanceTime:
      type: object
      properties:
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time transaction was accepted by a delivery channel
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
        financialEntityOperationalTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Financial entity operational timestamp
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
        operatorUTCTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time that the service was completed
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
        organizationUnitOperationalTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Organization unit operational timestamp
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: Maintenance time info
    StandardError:
      type: object
      properties:
        type:
          maxLength: 64
          type: string
          description: >-
            Type of condition that occurred.  Application semantics.  API
            clients should look here to determine type of problem.  Consider as
            required. Could be URN unique within API?!
          format: uri
          example: Error
        title:
          maxLength: 64
          type: string
          description: >-
            short summary of the problem (logically an attribute of type) ...
            human (developer) readable.  advisory.
          example: Error title
        details:
          maxItems: 32
          type: array
          description: List of error details
          items:
            $ref: '#/components/schemas/ErrorDetails'
    ErrorDetails:
      required:
        - code
        - message
      type: object
      properties:
        code:
          maxLength: 16
          type: string
          description: The code uniquely identifying the message.
          example: E00001
        message:
          maxLength: 64
          type: string
          description: >-
            A text description of the instance of the problem that occurred, and
            possibly  to correct it.
          example: Error message indicating what the problem is
        field:
          maxLength: 32
          type: string
          description: >-
            This is used to identify a particular attribute of a corresponding
            API request that is in error.
          example: field
      description: Error details
    Error:
      type: object
      properties:
        type:
          type: string
          description: >-
            Type of condition that occurred.  Application semantics.  API
            clients should look here to determine type of problem.  Consider as
            required. Could be URN unique within API?!
          format: uri
          example: Error
        title:
          type: string
          description: >-
            short summary of the problem (logically an attribute of type) ...
            human (developer) readable.  advisory.
          example: Error title
        details:
          maxItems: 32
          type: array
          description: List of error details
          items:
            $ref: '#/components/schemas/ErrorDetails'
    AccountStatus:
      required:
        - primaryStatus
        - secondaryStatus
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date when the status is to be effective
          format: date
          example: '2021-01-01'
        customerInducedIndicator:
          type: boolean
          description: Indicates if this transaction is initiated by customer request
          example: true
        primaryStatus:
          $ref: '#/components/schemas/LoanAccountStatus'
        secondaryStatus:
          type: string
          description: Secondary status of the account
          example: InProcess
      description: Contains account status information
    LoanAccountStatus:
      type: string
      description: The primary life cycle status of the account
      example: Active
      enum:
        - Active
        - Settled
        - UnderEstablishment
    SkipPayment_1:
      required:
        - earnIndicator
        - months
        - startDate
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Start date
          format: date
          example: '2021-01-01'
        earnIndicator:
          type: boolean
          description: Indicates whether earn during skip payment
          example: true
        months:
          uniqueItems: true
          type: array
          description: Months to skip payment
          items:
            type: string
            example: April
      description: Contains skip payment information
    ExtensionResponse:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '00001870020342'
        transactionId:
          type: string
          description: Extension transaction identifier
          example: '385018621'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Creation/updation response data
    DateRange:
      required:
        - fromDate
      type: object
      properties:
        fromDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Indicates the from date
          format: date
          example: '2021-01-01'
        toDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Indicates the to date
          format: date
          example: '2021-01-01'
      description: Date range
    ScheduledEventResponse:
      required:
        - accountId
        - accountType
        - scheduledEvents
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: SecuredInstallmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '00001870020342'
        scheduledEvents:
          type: array
          description: Array of scheduled event
          items:
            $ref: '#/components/schemas/ScheduledEventResponse_scheduledEvents'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Creation/updation response data
    PaymentInstructionResponse:
      required:
        - accountId
        - accountType
        - paymentInstructionReferenceNumber
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '00001870020342'
        paymentInstructionReferenceNumber:
          minimum: 1
          type: integer
          description: >-
            Payment instruction reference number which will be created at the
            time of new payment instruction set up
          format: int64
          example: 999900269446884
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Creation/updation response data
    CreateHold:
      required:
        - reasonCode
        - type
      type: object
      properties:
        holdId:
          type: string
          description: Uniquely identifies the hold placed on an account.
          example: '12345678'
        customerInducedIndicator:
          type: boolean
          description: Indicates if this transaction is initiated by Customer requested
          example: false
        type:
          type: string
          description: Identifies the type of hold on an arrangement.
          example: POS Authorization Hold
        amount:
          $ref: '#/components/schemas/Amount'
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date on which the Hold is effective.
          format: date
          example: '2021-01-01'
        requestor:
          type: string
          description: Indicates whom or what process requested the hold.
          example: Requestor
        payee:
          type: string
          description: The name of the payee for the hold.
          example: Payee
        reasonCode:
          type: string
          description: The reason code assigned to the hold.
          example: Reason code
        description:
          type: string
          description: A description of the hold.
          example: Hold description
        expirationTime:
          pattern: (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]
          type: string
          description: The expiration time of the hold.
          example: '20:20:39'
        expirationOneOf:
          type: object
          description: Hold expiration detail
          oneOf:
            - $ref: '#/components/schemas/TermTypeNumber'
            - required:
                - expirationDate
              type: object
              properties:
                expirationDate:
                  pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
                  type: string
                  description: >-
                    The date the Stop/Suspect/Hold record is no longer in
                    effect.
                  format: date
                  example: '2021-01-01'
            - required:
                - expireIndicator
              type: object
              properties:
                expireIndicator:
                  type: boolean
                  description: >-
                    Indicates whether the stop/suspect record will have an
                    expiration date or not.
                  example: true
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time the transaction was accepted by a delivery channel.
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: A hold transaction places a hold on the available amount
    Amount:
      required:
        - amount
      type: object
      properties:
        currencyCode:
          maxLength: 3
          minLength: 2
          type: string
          description: The code of currency
          example: USD
        amount:
          type: number
          description: Amount involved with the entity
          format: double
          example: 100
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date associated within the amount.
          format: date
          example: '2021-01-01'
      description: Amount info
    TermTypeNumber:
      required:
        - termNumber
        - termType
      type: object
      properties:
        termType:
          $ref: '#/components/schemas/TermType'
        termNumber:
          minimum: 1
          type: integer
          description: Maturity period
          format: int64
          example: 24
    TermType:
      type: string
      description: Indicates the term type
      example: Months
      enum:
        - Days
        - Months
        - Years
        - Weeks
    HoldResponse:
      required:
        - holdId
      type: object
      properties:
        holdId:
          type: string
          description: Uniquely identifies the hold placed on an account.
          example: '12345678'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Creation of a hold on an account
    UpdateHold:
      required:
        - confirmationValue
        - reasonCode
        - type
      type: object
      properties:
        customerInducedIndicator:
          type: boolean
          description: Indicates if this transaction is initiated by Customer requested
          example: false
        type:
          type: string
          description: Identifies the type of hold on an arrangement.
          example: POS Authorization Hold
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date on which the Hold is effective.
          format: date
          example: '2021-01-01'
        requestor:
          type: string
          description: Indicates whom or what process requested the hold.
          example: Requestor
        payee:
          type: string
          description: The name of the payee for the hold.
          example: Payee
        reasonCode:
          type: string
          description: The reason code assigned to the hold.
          example: Reason code
        description:
          type: string
          description: A description of the hold.
          example: Hold description
        expirationTime:
          pattern: (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]
          type: string
          description: The expiration time of the hold.
          example: '20:20:39'
        expirationOneOf:
          type: object
          description: Hold expiration detail
          oneOf:
            - $ref: '#/components/schemas/TermTypeNumber'
            - required:
                - expirationDate
              type: object
              properties:
                expirationDate:
                  pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
                  type: string
                  description: >-
                    The date the Stop/Suspect/Hold record is no longer in
                    effect.
                  format: date
                  example: '2021-01-01'
            - required:
                - expireIndicator
              type: object
              properties:
                expireIndicator:
                  type: boolean
                  description: >-
                    Indicates whether the stop/suspect record will have an
                    expiration date or not.
                  example: true
        confirmationValue:
          type: string
          description: Indicates the confirmation value
          example: Cancel
          enum:
            - Cancel
            - Confirm
            - Draft
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time the transaction was accepted by a delivery channel.
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: A hold transaction places a hold on the available amount
    AmountWithoutDate:
      required:
        - amount
      type: object
      properties:
        amount:
          type: number
          description: Amount involved with the entity
          format: double
          example: 100
        currencyCode:
          maxLength: 3
          minLength: 2
          type: string
          description: The code of currency
          example: USD
      description: Amount info
    CommonResponse_1:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: SecuredInstallmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '00001870020342'
        maintenanceResponse:
          $ref: '#/components/schemas/MaintenanceTime'
      description: Creation/updation response data
    UnsecuredTermAccountBasicDetail:
      required:
        - branchOrganizationUnitId
        - primaryStatus
        - productKey
      type: object
      properties:
        account:
          $ref: '#/components/schemas/LoanAccount_1'
        productKey:
          type: string
          description: Identifies the product key
          example: UNSECLNPRD, PREMIER_SEC
        accountTitles:
          uniqueItems: true
          type: array
          description: Title of the account
          items:
            type: string
            example: Loan Acc
        nickName:
          type: string
          description: Nick name of the account
          example: UNSECURED LENDING ACCOUNT, SECURED LENDING ACCOUNT
        branchOrganizationUnitId:
          type: string
          description: >-
            The unique identifier used to identify the branch organization unit
            (OU) within organization
          example: OU001
        currencyCode:
          type: string
          description: The code of currency
          example: USD
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from which account is going to be effective
          format: date
          example: '2021-01-01'
        primaryStatus:
          $ref: '#/components/schemas/PrimaryAccountStatus'
        secondaryStatus:
          type: string
          description: Secondary status of the account
          example: Normal
        secondaryStatusReason:
          type: string
          description: Reason for the secondary status
          example: InProcess
        secondaryStatusReasonDescription:
          type: string
          description: Description for the secondary status reason
          example: New branch made active
        approvalStatus:
          $ref: '#/components/schemas/ApprovalStatus'
        externalAccount:
          $ref: '#/components/schemas/ExternalAccount'
      description: Contains details common to transactional accounts
    LoanAccount_1:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: SecuredInstallmentLoan, UnsecuredInstalmentLoan, BuyNowPayLater
        accountId:
          maximum: 40
          type: string
          description: The account identifier from the system of record
          example: '50002301049'
        systemOfRecord:
          $ref: '#/components/schemas/SystemOfRecord'
      description: Contains loan account information
    SystemOfRecord:
      required:
        - applicationName
        - processorName
      type: object
      properties:
        processorName:
          type: string
          description: >-
            The software processor name which along with the application name
            uniquely identifies the system of record
          example: FIS NextGen
        applicationName:
          type: string
          description: Application name
          example: Lending
      description: Contains components used to define the system of record (SOR)
    PrimaryAccountStatus:
      type: string
      description: The primary life cycle status of the account
      example: Active
      enum:
        - Active
        - Cancelled
        - Settled
        - UnderEstablishment
    ApprovalStatus:
      type: string
      description: The approval status of the account
      readOnly: true
      example: Approved
      enum:
        - Approved
        - InProgress
        - PendingApproval
        - Rejected
    ExternalAccount:
      type: object
      properties:
        internationalBankAccountNumber:
          type: string
          description: International bank account number
          example: IBAN0035284
        accounts:
          type: array
          description: Array of account detail
          items:
            $ref: '#/components/schemas/ExternalAccount_accounts'
      description: Contains details of external accounts
    Reporting_1:
      type: object
      properties:
        purposeCode:
          type: string
          description: Purpose code. Identifies the reason for the loan
          example: Purchased
        managementClass:
          type: string
          description: Code to identify management class
          example: InstallmentLoans
      description: Contains reporting information
    DisbursementUnSecured:
      type: object
      properties:
        fundDuringOrginationIndicator:
          type: boolean
          description: Fund during origination
          example: true
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Disbursement date. The date on which the funds from the loan account
            is made available for the customer. In case of multiple
            disbursements, this will be the first date of disbursement
          format: date
          example: '2021-01-01'
        autoDisbursementIndicator:
          type: boolean
          description: Indicates whether automatic disbursement is allowed on the loan
          example: true
        method:
          type: string
          description: >-
            Disbursement method. Identifies if the disbursement is to an
            external account or internal account or via a cheque
          example: TransferExternalAccount
        amount:
          $ref: '#/components/schemas/AmountReadOnly'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains disbursement information
    AmountReadOnly:
      required:
        - amount
      type: object
      properties:
        currencyCode:
          maxLength: 3
          minLength: 2
          type: string
          description: The code of currency
          example: USD
        amount:
          type: number
          description: Amount involved with the entity
          format: double
          example: 100
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date associated within the amount.
          format: date
          example: '2021-01-01'
      description: Amount info
      readOnly: true
    AuditTrail:
      type: object
      properties:
        userId:
          type: string
          description: User id who has approved the data
          example: BillySmith
        deviceId:
          type: string
          description: Device/workstation id from where the data has been approved
          example: BackOffice
        businessProcess:
          type: string
          description: Business process which has approved the data
          example: DPRecordArrangementException_v1.2.0
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: >-
            Accepted timestamp. Indicates the initiation time of the transaction
            from the calling application
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
        operationTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: >-
            Operation timestamp. Indicates the timestamp recorded at the server
            when the service is been invoked on the server
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
        hostTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: >-
            Host timestamp when the data is inserted in the database stored in
            UTC timezone
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
        uuid:
          maxLength: 36
          minLength: 36
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          type: string
          description: Unique request identifier/ Universal unique id
          example: 9c5ef15c-d7b5-4134-af98-86a85bcdebc0
      description: Contains the audit trail information
      readOnly: true
    Repayment:
      required:
        - autoPaymentIndicator
        - paymentFrequencyType
        - paymentMethod
      type: object
      properties:
        firstPaymentDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: First payment date
          format: date
          example: '2021-01-01'
        userDefinedFlatAmount:
          $ref: '#/components/schemas/Amount'
        autoPaymentIndicator:
          type: boolean
          description: Indicates whether auto payment of loan is allowed
          example: true
        paymentMethod:
          type: string
          description: >-
            Identifies if the payment is from an internal account or External
            account or via a cheque
          example: TransferExternalAccount
        paymentFrequencyType:
          type: string
          description: >-
            The frequency at which the payments should be scheduled. The payment
            frequency type defined at the product level should default
          example: EndOfEveryMonth
        paymentFrequencyValue:
          type: string
          description: >-
            A component of the payment frequency which identifies the date of
            repayment. The value defined at the product level should default
          example: '5'
      description: Contains repayment information
    InterestProcessing:
      type: object
      properties:
        oddDayProcessingIndicator:
          type: boolean
          description: >-
            Indicates whether odd days interest processing is applicable for the
            arrangement or not
          example: true
        oddDayCollection:
          type: string
          description: >-
            When odd day interest processing is "Yes", then one of the valid
            values shall be provided
          example: Add to First Bill,Collect at Closing, Amortize the Interest
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains interest processing information
    AdditionalDetail:
      required:
        - type
        - value
      type: object
      properties:
        type:
          type: string
          description: Type
          example: ManualFeeWaiverReason
        value:
          type: string
          description: Value of the type
          example: BankError
      description: Contains additional detail
    UnsecuredTermAccountOwnership:
      required:
        - customerId
        - relationshipCode
      type: object
      properties:
        customerId:
          type: string
          description: >-
            This is the primary customer id of the customer system to which the
            MBP Deposits is integrated with
          example: >-
            Default Integration – MBP Core Deposits by default integrated with
            FIS Enterprise Customer system
        systemOfRecord:
          $ref: '#/components/schemas/UnsecuredTermAccountOwnership_systemOfRecord'
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        relationshipPercentage:
          type: number
          description: Percentage shared by the related roles
          format: double
          example: 100
        relationshipCode:
          type: string
          description: >-
            The code identifies how the customer and account are related to each
            other
          example: Borrower
        relationshipType:
          $ref: '#/components/schemas/RelationType'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Details of the customer
    RelationType:
      type: string
      description: Relation Type
      example: Primary
      enum:
        - Primary
        - Secondary
    OfficerInfo:
      required:
        - id
        - relationshiptype
        - startDate
      type: object
      properties:
        id:
          type: string
          description: The identifier for the officer.
          example: '70000021904'
        fullName:
          type: string
          description: The full name of the officer (Deprecated field)
          example: Relationship Manager
        relationshipType:
          $ref: '#/components/schemas/RelationType'
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date relationship is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains related officer information
    UnsecuredTermAccountToAccountRelation:
      required:
        - accountClassificationType
        - accountDetail
        - relationshipType
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
        accountClassificationType:
          $ref: '#/components/schemas/ClassificationType'
        relationshipType:
          type: string
          description: The type of the relationship
          example: DisbursementAccount
        account:
          $ref: '#/components/schemas/LoanAccount_1'
        percentage:
          type: number
          description: Indicates the percentage applicable for the account relationship
          format: double
          example: 100
        externalAccount:
          $ref: '#/components/schemas/ExternalAccountInformation'
        settlementMethod:
          type: string
          description: >-
            Indicates a valid settlement type as defined for the FE like ACH,
            SWIFT, FEDWIRE
          example: ACH
        receiverName:
          type: string
          description: >-
            Name of the receiver to whom funds are to be made available or from
            whom funds are to be collected
          example: Receiver name
        priority:
          minimum: 1
          type: integer
          description: Indicates the priority of the account relationship
          format: int64
          example: 1
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains account to account relationship details
    ClassificationType:
      type: string
      description: Classification type
      example: Internal
      enum:
        - Internal
        - External
    ExternalAccountInformation:
      required:
        - accountType
        - financialEntityIdType
        - financialEntityIdValue
      type: object
      properties:
        accountType:
          type: string
          description: Indicates the account type of settlement
          example: Consumer Checking
        financialEntityIdType:
          type: string
          description: >-
            Indicates the transaction type/settlement medium through which the
            settlement happens
          example: ACH
        financialEntityIdValue:
          type: string
          description: Indicates the value of financial entity id
          example: ABA Number, Routing Number, BIC, UI, etc
        transferPurpose:
          type: string
          description: Indicates the purpose of transfer
          example: Loan Repayment, Donation, Gift, Deposit, Investment, etc
      description: Contains external account information
    AccountOwnership:
      required:
        - customerId
        - relationshipCode
      type: object
      properties:
        customerId:
          type: string
          description: >-
            This is the primary customer id of the customer system to which the
            MBP Deposits is integrated with
          example: >-
            Default Integration – MBP Core Deposits by default integrated with
            FIS Enterprise Customer system
        systemOfRecord:
          $ref: '#/components/schemas/SystemOfRecord'
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          readOnly: true
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          readOnly: true
          example: '2021-01-01'
        relationshipPercentage:
          type: number
          description: Percentage shared by the related roles
          format: double
          example: 100
        relationshipCode:
          type: string
          description: >-
            The code identifies how the customer and account are related to each
            other
          example: Borrower
        relationshipDescription:
          type: string
          description: The description of the relationship code
          readOnly: true
          example: Borrower
        relationshipType:
          $ref: '#/components/schemas/RelationType'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Details of the customer
    Business:
      required:
        - repayment
      type: object
      properties:
        servicingBranch:
          type: string
          description: Branch where account is serviced
          example: OU001
        classificationCode:
          type: string
          description: Classification code of the loan
          example: AnyCode
        riskRating:
          type: string
          description: Current risk rating or loan grade on the loan
          example: NoRisk
        riskRatingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of last risk rating update
          format: date
          example: '2021-01-01'
        contractualAmount:
          $ref: '#/components/schemas/Amount'
        financedCharge:
          $ref: '#/components/schemas/Amount'
        originalProceed:
          $ref: '#/components/schemas/Amount'
        reporting:
          $ref: '#/components/schemas/Reporting_1'
        maturity:
          $ref: '#/components/schemas/Business_maturity'
        paymentAppropriationCode:
          type: string
          description: Payment appropriation code
          example: PMTAPPACCRL
        closure:
          $ref: '#/components/schemas/Business_closure'
        stateCode:
          type: string
          description: Indicates the State where the arrangement is been serviced.
          example: CA
        collectionReporting:
          $ref: '#/components/schemas/LocAccountInfo_business_collectionReport'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
        disbursement:
          $ref: '#/components/schemas/DisbursementUnSecured'
        payment:
          $ref: '#/components/schemas/Business_payment'
        interest:
          $ref: '#/components/schemas/InterestProcessing'
      description: Contains business information
    Maturity:
      type: object
      properties:
        terms:
          type: array
          description: Array of term detail
          items:
            $ref: '#/components/schemas/TermTypeNumber'
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Maturity date
          format: date
          example: '2021-01-01'
      description: Contains maturity info
    MaturityCurrent:
      type: object
      properties:
        originalMaturityDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Original maturity date
          format: date
          example: '2021-01-01'
        previousMaturityDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Previous maturity date
          format: date
          example: '2021-01-01'
        originalTerms:
          type: array
          description: Array of term detail
          items:
            $ref: '#/components/schemas/TermTypeNumber'
      description: Contains current maturity info
    RepaymentSchedule:
      required:
        - dueDate
        - interest
        - principal
        - scheduledBalance
        - totalDue
      type: object
      properties:
        dueDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date on which the payment is due
          format: date
          example: '2021-01-01'
        totalDue:
          $ref: '#/components/schemas/Amount'
        principal:
          $ref: '#/components/schemas/Amount'
        interest:
          $ref: '#/components/schemas/Amount'
        scheduledBalance:
          $ref: '#/components/schemas/Amount'
        skipIndicator:
          type: boolean
          description: Indicates if payment skipped originally during account boarding
          example: true
        promotionalExtensionSkipIndicator:
          type: boolean
          description: Indicates if payment skipped due to promotional extension
          example: true
        delinquencyExtensionSkipIndicator:
          type: boolean
          description: Indicates if payment skipped due to deliquency extension
          example: true
      description: Contains repayment schedule details
    AccountToAccountRelation:
      required:
        - accountClassificationType
        - accountDetail
        - relationshipType
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
        accountClassificationType:
          $ref: '#/components/schemas/ClassificationType'
        relationshipType:
          type: string
          description: The type of the relationship
          example: DisbursementAccount
        account:
          $ref: '#/components/schemas/LoanAccount_2'
        percentage:
          type: number
          description: Indicates the percentage applicable for the account relationship
          format: double
          example: 100
        externalAccount:
          $ref: >-
            #/components/schemas/ExternalAccountInformationWithoutTransferPurpose
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
        settlementMethod:
          type: string
          description: >-
            Indicates a valid settlement type as defined for the FE like ACH,
            SWIFT, FEDWIRE
          example: ACH
        priority:
          minimum: 1
          type: integer
          description: Indicates the priority of the account relationship
          format: int64
          example: 1
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains account to account relationship details
    LoanAccount_2:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: SecuredInstallmentLoan, UnsecuredInstalmentLoan
        accountId:
          maximum: 40
          type: string
          description: The account identifier from the system of record
          example: '50002301049'
        systemOfRecord:
          $ref: '#/components/schemas/SystemOfRecord'
      description: Contains loan account information
    ExternalAccountInformationWithoutTransferPurpose:
      required:
        - accountType
        - financialEntityIdType
        - financialEntityIdValue
      type: object
      properties:
        accountType:
          type: string
          description: Indicates the account type of settlement
          example: Consumer Checking
        financialEntityIdType:
          type: string
          description: >-
            Indicates the transaction type/settlement medium through which the
            settlement happens
          example: ACH
        financialEntityIdValue:
          type: string
          description: Indicates the value of financial entity id
          example: ABA Number, Routing Number, BIC, UI, etc
      description: Contains external account information
    AdditionalBalance:
      required:
        - balanceCode
      type: object
      properties:
        balanceCode:
          type: string
          description: Balance code. Identifies the type of balance
          example: OutStandingPrincipalBalance
        balanceName:
          type: string
          description: Balance name. Contains description of the balance code
          example: OutStanding Principal Balance
        amount:
          $ref: '#/components/schemas/Amount'
    PeriodicBalance:
      type: object
      properties:
        balanceCode:
          type: string
          description: Balance code
          example: OutStandingPrincipalBalance
        description:
          type: string
          description: Description of the code
          example: Principal Original Balance
        balances:
          type: array
          description: Array of balance detail
          items:
            $ref: '#/components/schemas/PeriodBalanceAmount'
    PeriodBalanceAmount:
      required:
        - amount
        - periodType
      type: object
      properties:
        periodType:
          type: string
          description: Balance period type
          example: Monthly, Quarterly, Yearly etc
        amount:
          $ref: '#/components/schemas/Amount'
      description: Specifies the balances in different periods.
    Activity:
      type: object
      properties:
        loanBookingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Loan booking date
          format: date
          example: '2021-01-01'
        firstDisbursementDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: First disbursement date
          format: date
          example: '2021-01-01'
        lastDisbursementDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of last disbursement
          format: date
          example: '2021-01-01'
        lastContactDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Last contacted date
          format: date
          example: '2021-01-01'
        lastMaintenanceDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Last maintainence date
          format: date
          example: '2021-01-01'
        lastCustomerActivityDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Last customer activity date
          format: date
          example: '2021-01-01'
        loanClosureDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Loan closure date
          format: date
          example: '2021-01-01'
        loanPaidOffDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Loan paid off date
          format: date
          example: '2021-01-01'
        lastRepaymentModificationDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Date on which last repayments modification was processed on the loan
            account
          format: date
          example: '2021-01-01'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains user activity information
    PeriodTypeAndDefaultNumber:
      type: object
      properties:
        periodType:
          type: string
          description: >-
            Period type . Year to Date is between Jan-Dec. Life to Date is
            between the period of loan start date to loan maturity
          example: YTD (Year to Date) and LTD (Life to Date)
        defaultNumber:
          minimum: 1
          type: integer
          description: >-
            This field provides the number of times a transaction has been
            reversed with 'Reversal Reason Code = Non-Sufficient Fund'
          format: int64
          example: 2
      description: Denotes period type and default number
    AccountBasicDetail:
      required:
        - branchOrganizationUnitId
        - primaryStatus
        - productKey
      type: object
      properties:
        account:
          $ref: '#/components/schemas/LoanAccount_1'
        productKey:
          type: string
          description: Identifies the product key
          example: UNSECLNPRD, PREMIER_SEC
        accountTitles:
          uniqueItems: true
          type: array
          description: Title of the account
          items:
            type: string
            example: Loan Acc
        nickName:
          type: string
          description: Nick name of the account
          example: UNSECURED LENDING ACCOUNT, SECURED LENDING ACCOUNT
        branchOrganizationUnitId:
          type: string
          description: >-
            The unique identifier used to identify the branch organization unit
            (OU) within organization
          example: OU001
        currencyCode:
          type: string
          description: The code of currency
          readOnly: true
          example: USD
        currencyName:
          type: string
          description: Name of the currency
          readOnly: true
          example: US Dollar
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from which account is going to be effective
          format: date
          example: '2021-01-01'
        primaryStatus:
          $ref: '#/components/schemas/PrimaryAccountStatus'
        secondaryStatus:
          type: string
          description: Secondary status of the account
          example: Normal
        secondaryStatusReason:
          type: string
          description: Reason for the secondary status
          example: InProcess
        approvalStatus:
          $ref: '#/components/schemas/ApprovalStatus'
        externalAccount:
          $ref: '#/components/schemas/ExternalAccount'
      description: Contains details common to transactional accounts
    TypeValueOptional:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          description: Type of the field used
          example: DaysBetween
        value:
          type: string
          description: Value of the type field
          example: '2'
      description: Contains type and value info
    SecuredTermAccountToAccountRelation:
      required:
        - accountClassificationType
        - accountDetail
        - relationshipType
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
        accountClassificationType:
          $ref: '#/components/schemas/ClassificationType'
        relationshipType:
          type: string
          description: The type of the relationship
          example: DisbursementAccount
        account:
          $ref: '#/components/schemas/LoanAccount_2'
        percentage:
          type: number
          description: Indicates the percentage applicable for the account relationship
          format: double
          example: 100
        externalAccount:
          $ref: >-
            #/components/schemas/ExternalAccountInformationWithoutTransferPurpose
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
        settlementMethod:
          type: string
          description: >-
            Indicates a valid settlement type as defined for the FE like ACH,
            SWIFT, FEDWIRE
          example: ACH
        receiverName:
          type: string
          description: >-
            Name of the receiver to whom funds are to be made available or from
            whom funds are to be collected
          example: Receiver name
        priority:
          minimum: 1
          type: integer
          description: Indicates the priority of the account relationship
          format: int64
          example: 1
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains account to account relationship details
    SecuredBusiness:
      required:
        - repayment
      type: object
      properties:
        servicingBranch:
          type: string
          description: Branch where account is serviced
          example: OU001
        classificationCode:
          type: string
          description: Classification code of the loan
          example: AnyCode
        riskRating:
          type: string
          description: Current risk rating or loan grade on the loan
          example: NoRisk
        riskRatingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of last risk rating update
          format: date
          example: '2021-01-01'
        collateral:
          $ref: '#/components/schemas/TypeValueOptional'
        contractualAmount:
          $ref: '#/components/schemas/Amount'
        financedCharge:
          $ref: '#/components/schemas/Amount'
        originalProceed:
          $ref: '#/components/schemas/Amount'
        reporting:
          $ref: '#/components/schemas/Reporting_1'
        maturity:
          $ref: '#/components/schemas/Business_maturity'
        paymentAppropriationCode:
          type: string
          description: Payment appropriation code
          example: PAPP_SEC
        closure:
          $ref: '#/components/schemas/SecuredBusiness_closure'
        stateCode:
          type: string
          description: Indicates the State where the arrangement is been serviced.
          example: CA
        collectionReporting:
          $ref: '#/components/schemas/LocAccountInfo_business_collectionReport'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
        disbursements:
          type: array
          description: Array of disbursement
          items:
            $ref: '#/components/schemas/DisbursementUnSecured'
        payment:
          $ref: '#/components/schemas/SecuredBusiness_payment'
        interest:
          $ref: '#/components/schemas/InterestProcessing'
      description: Contains secured business information
    RateInfo:
      required:
        - primaryFrequency
      type: object
      properties:
        resetMaturityRecalculationOption:
          type: string
          description: >-
            Rate reset maturity recalculation option. Option to determine
            whether the maturity date of the account needs to be recalculated or
            the repayment amount needs to be recalculated.
          example: Recalculate Maturity Date, Recalculate Payment Amount
        primaryFrequency:
          $ref: '#/components/schemas/TypeValueOptional'
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Date from which the rate change is going to be effective on the
            account
          format: date
          example: '2021-01-01'
        autoRateChangeNumberToDate:
          type: array
          description: >-
            This field signifies number of times automatic rate changes, that
            has led to change in the applicable interest rate, have been
            processed on the loan account.
          items:
            $ref: '#/components/schemas/PeriodTypeAndDefaultNumber'
        repaymentModificationRateChangeNumberToDate:
          type: array
          description: >-
            Number of times repayment modification have been processed due to
            rate change
          items:
            $ref: '#/components/schemas/PeriodTypeAndDefaultNumber'
      description: Contains rate update information
    OperationalTimestamp:
      required:
        - financialEntityOperationalTimestamp
        - operatorUTCTimestamp
      type: object
      properties:
        financialEntityOperationalTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Financial entity operational timestamp
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
        operatorUTCTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Date and time that the service was completed
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
        organizationUnitOperationalTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: Organization unit operational timestamp
          format: date-time
          example: '2020-11-24T21:23:27.921792Z'
      description: Operational time info
    NonAccrual:
      type: object
      properties:
        autoNonAccrualIndicator:
          type: boolean
          description: Indicates whether automatic non accrual is allowed on an account
          example: true
        reason:
          type: string
          description: Reason for putting the account in non-accrual status
          example: Bankruptcy, Judgement
        cashBasisIndicator:
          type: boolean
          description: >-
            Indicates whether cash basis is allowed on an account when in
            non-accrual
          example: true
      description: Contains the non-accrual detail
    ChargeOff:
      type: object
      properties:
        autoChargeOffIndicator:
          type: boolean
          description: Indicates whether automatic charge-off is allowed on an account
          example: true
        autoRecoveryIndicator:
          type: boolean
          description: >-
            Indicates whether auto recovery is allowed on an account when in
            charge-Off/partial charge-Off
          example: true
        reason:
          type: string
          description: Reason for putting the account in charge off status
          example: Bankruptcy, Judgement
      description: Contains the charge off detail
    NonAccrual_1:
      type: object
      properties:
        autoNonAccrualIndicator:
          type: boolean
          description: Indicates whether automatic non accrual is allowed on an account
          example: true
        reason:
          type: string
          description: Reason for putting the account in non-accrual status
          example: Bankruptcy, Judgement
        cashBasisIndicator:
          type: boolean
          description: >-
            Indicates whether cash basis is allowed on an account when in
            non-accrual
          example: true
        shadowAccountingIndicator:
          type: boolean
          description: Indicates whether the loan is utilizing the dual accounting feature.
          example: true
      description: Contains the non-accrual detail
    BalanceView:
      type: object
      properties:
        activeBalances:
          type: array
          description: Array of active balance
          items:
            $ref: '#/components/schemas/AdditionalBalance'
        nonAccrualBalances:
          type: array
          description: Array of non accural balance
          items:
            $ref: '#/components/schemas/AdditionalBalance'
        chargeOffBalances:
          type: array
          description: Array of chargeoff balance
          items:
            $ref: '#/components/schemas/AdditionalBalance'
      description: Balance view
    InsuranceRebateDetail:
      required:
        - planType
      type: object
      properties:
        planType:
          type: string
          description: Indicates the type of insurance plan linked to the account
          example: CreditLife
        rebateAmount:
          $ref: '#/components/schemas/Amount'
      description: Indicates the Insurance Rebate Details
    LocDisbursement:
      required:
        - advancedFromOriginationIndicator
        - autoDisbursementIndicator
      type: object
      properties:
        advancedFromOriginationIndicator:
          type: boolean
          description: Fund during origination
          example: true
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Disbursement date. The date on which the funds from the loan account
            is made available for the customer. In case of multiple
            disbursements, this will be the first date of disbursement
          format: date
          example: '2021-01-01'
        autoDisbursementIndicator:
          type: boolean
          description: Indicates whether automatic disbursement is allowed on the loan
          example: true
        method:
          type: string
          description: >-
            Disbursement method. Identifies if the disbursement is to an
            external account or internal account or via a cheque
          example: TransferExternalAccount
      description: Contains disbursement information
    LocRepayment:
      required:
        - paymentFrequencyType
      type: object
      properties:
        firstPaymentDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: First payment date
          format: date
          example: '2021-01-01'
        autoPaymentIndicator:
          type: boolean
          description: Indicates whether auto payment of loan is allowed
          example: true
        paymentMethod:
          type: string
          description: >-
            Identifies if the payment is from an internal account or External
            account or via a cheque
          example: TransferExternalAccount
        paymentFrequencyType:
          type: string
          description: >-
            The frequency at which the payments should be scheduled. The payment
            frequency type defined at the product level should default
          example: EndOfEveryMonth
        paymentFrequencyValue:
          type: string
          description: >-
            A component of the payment frequency which identifies the date of
            repayment. The value defined at the product level should default
          example: '5'
      description: Contains repayment information
    LocAccountOwnership:
      required:
        - customerId
        - relationshipCode
      type: object
      properties:
        customerId:
          type: string
          description: >-
            This is the primary customer id of the customer system to which the
            MBP Deposits is integrated with
          example: >-
            Default Integration – MBP Core Deposits by default integrated with
            FIS Enterprise Customer system
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        relationshipPercentage:
          type: number
          description: Percentage shared by the related roles
          format: double
          example: 100
        relationshipCode:
          type: string
          description: >-
            The code identifies how the customer and account are related to each
            other
          example: Borrower
        relationshipDescription:
          type: string
          description: The description of the relationship code
          example: Borrower
        relationshipType:
          $ref: '#/components/schemas/RelationType'
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
      description: Details of the customer
    LocOfficerInfo:
      required:
        - id
        - relationshiptype
        - startDate
      type: object
      properties:
        id:
          type: string
          description: The identifier for the officer.
          example: '70000021904'
        relationshipType:
          $ref: '#/components/schemas/RelationType'
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date relationship is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
      description: Contains related officer information
    LocAccountToAccountRelation:
      required:
        - account
        - accountClassificationType
        - relationshipType
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
        accountClassificationType:
          $ref: '#/components/schemas/ClassificationType'
        relationshipType:
          type: string
          description: The type of the relationship
          example: DisbursementAccount
        account:
          $ref: '#/components/schemas/LoanAccount_1'
        percentage:
          type: number
          description: Indicates the percentage applicable for the account relationship
          format: double
          example: 100
        externalAccount:
          $ref: '#/components/schemas/ExternalAccountInformation'
        settlementMethod:
          type: string
          description: >-
            Indicates a valid settlement type as defined for the FE like ACH,
            SWIFT, FEDWIRE
          example: ACH
        receiverName:
          type: string
          description: >-
            Name of the receiver to whom funds are to be made available or from
            whom funds are to be collected
          example: Receiver name
        priority:
          minimum: 1
          type: integer
          description: Indicates the priority of the account relationship
          format: int64
          example: 1
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
      description: Contains account to account relationship details
    LocCreditLimit:
      type: object
      properties:
        advertisementLevel:
          type: string
          description: >-
            Specifies whether the customer is aware of the commitment and if so
            whether the commitment is an informal or legal agreement
          example: Guidance
        revolvingIndicator:
          type: boolean
          description: Indicates whether the limit is revolving or not
          example: false
        closedAtMaturityIndicator:
          type: boolean
          description: >-
            Indicates whether line gets closed based on the maturity date and no
            further advances can be made once the maturity of the LOC account is
            reached
          example: true
        amount:
          $ref: '#/components/schemas/Amount'
        overLine:
          $ref: '#/components/schemas/LocCreditLimit_overLine'
      description: Contains credit limit details
    LocDisbursementInfo:
      required:
        - advancedFromOriginationIndicator
      type: object
      properties:
        advancedFromOriginationIndicator:
          type: boolean
          description: Fund during origination
          example: true
        autoDisbursementIndicator:
          type: boolean
          description: Indicates whether automatic disbursement is allowed on the loan
          example: true
        notes:
          type: array
          description: Array of disbursement record
          items:
            $ref: '#/components/schemas/LocDisbursementInfo_notes'
      description: Contains disbursement information
    LocOfficer:
      required:
        - id
        - relationshiptype
        - startDate
      type: object
      properties:
        id:
          type: string
          description: The identifier for the officer.
          example: '70000021904'
        relationshipManagerName:
          type: string
          description: Name of the relationship manager.
          example: ManagerName
        relationshipType:
          $ref: '#/components/schemas/RelationType'
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date relationship is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
        latestRecordAvailableIndicator:
          type: boolean
          description: Indicates if the latest version of the record is available
          example: true
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains related officer information
    LocActivityInfo:
      required:
        - lastContactDate
        - lastCustomerActivityDate
        - lastMaintenanceDate
        - loanBookingDate
      type: object
      properties:
        loanBookingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of loan booking
          format: date
          example: '2021-01-01'
        lastContactDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date determines the last date when the FI contacted the customer
          format: date
          example: '2021-01-01'
        lastMaintenanceDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date on which last maintenace was done on the loan account
          format: date
          example: '2021-01-01'
        lastCustomerActivityDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date on which customer contacted the FI for a monetary (payment)
            or a non monetary activity like address change
          format: date
          example: '2021-01-01'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains account activity information
    LocCreditLimitInfo:
      type: object
      properties:
        advertisementLevel:
          type: string
          description: >-
            Specifies whether the customer is aware of the commitment and if so
            whether the commitment is an informal or legal agreement
          example: Guidance
        revolvingIndicator:
          type: boolean
          description: Indicates whether the limit is revolving or not
          example: false
        limitDrawEndIndicator:
          type: boolean
          description: >-
            Indicates whether no further advances are allowed on an LOC account
            from the current date.
          example: false
        drawPeriodEndDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Date at which the draw period ends so that no further advances can
            be made from the LOC
          format: date
          example: '2021-01-01'
        closedAtMaturityIndicator:
          type: boolean
          description: >-
            Indicates whether line gets closed based on the maturity date and no
            further advances can be made once the maturity of the LOC account is
            reached
          example: true
        closedEndLineIndicator:
          type: boolean
          description: Indicates whether the credit limit is open or closed ended
          example: true
        creditLimitReviewDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Indicates the date the Credit Limit is due for review.
          format: date
          example: '2021-01-01'
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
        overLine:
          $ref: '#/components/schemas/LocCreditLimitInfo_overLine'
        autoDrawDeliquencyIndicator:
          type: boolean
          description: Auto draw delinquency indicator
          example: false
        originalCreditLimitAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
        eligibleForODP:
          type: boolean
          description: Indicates whether the account is eligible for overdraft protection
          example: false
      description: Contains credit limit information
    TermTypeNumber_1:
      required:
        - termNumber
        - termType
      type: object
      properties:
        termType:
          $ref: '#/components/schemas/TermType'
        termNumber:
          minimum: 1
          type: integer
          description: Maturity period
          format: int64
          example: 24
      description: Contains the term detail
    AuditTrail_1:
      type: object
      properties:
        userId:
          type: string
          description: User id who has approved the data
          example: T123356
        deviceId:
          type: string
          description: Device/workstation id from where the data has been approved
          example: '221354'
        businessProcess:
          type: string
          description: Business process which has approved the data
          example: ADP
        acceptedTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: >-
            Accepted timestamp. Indicates the initiation time of the transaction
            from the calling application
          format: date-time
          example: '2020-11-06T09:08:31.82822-05:00'
        operationTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: >-
            Operation timestamp. Indicates the timestamp recorded at the server
            when the service is been invoked on the server
          format: date-time
          example: '2020-11-06T09:08:31.82822-05:00'
        hostTimestamp:
          pattern: >-
            [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.?[0-9]{0,7}(([Z]){0,1})|(([+|-][0-9]{2}:[0-9]{2})){0,1}
          type: string
          description: >-
            Host timestamp when the data is inserted in the database stored in
            UTC timezone
          format: date-time
          example: '2020-11-06T09:08:31.82822-05:00'
        uuid:
          maxLength: 36
          minLength: 36
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          type: string
          description: Unique request identifier/ Universal unique id
          example: 43414a0c-68f4-45f6-b7d2-9057890b710d
      description: Contains the audit trail information
      readOnly: true
    PaymentCollectionAccount:
      required:
        - account
        - accountClassificationType
        - relationshipType
      type: object
      properties:
        accountClassificationType:
          $ref: '#/components/schemas/ClassificationType'
        relationshipType:
          type: string
          description: The type of the relationship
          example: DisbursementAccount
        account:
          $ref: '#/components/schemas/LoanAccount_1'
        externalAccount:
          $ref: '#/components/schemas/LocAccountInfo_externalAccount'
      description: Contains payment collection account detail
    AccountDetailWithoutSOR:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '0000013912704'
      description: Contains account info
    AccountDisbursement:
      required:
        - amount
        - autoDisbursementIndicator
        - id
        - method
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the disbursement
          format: int64
          example: 191010119
        fundDuringOrginationIndicator:
          type: boolean
          description: Fund during origination
          example: true
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Disbursement date. The date on which the funds from the loan account
            is made available for the customer. In case of multiple
            disbursements, this will be the first date of disbursement
          format: date
          example: '2021-01-01'
        autoDisbursementIndicator:
          type: boolean
          description: Indicates whether automatic disbursement is allowed on the loan
          example: true
        method:
          type: string
          description: >-
            Disbursement method. Identifies if the disbursement is to an
            external account or internal account or via a cheque
          example: TransferExternalAccount
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
        beneficiaryOneOf:
          type: object
          description: >-
            Contains details of the beneficiary (payee) to whom the disbursement
            proceeds are to be transferred
          oneOf:
            - required:
                - disbursementRelation
              type: object
              properties:
                disbursementRelation:
                  $ref: >-
                    #/components/schemas/UpdateDisbursementAccountToAccountRelation
            - required:
                - payeeInfo
              type: object
              properties:
                payeeInfo:
                  $ref: '#/components/schemas/Payee'
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
      description: Contains disbursement detail related to account
    UpdateDisbursementAccountToAccountRelation:
      required:
        - account
        - accountClassificationType
        - relationshipType
      type: object
      properties:
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
        accountClassificationType:
          $ref: '#/components/schemas/ClassificationType'
        relationshipType:
          type: string
          description: The type of the relationship
          example: DisbursementAccount
        account:
          $ref: '#/components/schemas/LoanAccount_1'
        externalAccount:
          $ref: '#/components/schemas/ExternalAccountInformation'
        settlementMethod:
          type: string
          description: >-
            Indicates a valid settlement type as defined for the FE like ACH,
            SWIFT, FEDWIRE
          example: ACH
        receiverName:
          type: string
          description: >-
            Name of the receiver to whom funds are to be made available or from
            whom funds are to be collected
          example: Receiver name
        priority:
          minimum: 1
          type: integer
          description: Indicates the priority of the arrangement relationship.
          format: int64
          example: 2
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
      description: Contains account to account relationship details
    Payee:
      type: object
      properties:
        payeeOneOf:
          type: object
          description: Contains payee details
          oneOf:
            - required:
                - customerId
              type: object
              properties:
                customerId:
                  type: string
                  description: Customer id
                  example: '123456789'
            - required:
                - name
              type: object
              properties:
                name:
                  type: string
                  description: Payee name
                  example: Joe Root
                additionalDetails:
                  type: array
                  description: Array of additional detail
                  items:
                    $ref: '#/components/schemas/AdditionalDetail'
      description: Contains payee (receiver) details
    DisbursementCommonData:
      required:
        - amount
        - autoDisbursementIndicator
        - method
      type: object
      properties:
        fundDuringOrginationIndicator:
          type: boolean
          description: Fund during origination
          example: true
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Disbursement date. The date on which the funds from the loan account
            is made available for the customer. In case of multiple
            disbursements, this will be the first date of disbursement
          format: date
          example: '2021-01-01'
        autoDisbursementIndicator:
          type: boolean
          description: Indicates whether automatic disbursement is allowed on the loan
          example: true
        method:
          type: string
          description: >-
            Disbursement method. Identifies if the disbursement is to an
            external account or internal account or via a cheque
          example: TransferExternalAccount
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
        beneficiaryOneOf:
          type: object
          description: >-
            Contains details of the beneficiary (payee) to whom the disbursement
            proceeds are to be transferred
          oneOf:
            - required:
                - disbursementRelation
              type: object
              properties:
                disbursementRelation:
                  $ref: '#/components/schemas/DisbursementAccountToAccountRelation'
            - required:
                - payeeInfo
              type: object
              properties:
                payeeInfo:
                  $ref: '#/components/schemas/Payee'
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
      description: Contains disbursement detail related to account
    DisbursementAccountToAccountRelation:
      required:
        - account
        - accountClassificationType
        - relationshipType
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
        accountClassificationType:
          $ref: '#/components/schemas/ClassificationType'
        relationshipType:
          type: string
          description: The type of the relationship
          example: DisbursementAccount
        account:
          $ref: '#/components/schemas/LoanAccount_1'
        externalAccount:
          $ref: '#/components/schemas/ExternalAccountInformation'
        settlementMethod:
          type: string
          description: >-
            Indicates a valid settlement type as defined for the FE like ACH,
            SWIFT, FEDWIRE
          example: ACH
        receiverName:
          type: string
          description: >-
            Name of the receiver to whom funds are to be made available or from
            whom funds are to be collected
          example: Receiver name
        priority:
          minimum: 1
          type: integer
          description: Indicates the priority of the arrangement relationship.
          format: int64
          example: 2
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
      description: Contains account to account relationship details
    GetDisbursementAccountToAccountRelation:
      required:
        - account
        - accountClassificationType
        - relationshipType
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
        accountClassificationType:
          $ref: '#/components/schemas/ClassificationType'
        relationshipType:
          type: string
          description: The type of the relationship
          example: DisbursementAccount
        account:
          $ref: '#/components/schemas/LoanAccount_1'
        externalAccount:
          $ref: '#/components/schemas/ExternalAccountInformation'
        settlementMethod:
          type: string
          description: >-
            Indicates a valid settlement type as defined for the FE like ACH,
            SWIFT, FEDWIRE
          example: ACH
        priority:
          minimum: 1
          type: integer
          description: Indicates the priority of the arrangement relationship.
          format: int64
          example: 2
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
      description: Contains account to account relationship details
    InsuranceInfo:
      required:
        - accountInsurance
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Denotes the effective date.
          format: date
          example: '2021-01-01'
        accountInsurance:
          $ref: '#/components/schemas/InsuranceInfo_accountInsurance'
      description: Contains the account insurance details
    InsurancePlan:
      required:
        - planType
        - type
      type: object
      properties:
        planType:
          type: string
          description: Describes the type of insurance plan linked to an account
          example: CreditLife
        type:
          type: string
          description: Describes the type of insurance linked to an account
          example: Financed, Accruing
        coverage:
          type: string
          description: >-
            This is to determine whether the insurace is for a single or joint
            borrowers
          example: Single
        rebateMethod:
          type: string
          description: >-
            Describes the Rebate Method used to refund the insurance amount in
            the event the insurance is canceled/ terminated before the full term
          example: FullRefund
        policyRequired:
          type: string
          description: To denote whether the Insurance policy copy is required
          example: RequiredCopyNotOnFile
        amountToDisburse:
          type: string
          description: >-
            This field signifies the amount which will be disbursed to the
            insurance company
          example: DisburseTheAmountUpFront
        premiumAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
        cancellation:
          $ref: '#/components/schemas/InsuranceCancellation'
        indicator:
          $ref: '#/components/schemas/InsuranceIndicators'
      description: Insurance plan details
    InsuranceCancellation:
      type: object
      properties:
        autoTermination:
          $ref: '#/components/schemas/AutoTermination'
        reason:
          type: string
          description: Denotes the reason for cancellation
          example: Cancel based on number of days delinquent
        description:
          type: string
          description: Describes the description for cancellation
          example: Cancel based on number of days delinquent
      description: Contains the insurance cancellation details
    AutoTermination:
      type: object
      properties:
        autoCancellationIndicator:
          type: boolean
          description: Indicates if automatic cancellation is allowed
          example: true
        ageForCancellation:
          type: integer
          description: Refers the age of the borrower when the insurance will terminate
          format: int64
          example: 60
        daysDelinquencyToCancellation:
          minimum: 1
          type: integer
          description: >-
            Days delinquency to cancellation. Refers the days past due when the
            insurance will terminate
          format: int64
          example: 2
        thresholdPrincipalForCancellation:
          $ref: '#/components/schemas/AmountWithoutDate'
      description: Contains the auto termination details
    InsuranceIndicators:
      type: object
      properties:
        paymentChangeIndicator:
          type: boolean
          description: >-
            Indicates if the system should automatically change the payment
            schedule when insurance is added to an existing account after
            account boarding
          example: true
        separateBalanceIndicator:
          type: boolean
          description: Indicates if insurance needs to be a separate balance on an account
          example: true
      description: Insurance indicators
    CreateInsuranceInfo:
      required:
        - accountInsurance
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Denotes the effective date.
          format: date
          example: '2021-01-01'
        accountInsurance:
          $ref: '#/components/schemas/CreateInsuranceInfo_accountInsurance'
      description: Contains the account insurance details
    CreateInsurancePlan:
      required:
        - planType
        - type
      type: object
      properties:
        planType:
          type: string
          description: Describes the type of insurance plan linked to an account
          example: CreditLife
        type:
          type: string
          description: Describes the type of insurance linked to an account
          example: Financed, Accruing
        coverage:
          type: string
          description: >-
            This is to determine whether the insurace is for a single or joint
            borrowers
          example: Single
        rebateMethod:
          type: string
          description: >-
            Describes the Rebate Method used to refund the insurance amount in
            the event the insurance is canceled/ terminated before the full term
          example: FullRefund
        policyRequired:
          type: string
          description: To denote whether the Insurance policy copy is required
          example: RequiredCopyNotOnFile
        amountToDisburse:
          type: string
          description: >-
            This field signifies the amount which will be disbursed to the
            insurance company
          example: DisburseTheAmountUpFront
        premiumAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
        cancellation:
          $ref: '#/components/schemas/InsuranceCancellationWithoutReason'
        indicator:
          $ref: '#/components/schemas/InsuranceIndicators'
      description: Insurance plan details
    InsuranceCancellationWithoutReason:
      type: object
      properties:
        autoTermination:
          $ref: '#/components/schemas/AutoTermination'
      description: Contains the insurance cancellation details
    AccountInsurance:
      required:
        - accountInsurance
      type: object
      properties:
        accountInsurance:
          $ref: '#/components/schemas/AccountInsurance_accountInsurance'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains the account insurance details
    InsurancePlanInfo:
      required:
        - planType
        - type
      type: object
      properties:
        planType:
          type: string
          description: Describes the type of insurance plan linked to an account
          example: CreditLife
        type:
          type: string
          description: Describes the type of insurance linked to an account
          example: Financed, Accruing
        coverage:
          type: string
          description: >-
            This is to determine whether the insurace is for a single or joint
            borrowers
          example: Single
        rebateMethod:
          type: string
          description: >-
            Describes the Rebate Method used to refund the insurance amount in
            the event the insurance is canceled/ terminated before the full term
          example: FullRefund
        policyRequired:
          type: string
          description: To denote whether the Insurance policy copy is required
          example: RequiredCopyNotOnFile
        amountToDisburse:
          type: string
          description: >-
            This field signifies the amount which will be disbursed to the
            insurance company
          example: DisburseTheAmountUpFront
        premiumAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
        cancellation:
          $ref: '#/components/schemas/InsuranceCancellationInfo'
        indicator:
          $ref: '#/components/schemas/InsuranceIndicators'
        premiumRate:
          type: number
          description: >-
            Indicates applicabel premium rate on which the insurance will
            accure.
          format: double
          example: 10
      description: Insurance plan details
    InsuranceCancellationInfo:
      type: object
      properties:
        autoTermination:
          $ref: '#/components/schemas/AutoTermination'
        reason:
          type: string
          description: Denotes the reason for cancellation
          example: Cancel based on number of days delinquent
        description:
          type: string
          description: Describes the description for cancellation
          example: Cancel based on number of days delinquent
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Indicates the date of Insurance Cancellation
          format: date
          example: '2021-01-01'
      description: Contains the insurance cancellation details
    PeriodicBalanceInfo:
      required:
        - balanceAttribute
      type: object
      properties:
        balanceAttribute:
          $ref: '#/components/schemas/PeriodicBalanceInfo_balanceAttribute'
        periodicBalances:
          type: array
          description: Specifies the balances in different periods.
          items:
            $ref: '#/components/schemas/PeriodBalanceAmount_1'
        priorPeriodBalances:
          type: array
          description: Specifies the balances in prior periods.
          items:
            $ref: '#/components/schemas/PeriodBalanceAmount_1'
      description: Represents the periodic balance detail
    PeriodBalanceAmount_1:
      required:
        - amount
        - periodType
      type: object
      properties:
        periodType:
          type: string
          description: Balance period type
          example: >-
            Monthly, Quarterly, Yearly, BillingCycle, LifeToDate, PaymentCycle
            etc
        amount:
          $ref: '#/components/schemas/Amount'
      description: Specifies the balances in different periods.
    Rebate:
      type: object
      properties:
        rebateAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
        goodThroughDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            This represents the date that the current rebate amount is valid
            through.
          format: date
          example: '2028-02-08'
      description: Rebate details
    RenewalConfigDetail:
      required:
        - allowedIndicator
      type: object
      properties:
        allowedIndicator:
          type: boolean
          description: Signifies whether renewal is applicable for this loan account or not
          example: true
        numberOfRenewalsAllowed:
          minimum: 1
          type: integer
          description: Signifies number of renewal allowed for this loan account
          format: int64
          example: 5
        renewalFactor:
          type: number
          description: >-
            Determines the eligibility of a loan for renewal based on the
            principal outstanding
          format: double
          example: 100
        clearDuesIndicator:
          type: boolean
          description: Indicates whether due bills should be cleared or not during renewal
          example: true
      description: Contains renewal configuration detail
    RenewalProcess:
      required:
        - applicableFeeIndicator
        - eligibilityTestIndicator
      type: object
      properties:
        eligibilityTestIndicator:
          type: boolean
          description: Determines whether account is eligible for renewal or not
          example: true
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date from which account is going to be effective
          format: date
          example: '2021-01-01'
        amount:
          $ref: '#/components/schemas/RenewalEffectiveDateInfo_processingInfo_amount'
        maturity:
          $ref: '#/components/schemas/UpdateTermOutLOC_maturity'
        applicableFeeIndicator:
          type: boolean
          description: >-
            Signifies whether renewal fee should be assessed or not during
            renewal
          example: true
        repayment:
          $ref: '#/components/schemas/RenewalProcess_repayment'
        skipPayment:
          $ref: '#/components/schemas/RenewalProcess_skipPayment'
      description: Contains renewal processing detail
    SkipPayment_2:
      required:
        - earnIndicator
        - months
        - startDate
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Start date
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: End date
          format: date
          example: '2021-01-01'
        earnIndicator:
          type: boolean
          description: Indicates whether earn during skip payment
          example: true
        months:
          uniqueItems: true
          type: array
          description: Months to skip payment
          items:
            type: string
            example: April
      description: Contains skip payment information
    TermOutLOC:
      required:
        - effectiveDate
        - indicator
        - reason
      type: object
      properties:
        indicator:
          type: boolean
          description: >-
            Indicates the ability to stop all advances on the credit line at the
            account level.
          example: true
        reason:
          type: string
          description: >-
            Indicates the reason for which the LOC is converted to a term out
            loan.
          example: Bank Decision
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date the Stop/Suspect/Hold record is no longer in effect.Date
            from which arrangement is going to be effective.This is the same
            Date on which bank converts the LOC to a Term Out Loan.
          format: date
          example: '2021-01-01'
        firstPaymentDateAfterTermOut:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            This is the date when the first payment is due after the account is
            termed out. This should be the date in the future relative to
            current system date
          format: date
          example: '2021-01-01'
        autoPayoffIndicator:
          type: boolean
          description: >-
            Indicates whether to perform payoff evaluation and process the
            transaction.
          example: false
      description: Term Out Details
    AdditionalBalance_1:
      required:
        - balanceCode
      type: object
      properties:
        balanceCode:
          type: string
          description: Balance code. Identifies the type of balance
          example: OutStandingPrincipalBalance
        balanceName:
          type: string
          description: Balance name. Contains description of the balance code
          example: OutStanding Principal Balance
        amount:
          $ref: '#/components/schemas/Amount'
      description: Additional balance amount
    AccountDetail:
      required:
        - accountId
        - accountType
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '0000013912704'
        systemOfRecord:
          $ref: '#/components/schemas/SystemOfRecord'
      description: Contains account info
    UnsecuredTermLoanAccount_business_maturity:
      type: object
      properties:
        terms:
          type: array
          description: Array of term detail
          items:
            $ref: '#/components/schemas/TermTypeNumber'
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Maturity date (Deprecated Field)
          format: date
          example: '2021-01-01'
      description: Contains maturity info
    UnsecuredTermLoanAccount_business:
      required:
        - disbursement
        - maturity
        - repayment
      type: object
      properties:
        servicingBranch:
          type: string
          description: Branch where account is serviced
          example: OU001
        classificationCode:
          type: string
          description: Classification code of the loan
          example: ClassCode123@
        riskRating:
          type: string
          description: Current risk rating or loan grade on the loan
          example: 90%
        riskRatingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of last risk rating update
          format: date
          example: '2028-02-08'
        contractualAmount:
          $ref: '#/components/schemas/Amount'
        financedCharge:
          $ref: '#/components/schemas/AmountWithoutDate'
        originalProceed:
          $ref: '#/components/schemas/AmountWithoutDate'
        reporting:
          $ref: '#/components/schemas/Reporting_1'
        maturity:
          $ref: '#/components/schemas/UnsecuredTermLoanAccount_business_maturity'
        paymentAppropriationCode:
          type: string
          description: Payment appropriation code
          example: PMTAPPACCRL
        stateCode:
          type: string
          description: Indicates the State where the account is been serviced.
          example: CA
        disbursement:
          $ref: '#/components/schemas/DisbursementUnSecured'
        repayment:
          $ref: '#/components/schemas/Repayment'
        overpaymentMaturityRecalculationOption:
          type: string
          description: >-
            Option to determine whether the maturity date of the account needs
            to be recalculated or the repayment amount needs to be recalculated
          example: Recalculate Maturity Date, Recalculate payment amount
        interest:
          $ref: '#/components/schemas/InterestProcessing'
        nonAccrualAllowedIndicator:
          type: boolean
          description: Indicates whether non accrual is auto updated or not
          example: true
        chargeOffAllowedIndicator:
          type: boolean
          description: Indicates whether charge off is auto updated or not
          example: true
      description: Contains business information
    UnsecuredTermLoanAccountInfo_accountSummary:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/LoanAccount_1'
        productKey:
          type: string
          description: Product key
          example: UNSECLNPROD
        productLine:
          type: string
          description: Product line
          example: Retail Lending
        productGroup:
          type: string
          description: Product group
          example: Consumer Loan
        productSubGroup:
          type: string
          description: Product sub group
          example: Unsecured Loan
        productTemplate:
          type: string
          description: Product template
          example: UnsecuredTermLoan
        productName:
          type: string
          description: Product name
          example: Premier Unsecured Loan Product
        productMarketName:
          type: string
          description: Market Name of the product
          example: Premier Unsecured Loan
      description: Contains account summary information
    UnsecuredTermLoanAccountInfo_repaymentSchedule_payment:
      type: object
      properties:
        annualPercentageRate:
          type: number
          description: Annual percentage yield
          format: double
          example: 11
        totalInterestCharge:
          $ref: '#/components/schemas/Amount'
        totalRepayment:
          $ref: '#/components/schemas/Amount'
        scheduledNumberOfPayment:
          type: integer
          description: Total number of scheduled payments over the life of the loan
          format: int64
          example: 24
      description: Contains payment information
    UnsecuredTermLoanAccountInfo_repaymentSchedule:
      required:
        - payment
      type: object
      properties:
        payment:
          $ref: >-
            #/components/schemas/UnsecuredTermLoanAccountInfo_repaymentSchedule_payment
        repaymentSchedules:
          type: array
          description: Array of repayment schedule
          items:
            $ref: '#/components/schemas/RepaymentSchedule'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Repayment schedule data
    UnsecuredTermLoanAccountInfo_balance:
      type: object
      properties:
        nonChargeBalances:
          type: array
          description: Array of non charge balance
          items:
            $ref: '#/components/schemas/AdditionalBalance'
        periodicBalances:
          type: array
          description: Array of periodic balance
          items:
            $ref: '#/components/schemas/PeriodicBalance'
      description: Contains balance information
    UnsecuredTermLoanAccountInfo_nonSufficientFundCounters:
      type: object
      properties:
        periodType:
          type: string
          description: >-
            Period type . Year to Date is between Jan-Dec. Life to Date is
            between the period of loan start date to loan maturity
          example: YTD (Year to Date) and LTD (Life to Date)
        defaultNumber:
          minimum: 1
          type: integer
          description: >-
            This field provides the number of times a transaction has been
            reversed with 'Reversal Reason Code = Non-Sufficient Fund'
          format: int64
          example: 2
    UnsecuredTermLoanAccountInfo_sameAsCash:
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Same as cash period start date.
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Same as cash period end date.
          format: date
          example: '2021-01-01'
        status:
          type: string
          description: Same as cash status
          example: Active
          enum:
            - Active
            - Processed
            - Expired
            - Cancelled
        cancellationDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date when SAC status was changed to canceled.
          format: date
          example: '2021-01-01'
        cancellationReason:
          type: string
          description: Reason for cancellation of SAC period
          example: User Initiated, ChargeOff, Nonaccrual, Delinquency
        term:
          $ref: '#/components/schemas/SameAsCashTerm'
      description: Same as Cash details
    SecuredTermLoanAccount_business_maturity:
      type: object
      properties:
        terms:
          type: array
          description: Array of term detail
          items:
            $ref: '#/components/schemas/TermTypeNumber'
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Maturity date
          format: date
          example: '2021-01-01'
      description: Contains maturity info
    SecuredTermLoanAccount_business:
      required:
        - collateral
        - disbursement
        - maturity
        - repayment
      type: object
      properties:
        servicingBranch:
          type: string
          description: Branch where account is serviced
          example: OU001
        collateral:
          $ref: '#/components/schemas/TypeValueOptional'
        contractualAmount:
          $ref: '#/components/schemas/Amount'
        financedCharge:
          $ref: '#/components/schemas/Amount'
        originalProceed:
          $ref: '#/components/schemas/Amount'
        reporting:
          $ref: '#/components/schemas/Reporting_1'
        maturity:
          $ref: '#/components/schemas/SecuredTermLoanAccount_business_maturity'
        paymentAppropriationCode:
          type: string
          description: Payment appropriation code
          example: BYINVOICEPROJECTED
        stateCode:
          type: string
          description: Indicates the State where the account is been serviced.
          example: CA
        disbursement:
          $ref: '#/components/schemas/DisbursementUnSecured'
        repayment:
          $ref: '#/components/schemas/Repayment'
        overpaymentMaturityRecalculationOption:
          type: string
          description: >-
            Option to determine whether the maturity date of the account needs
            to be recalculated or the repayment amount needs to be recalculated
          example: Recalculate Maturity Date, Recalculate payment amount
        excessBalanceTransferOnPayoff:
          type: string
          description: >-
            An option that indicates the mode of handling the account during
            payoff if the account has a debit balance
          example: 'false'
        interest:
          $ref: '#/components/schemas/InterestProcessing'
        autoChargeOffIndicator:
          type: boolean
          description: Indicates whether charge off is auto updated or not
          example: true
      description: Contains business information
    SecuredTermLoanAccountInfo_accountSummary:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/LoanAccount_1'
        productKey:
          type: string
          description: Product key
          example: PREMIER_SEC
        productLine:
          type: string
          description: Product line
          example: Retail Lending
        productGroup:
          type: string
          description: Product group
          example: Consumer Loan
        productSubGroup:
          type: string
          description: Product sub group
          example: Auto
        productTemplate:
          type: string
          description: Product template
          example: SecuredTermLoan
        productName:
          type: string
          description: Product name
          example: Premier_Sec
        productMarketName:
          type: string
          description: Market Name of the product
          example: Premier Secured Loan
      description: Contains account summary information
    SecuredTermLoanAccountInfo_repaymentSchedule_payment:
      type: object
      properties:
        annualPercentageRate:
          type: number
          description: Annual percentage yield
          format: double
          example: 10
        totalInterestCharge:
          $ref: '#/components/schemas/Amount'
        totalRepayment:
          $ref: '#/components/schemas/Amount'
        scheduledNumberOfPayment:
          type: integer
          description: Total number of scheduled payments over the life of the loan
          format: int64
          example: 20
      description: Contains payment information
    SecuredTermLoanAccountInfo_repaymentSchedule:
      required:
        - payment
      type: object
      properties:
        payment:
          $ref: >-
            #/components/schemas/SecuredTermLoanAccountInfo_repaymentSchedule_payment
        repaymentSchedules:
          type: array
          description: Array of repayment schedule
          items:
            $ref: '#/components/schemas/RepaymentSchedule'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Repayment schedule data
    SecuredTermLoanAccountInfo_sameAsCash:
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Same as cash period start date
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Same as cash period end date
          format: date
          example: '2021-01-01'
        status:
          type: string
          description: Same as cash status
          example: Active
          enum:
            - Active
            - Processed
            - Expired
            - Cancelled
        cancellationDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date when SAC status was changed to canceled.
          format: date
          example: '2021-01-01'
        cancellationReason:
          type: string
          description: Reason for cancellation of SAC period
          example: User Initiated, ChargeOff, Nonaccrual, Delinquency
        term:
          $ref: '#/components/schemas/SameAsCashTerm'
      description: Same as Cash details
    Billing_bill_daysConsideration:
      required:
        - billLeadDay
      type: object
      properties:
        billLeadDay:
          minimum: 1
          type: integer
          description: Lead days to payment
          format: int64
          example: 5
      description: Days consideration. billLeadDay can be provided
    Billing_bill_advance:
      type: object
      properties:
        advanceBillingAllowedIndicator:
          type: boolean
          description: Indicates if advance billing is allowed
          example: true
        numberOfActiveBillAllowed:
          minimum: 1
          type: integer
          description: Number of active advance bills allowed
          format: int64
          example: 2
      description: Advance billing information
    Billing_bill_maturity:
      type: object
      properties:
        billLeadDay:
          minimum: 1
          type: integer
          description: Bill lead day
          format: int64
          example: 2
      description: Maturity billing
    Billing_bill_postMaturity:
      type: object
      properties:
        paymentFrequencyType:
          type: string
          description: >-
            The frequency at which the payments should be scheduled. The payment
            frequency type defined at the product level should default
          example: EndOfEveryMonth
        paymentFrequencyValue:
          type: string
          description: >-
            A component of the payment frequency which identifies the date of
            repayment. The value defined at the product level should default
          example: '5'
        billLeadDay:
          minimum: 1
          type: integer
          description: Bill lead day
          format: int64
          example: 1
        numberOfBillsAllowed:
          minimum: 0
          type: integer
          description: Number of post maturity bills allowed
          format: int64
          example: 2
      description: Post maturity billing
    Billing_bill_autoPayment:
      type: object
      properties:
        regularBillingIndicator:
          type: boolean
          description: Indicates if billing is regular
          example: true
        maturityBillingIndicator:
          type: boolean
          description: Indicates if Auto pay is applicable for the maturity bill
          example: true
        postMaturityBillingIndicator:
          type: boolean
          description: Indicates if Auto pay is applicable for the post maturity bill
          example: true
        paymentCollectionInstructionAmount:
          type: string
          description: Specifies payment collection at the account level
          example: Billed And Not Paid, Billed And Other Fee Receivable Not Paid
        collectPastDuePaymentIndicator:
          type: boolean
          description: >-
            Indicates whether past due payments should be part of the payment
            collection process
          example: true
        collectPrepaidIndicator:
          type: boolean
          description: >-
            Indicates whether payment collection processing to be done if the
            account is in advance paid status. If yes, the payment processing
            will be done for Billed Amount and Billed Amount and Fees
            Receivable. If No is seleted, there wont be any payment collection
            processing
          example: true
        cancellationNSFNumber:
          minimum: 1
          type: integer
          description: >-
            NSF number based on which auto payment indicator for regualr bills
            will automatically be cancelled
          format: int64
          example: 9
        autoPayRateBenefitIndicator:
          type: boolean
          description: Specifies the rate benefit provided to an account.
          example: true
      description: Auto payment information
    Billing_bill_repaymentScheduleDetails:
      type: object
      properties:
        paymentFrequencyType:
          type: string
          description: >-
            The frequency at which the payments should be scheduled. The payment
            frequency type defined at the product level should default
          example: EveryMonth
        paymentFrequencyValue:
          minimum: 0
          type: integer
          description: >-
            A component of the payment frequency which identifies the date of
            repayment. The value defined at the product level should default
          format: int64
          example: 2
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
    Billing_bill:
      type: object
      properties:
        daysConsideration:
          $ref: '#/components/schemas/Billing_bill_daysConsideration'
        advance:
          $ref: '#/components/schemas/Billing_bill_advance'
        maturity:
          $ref: '#/components/schemas/Billing_bill_maturity'
        postMaturity:
          $ref: '#/components/schemas/Billing_bill_postMaturity'
        graceDay:
          minimum: 1
          type: integer
          description: Grace day
          format: int64
          example: 1
        autoPayment:
          $ref: '#/components/schemas/Billing_bill_autoPayment'
        termAdjustmentManualPaymentAmountChangeIndicator:
          type: boolean
          description: >-
            This field signifies whether term shall be adjusted or not whenever
            scheduled payment amount is changed manually
          example: true
        paymentMethod:
          type: string
          description: >-
            Identifies if the payment is from an internal account or External
            account or via a cheque
          example: TransferExternalAccount
        repaymentScheduleDetails:
          type: array
          description: Specifies detail related to repayment schedules
          items:
            $ref: '#/components/schemas/Billing_bill_repaymentScheduleDetails'
      description: Contains bill information
    BillSchedule_repaymentSchedules:
      type: object
      properties:
        paymentFrequencyType:
          type: string
          description: >-
            The frequency at which the payments should be scheduled. The payment
            frequency type defined at the product level should default
          example: Transfer External Account
        paymentFrequencyValue:
          type: string
          description: >-
            A component of the payment frequency which identifies the date of
            repayment. The value defined at the product level should default
          example: '5'
    BillSchedule_billSchedules:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: Code of the billing schedule
          example: PRINANDPROJINT
        description:
          type: string
          description: Description of the code
          example: PrincipalAndProjectedInterest
        repaymentSchedules:
          type: array
          description: Array of repayment schedule
          items:
            $ref: '#/components/schemas/BillSchedule_repaymentSchedules'
    BillScheduleCreate_billSchedules:
      required:
        - code
        - repaymentSchedules
      type: object
      properties:
        code:
          type: string
          description: Code of the billing schedule
          example: PRINANDPROJINT
        description:
          type: string
          description: Description of the code
          example: PrincipalAndProjectedInterest
        repaymentSchedules:
          type: array
          description: Array of repayment schedule
          items:
            $ref: '#/components/schemas/RepaymentScheduleCreate'
    BillScheduleInfo_bill_daysConsideration:
      required:
        - billLeadDay
      type: object
      properties:
        billLeadDay:
          minimum: 1
          type: integer
          description: Lead days to payment
          format: int64
          example: 5
      description: Days consideration
    BillScheduleInfo_bill_advance:
      type: object
      properties:
        advanceBillingAllowedIndicator:
          type: boolean
          description: Indicates if advance billing is allowed
          example: true
        numberOfActiveBillAllowed:
          minimum: 1
          type: integer
          description: Number of active advance bills allowed
          format: int64
          example: 3
      description: Advance billing information
    BillScheduleInfo_bill_maturity:
      type: object
      properties:
        billLeadDay:
          minimum: 1
          type: integer
          description: Bill lead day
          format: int64
          example: 9
      description: Maturity billing
    BillScheduleInfo_bill_postMaturity:
      type: object
      properties:
        paymentFrequencyType:
          type: string
          description: >-
            The frequency at which the payments should be scheduled. The payment
            frequency type defined at the product level should default
          example: EndOfEveryMonth
        paymentFrequencyValue:
          type: string
          description: >-
            A component of the payment frequency which identifies the date of
            repayment. The value defined at the product level should default
          example: '5'
        billLeadDay:
          minimum: 1
          type: integer
          description: Bill lead day
          format: int64
          example: 4
        numberOfBillsAllowed:
          minimum: 0
          type: integer
          description: Number of post maturity bills allowed
          format: int64
          example: 4
      description: Post maturity billing
    BillScheduleInfo_bill_autoPayment:
      type: object
      properties:
        regularBillingIndicator:
          type: boolean
          description: Indicates if billing is regular
          example: true
        paymentCollectionInstructionAmount:
          type: string
          description: Specifies payment collection at the account level
          example: Billed And Not Paid, Billed And Other Fee Receivable Not Paid
        collectPastDuePaymentIndicator:
          type: boolean
          description: >-
            Indicates whether past due payments should be part of the payment
            collection process
          example: true
        collectPrepaidIndicator:
          type: boolean
          description: >-
            Indicates whether payment collection processing to be done if the
            account is in advance paid status. If yes, the payment processing
            will be done for Billed Amount and Billed Amount and Fees
            Receivable. If No is seleted, there wont be any payment collection
            processing
          example: true
        cancellationNSFNumber:
          minimum: 1
          type: integer
          description: >-
            NSF number based on which auto payment indicator for regualr bills
            will automatically be cancelled
          format: int64
          example: 5
        autoPayRateBenefitIndicator:
          type: boolean
          description: Specifies the rate benefit provided to an account.
          example: true
      description: Auto payment information
    BillScheduleInfo_bill:
      type: object
      properties:
        daysConsideration:
          $ref: '#/components/schemas/BillScheduleInfo_bill_daysConsideration'
        advance:
          $ref: '#/components/schemas/BillScheduleInfo_bill_advance'
        maturity:
          $ref: '#/components/schemas/BillScheduleInfo_bill_maturity'
        postMaturity:
          $ref: '#/components/schemas/BillScheduleInfo_bill_postMaturity'
        graceDay:
          minimum: 1
          type: integer
          description: Grace day
          format: int64
          example: 1
        autoPayment:
          $ref: '#/components/schemas/BillScheduleInfo_bill_autoPayment'
        termAdjustmentManualPaymentAmountChangeIndicator:
          type: boolean
          description: >-
            This field signifies whether term shall be adjusted or not whenever
            scheduled payment amount is changed manually
          example: true
      description: Contains bill information
    ChargeInterest_charges:
      required:
        - chargeInstructionCode
        - chargeScheduleCode
      type: object
      properties:
        chargeScheduleCode:
          type: string
          description: Charge schedule code
          example: RAWRATEMARGINRAW
        chargeInstructionCode:
          type: string
          description: Charge instruction code
          example: RAWRATEMARGINRAW
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date indicates from when the charge instruction code is
            effective on the account
          format: date
          example: '2021-01-01'
        confirmedIndicator:
          type: boolean
          description: Indicates whether the changes are confirmed or not
          example: true
        interestRates:
          $ref: '#/components/schemas/InterestRate'
        originalUnearnedInterest:
          $ref: '#/components/schemas/Amount'
        annualPercentageRate:
          type: number
          description: The cost of credit expressed as yearly rate
          format: double
          example: 12
        financedIndicator:
          type: boolean
          description: Indicates whether it is financed
          example: true
        interestType:
          type: string
          description: Specifies interest type
          example: V,F
        accrualStartDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Indicates when the accrual needs to start on an account.This field
            cannot be updated once account is activated i.e., Account status is
            "Active" and "Normal"
          format: date
          example: '2021-01-01'
    InterestRate_inner:
      type: object
      properties:
        currentBaseRawRate:
          minimum: 0
          type: number
          description: >-
            Current base raw rate. Indicates the current rate applicable. This
            will be filled when the rate is fixed (not in reference to any
            index).
          format: double
          example: 3
        currentMarginRawRate:
          type: number
          description: >-
            Current margin raw rate. Indicates the current rate applicable. This
            will be filled when the rate is fixed (not in reference to any
            index).
          format: double
          example: 3
    ChargeFee_charges:
      required:
        - chargeInstructionCode
        - chargeScheduleCode
      type: object
      properties:
        chargeScheduleCode:
          type: string
          description: Charge schedule code
          example: LOANFEE
        chargeInstructionCode:
          type: string
          description: Charge instruction code
          example: LOANFEE
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date indicates from when the charge instruction code is
            effective on the account
          format: date
          example: '2021-01-01'
        fee:
          $ref: '#/components/schemas/FeeUpdate'
    ChargeFeeCreate_charges:
      required:
        - chargeInstructionCode
        - chargeScheduleCode
      type: object
      properties:
        chargeScheduleCode:
          type: string
          description: Charge schedule code
          example: MAINFEE
        chargeInstructionCode:
          type: string
          description: Charge instruction code
          example: MAINFEETWO
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date indicates from when the charge instruction code is
            effective on the account
          format: date
          example: '2021-01-01'
        fee:
          $ref: '#/components/schemas/FeeCreate'
    ChargeInfo_frequency:
      required:
        - primaryFrequency
      type: object
      properties:
        primaryFrequency:
          $ref: '#/components/schemas/TypeValueOptional'
      description: Accrual frequency
    ChargeInfo_calculationBasis_basisBalanceReference:
      type: object
      properties:
        referenceCode:
          type: string
          description: >-
            Specifies the balance type which is used as basis for charge
            calculation
          example: Outstanding Principal Balance, Scheduled Principal Balance
      description: It is the balance that would be used for calculating the charge amount
    ChargeInfo_calculationBasis:
      type: object
      properties:
        accrualDayRule:
          type: string
          description: >-
            Indicates if accruals for non-business days should be done before or
            after the non-business day(s).
          example: Previous Business Day
        accrualType:
          type: string
          description: Indicates the type of interest accruals to perform on an account.
          example: Simple, Compounding
        currentYearBase:
          type: string
          description: Year base used to calculate the interest
          example: Actual, 365, 360
        currentMonthBase:
          type: string
          description: Month base used to calculate the interest
          example: Actual, 30
        minimumInterestDistribution:
          type: number
          description: >-
            Petty limit. Specifies the minimum required amount for accrual to
            qualify it to get capitalized to the account
          format: double
          example: 10
        basisBalanceReference:
          $ref: >-
            #/components/schemas/ChargeInfo_calculationBasis_basisBalanceReference
      description: Contains calculation basis information
    ChargeInfo_charges:
      required:
        - chargeInstructionCode
        - chargeScheduleCode
      type: object
      properties:
        chargeScheduleCode:
          type: string
          description: Charge schedule code
          example: DOCUMENTATIONFEESEC
        chargeScheduleName:
          type: string
          description: Charge schedule name
          example: Documentation Fee Sec
        chargeInstructionCode:
          type: string
          description: Charge instruction code
          example: DOCUMENTATIONFEESEC
        chargeTypeCode:
          type: string
          description: Charge type code
          example: DocumentationFee
        chargeInstructionType:
          type: string
          description: Charge instruction type
          example: EventCondition
        pricingType:
          type: string
          description: Charge pricing type
          example: flat, tiered,
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The charge instruction start date
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The charge instruction end date
          format: date
          example: '2021-01-01'
        annualPercentageRate:
          type: number
          description: The cost of credit expressed as yearly rate
          format: double
          example: 12
        frequency:
          $ref: '#/components/schemas/ChargeInfo_frequency'
        accrueThruDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Date through which interest has been accrued. System generated when
            interest accrues. When the interest accrual is daily, this will be
            the current system date -1
          format: date
          example: '2021-01-01'
        accrualFactor:
          type: number
          description: >-
            Daily factor for interest accruals. The system recalculates it if
            the current rate changes.
          format: double
          example: 10
        amountAccruedToday:
          $ref: '#/components/schemas/Amount'
        projectedAccrual:
          $ref: '#/components/schemas/Amount'
        nextAccrualDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Indicates next calculation date which will be current system date in
            case of daily accrual
          format: date
          example: '2021-01-01'
        previousAccrualDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Indicates previous calculation date. This will be the previous
            business date. For example, if the accrual for Saturday and Sunday
            is posted on Friday, then when the data is retrieved on Monday, this
            will have the date of Friday.
          format: date
          example: '2021-01-01'
        calculationBasis:
          $ref: '#/components/schemas/ChargeInfo_calculationBasis'
        rates:
          type: array
          description: Array of charge rate info
          items:
            $ref: '#/components/schemas/ChargeRateInfo'
        fees:
          type: array
          description: Charge fee information
          items:
            $ref: '#/components/schemas/FeeInfo'
        perDiem:
          $ref: '#/components/schemas/Amount'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
    ChargeRateInfo_current:
      type: object
      properties:
        rawRate:
          type: number
          description: Base fixed rate
          format: double
          example: 10
        referenceRate:
          $ref: '#/components/schemas/AdditionalDetail'
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date the current base rate went into effect
          format: date
          example: '2021-01-01'
      description: Contains current charge rate information
    ChargeRateInfo_currentMargin:
      type: object
      properties:
        rawRate:
          type: number
          description: Base fixed rate
          format: double
          example: 10
        referenceRate:
          $ref: '#/components/schemas/AdditionalDetail'
      description: Charge margin information
    USCompliance_regulation1098Reporting_reimbursedInterest:
      required:
        - amount
        - date
        - postingIdentifier
      type: object
      properties:
        amount:
          type: number
          description: Interest amount reimbursed
          format: double
          example: 100
        postingIdentifier:
          type: string
          description: Specifies debit or credit transaction
          example: '7000267184171'
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date associated within the amount.
          format: date
          example: '2021-01-01'
      description: Indicates reimbursed interest
    USCompliance_regulation1098Reporting:
      type: object
      properties:
        regulation1098:
          type: string
          description: The account is 1098 Reportable
          example: Yes, No
        reimbursedInterest:
          $ref: >-
            #/components/schemas/USCompliance_regulation1098Reporting_reimbursedInterest
      description: Regulation 1098 Reporting
    UpdateAccountBusinessDetail_accountClosure:
      type: object
      properties:
        dayDelay:
          minimum: 0
          type: integer
          description: Days delay for account closure
          format: int64
          example: 2
        allowAutoClosureIndicator:
          type: boolean
          description: Indicates whether an account would be automatically closed or not
          example: true
      description: Account closure
    UpdateAccountBusinessDetail_extension:
      type: object
      properties:
        delinquency:
          $ref: '#/components/schemas/DelinquencyExtension'
        promotional:
          $ref: '#/components/schemas/PromotionalExtension'
        paymentDateChange:
          $ref: '#/components/schemas/PaymentDateChangeExtension'
      description: Loan account extension information
    UpdateUnsecuredAccountBusinessDetail_prepaymentDetail:
      type: object
      properties:
        overpaymentMaturityRecalculationOption:
          type: string
          description: >-
            Option to determine whether the maturity date of the account needs
            to be recalculated or the repayment amount needs to be recalculated
          example: Recalculate maturity date, Recalculate payment amount
      description: Inidcates the detail set of fields that are required for over payments
    PayOffBalances_balanceTypeAndWaiver:
      required:
        - balanceCode
      type: object
      properties:
        balanceCode:
          type: string
          description: Payoff balance type code
          example: InterestAccruedBalance
        balanceDescription:
          type: string
          description: Specifies the description of payoff balance type code
          example: Documentation Fee Receivable
        waiverOneOf:
          type: object
          description: Contains waiver detail
          oneOf:
            - required:
                - fullWaiverIndicator
              type: object
              properties:
                fullWaiverIndicator:
                  type: boolean
                  description: >-
                    Indicates whether fee/late charge/penalty is waived
                    completely
                  example: true
            - required:
                - partialWaiver
              type: object
              properties:
                partialWaiver:
                  required:
                    - amount
                  type: object
                  properties:
                    amount:
                      type: number
                      description: Amount involved with the entity
                      format: double
                      example: 100
                    currencyCode:
                      maxLength: 3
                      minLength: 2
                      type: string
                      description: The code of currency
                      example: USD
                    date:
                      pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
                      type: string
                      description: The date associated within the amount
                      format: date
                      example: '2021-01-01'
                  description: >-
                    Specifies the amount of waiver for fee/late charge/penalty
                    balance types
      description: >-
        Specifies the detail set of fields to define the payoff balance types
        and partial and full waiver amount details considering while pay-off
    ManualChargeAssessment_chargeEntity:
      required:
        - instructionCode
        - scheduleCode
      type: object
      properties:
        scheduleCode:
          type: string
          description: Specifies the charge schedule code
          example: DOCUMENTATIONFEESEC
        instructionCode:
          type: string
          description: Specifies the charge instruction code
          example: DOCUMENTATIONFEESEC
      description: Charge entity information
    ManualChargeAssessment_assessmentReason:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: A code associated with an entity identifed by the aggregate
          example: Documentation
          enum:
            - Documentation
            - Duplicate Statement
            - Late Charge
            - Early Payoff Fee
        description:
          type: string
          description: A description of the code
          example: Documentation
      description: Contains assessment reason information
    ProductKeyAmortizationLoan_repayment:
      required:
        - frequencyType
      type: object
      properties:
        firstPaymentDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date signifies the date from which payment would be started for
            the loan account
          format: date
          example: '2021-01-01'
        frequencyType:
          type: string
          description: The frequency at which the payments should be scheduled
          example: EveryMonth
        frequencyValue:
          minimum: 1
          type: integer
          description: >-
            A component of the payment frequency which identifies the date of
            repayment
          format: int64
          example: 2
      description: Contains the repayment details
    ProductKeyAmortizationLoan_interestCalculationBasis_interest:
      required:
        - rate
        - rateDeterminationBasis
      type: object
      properties:
        rate:
          type: number
          description: The contractual interest rate applicable for the account
          format: double
          example: 10
        rateDeterminationBasis:
          type: string
          description: >-
            Identifies if the rate to be considered is an effective interest
            rate or a contractual rate
          example: ContractualInterestRate
      description: >-
        The contractual interest rate applicable for the account and identifies
        if the rate to be considered is an effective interest rate or a
        contractual rate
    ProductKeyAmortizationLoan_interestCalculationBasis_calculationBasis:
      required:
        - dayCount
        - leapYearBasis
        - nonLeapYearBasis
      type: object
      properties:
        dayCount:
          type: string
          description: >-
            The method of calculating the daily interest. The number of days in
            a month will be considered based on this configuration
          example: Actual, 30
        leapYearBasis:
          type: string
          description: >-
            The method of calculating the daily interest. The number of days in
            a leap year will be considered based on this configuration
          example: Actual, 360, 365
        nonLeapYearBasis:
          type: string
          description: >-
            The method of calculating the daily interest. The number of days in
            a non-leap year will be considered based on this configuration
          example: Actual, 360, 365
      description: Specifies calculation basis like days count, leap year and non leap year
    ProductKeyAmortizationLoan_interestCalculationBasis:
      required:
        - interest
      type: object
      properties:
        interest:
          $ref: >-
            #/components/schemas/ProductKeyAmortizationLoan_interestCalculationBasis_interest
        calculationBasis:
          $ref: >-
            #/components/schemas/ProductKeyAmortizationLoan_interestCalculationBasis_calculationBasis
      description: Contains rate determination, calculation basis
    ProductKeyAmortizationLoan_maturity:
      type: object
      properties:
        terms:
          type: array
          description: Array of term detail
          items:
            $ref: '#/components/schemas/TermTypeNumber'
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Maturity date
          format: date
          example: '2021-01-01'
      description: Contains maturity details
    AmortizationLoan_repayment:
      required:
        - frequencyType
      type: object
      properties:
        firstPaymentDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date signifies the date from which payment would be started for
            the loan account
          format: date
          example: '2021-01-01'
        frequencyType:
          type: string
          description: The frequency at which the payments should be scheduled
          example: EveryMonth
        frequencyValue:
          minimum: 1
          type: integer
          description: >-
            A component of the payment frequency which identifies the date of
            repayment
          format: int64
          example: 10
      description: Contains the repayment details
    AmortizationLoanResponse_maturity:
      type: object
      properties:
        terms:
          type: array
          description: Array of term detail
          items:
            $ref: '#/components/schemas/TermTypeNumber'
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Maturity date
          format: date
          example: '2021-01-01'
      description: Contains maturity detail
    AmortizationLoanResponse_paymentDetail:
      required:
        - annualPercentageRate
        - scheduledNumberOfPayment
        - totalInterestCharge
        - totalRepaymentAmount
      type: object
      properties:
        annualPercentageRate:
          type: number
          description: Annual percentage rate
          format: double
          example: 10
        totalInterestCharge:
          $ref: '#/components/schemas/Amount'
        totalRepaymentAmount:
          $ref: '#/components/schemas/Amount'
        scheduledNumberOfPayment:
          minimum: 1
          type: integer
          description: Total number of scheduled payments over the life of the loan
          format: int64
          example: 2
      description: >-
        Contains the detail set of fields to define payment parameters on
        account identifier
    CollateralRelationship_repossession:
      required:
        - date
        - status
      type: object
      properties:
        status:
          type: string
          description: The repossession status of the collateral on the account
          example: >-
            Not in repossession, In progress, Complete, Sold, Redeemed,
            Reinstated, Voluntary Surrender
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date of repossession of the collateral on the account
          format: date
          example: '2021-01-01'
      description: >-
        Collateral repossession details captured once a collateral is linked to
        the account
    CollateralRelationship_liquidation:
      required:
        - date
        - status
      type: object
      properties:
        status:
          type: string
          description: The liquidation status of the collateral on the account
          example: >-
            Not in Liquidation, In progress, Negotiating Sale Price, Liquidation
            complete but value of collateral not fully recovered, Liquidation
            complete value of collateral fully recovered
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date of liquidation of the collateral on the account
          format: date
          example: '2021-01-01'
      description: >-
        Collateral liquidation details captured once a collateral is linked to
        the account
    CollateralRelationship_foreclosure:
      required:
        - date
        - dispositionStatus
      type: object
      properties:
        dispositionStatus:
          type: string
          description: Specifies the collaterals foreclosure disposition status
          example: >-
            Not in foreclosure, In progress, Trustee Sale Complete/REO, Property
            Sold-Non REO, Returned Paid Current, Returned Paid, Voluntary
            surrender
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date of foreclosure of the collateral on the account
          format: date
          example: '2021-01-01'
      description: The foreclosure of collateral securing the loan
    CollateralRelationshipInfo_account:
      type: object
      properties:
        accountType:
          type: string
          description: Identifies the standard account type
          example: UnsecuredInstalmentLoan
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '0000013912704'
      description: Contains loan account information
    USComplianceInfo_taxReporting:
      required:
        - debtForgivenAmount
      type: object
      properties:
        debtForgivenAmount:
          type: number
          description: >-
            Specifies the total amount forgiven which includes principal and
            interest
          format: double
          example: 100
        interestForgivenAmount:
          type: number
          description: Interest for given amount
          format: double
          example: 10
        previousYearToDate:
          $ref: '#/components/schemas/LifeToDate'
        currentYearToDate:
          $ref: '#/components/schemas/LifeToDate'
      description: Tax reporting detail
    USComplianceInfo_regulation1098Detail_reimbursedInterest_previousYearToDate:
      required:
        - date
        - totalAmount
      type: object
      properties:
        totalAmount:
          type: number
          description: Total Reimbursed Interest Year to Date
          format: double
          example: 50
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date associated within the amount.
          format: date
          example: '2021-01-01'
      description: Previous Year to Date
    USComplianceInfo_regulation1098Detail_reimbursedInterest:
      type: object
      properties:
        totalAmountLifeToDate:
          type: number
          description: Total Reimbursed Interest Life to Date
          format: double
          example: 50
        previousYearToDate:
          $ref: >-
            #/components/schemas/USComplianceInfo_regulation1098Detail_reimbursedInterest_previousYearToDate
        currentYearToDate:
          $ref: >-
            #/components/schemas/USComplianceInfo_regulation1098Detail_reimbursedInterest_previousYearToDate
      description: Reimbursed Interest Detail
    USComplianceInfo_regulation1098Detail:
      type: object
      properties:
        regulation1098:
          type: string
          description: Indicates if the account is 1098 Reportable
          example: Yes, No
        reimbursedInterest:
          $ref: >-
            #/components/schemas/USComplianceInfo_regulation1098Detail_reimbursedInterest
        totalReportedInterestYTD:
          type: number
          description: Total reported interest YTD
          format: double
          example: 50
        totalReportedFeesYTD:
          type: number
          description: Total reported Fees Year To Date
          format: double
          example: 50
        beginningYearOutstandingPrincipalReported:
          type: number
          description: Beginning Year Outstanding Principal Reported
          format: double
          example: 50
        totalReimbursedInterestReported:
          type: number
          description: Total reimbursed Interest Reported
          format: double
          example: 50
        reportingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: This represents the date on which the report is sent to CAPERAS
          format: date
          example: '2021-01-01'
      description: Regulation 1098 Detail
    ServiceMemberDetail_serviceStatus:
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the status is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the status is no longer in effect
          format: date
          example: '2021-01-01'
        statusHistory:
          type: string
          description: Status of the service detail
          example: Active
          enum:
            - Active
            - Expired
            - Future
        status:
          $ref: '#/components/schemas/Status'
      description: Service status detail
    BillDetailInfo_bill:
      required:
        - id
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: Unique bill number for which inquiry is being done
          format: int64
          example: 232000000394032450
        generationDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date on which the bill record is generated
          format: date
          example: '2021-01-01'
        dueDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The scheduled dates on which the bill will be due
          format: date
          example: '2021-01-01'
        status:
          type: string
          description: Status of the bill record
          example: Due
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
        unpaidAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
      description: Contains bill information
    BillDetailInfo_additionalBill:
      required:
        - billFromDate
        - billToDate
        - interestRateOnBillDate
      type: object
      properties:
        principalAmountOwed:
          $ref: '#/components/schemas/AmountWithoutDate'
        interestAmountOwed:
          $ref: '#/components/schemas/AmountWithoutDate'
        totalFeeOwed:
          $ref: '#/components/schemas/AmountWithoutDate'
        totalInsuranceOwed:
          $ref: '#/components/schemas/Amount'
        billFromDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Date associated with the bill cycle and this will be first day of
            the bill cycle
          format: date
          example: '2021-01-01'
        billToDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Date associated with the bill cycle and this will be last day of the
            bill cycle. This will be the date on which payment is due
          format: date
          example: '2021-01-01'
        interestRateOnBillDate:
          type: number
          description: Interest rate applicable on the bill generation date
          format: double
          example: 3
        previousBillDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date on which previous bill was generated
          format: date
          example: '2021-01-01'
        nextBillDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Next bill generation date
          format: date
          example: '2021-01-01'
        scheduledPaymentNumber:
          minimum: 1
          type: integer
          description: The unique schedule payment number corresponding to the bill record
          format: int64
          example: 394036282
        billTransactionReferenceNumbers:
          type: array
          description: Array of transaction reference number
          items:
            type: integer
            format: int64
            example: 9000286663456
        paidDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date on which bill is fully paid
          format: date
          example: '2021-01-01'
        lateChargeAssessedIndicator:
          type: boolean
          description: >-
            This is a flag available on each bill and gets updated as "Yes"
            whenever late charge is assessed on non-payment of a particular bill
          example: true
        toleranceDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date on which bill record became partially due for the first
            time
          format: date
          example: '2021-01-01'
        postMaturityBillIndicator:
          type: boolean
          description: Indicates if bill is post maturity
          example: true
        maturityBillIndicator:
          type: boolean
          description: Indicates if this is a maturity bill
          example: true
        advanceBillIndicator:
          type: boolean
          description: Indicates if a bill is generated and fully paid as an advance bill
          example: true
        cancellationReason:
          type: string
          description: Specifies the reason for bill cancellation
          example: Duplicate
        manualBillingIndicator:
          type: boolean
          description: >-
            Manual Billing Indicator. This flag will have a value of Yes if the
            bill record is manaully created by the user
          example: true
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
      description: Contains additional bill information to capture split on the bill
    AccountBasicInfo_externalAccount_additionalAccounts:
      required:
        - accountId
        - accountIdType
      type: object
      properties:
        accountIdType:
          type: string
          description: The account id type of the account number
          example: accountNumber
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '10000350070163'
    AccountBasicInfo_externalAccount:
      type: object
      properties:
        internationalBankAccountNumber:
          type: string
          description: International bank account number
          example: IBAN0035284
        additionalAccounts:
          type: array
          description: Additional account detail
          items:
            $ref: >-
              #/components/schemas/AccountBasicInfo_externalAccount_additionalAccounts
      description: External account identification
    EarlyPayOffQuote_payOffQuote:
      type: object
      properties:
        settlementQuoteRequestDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date on which the early settlement quote was requested
          format: date
          example: '2021-01-01'
        standardNotificationDay:
          minimum: 0
          type: integer
          description: >-
            Standard number of days of notification to arrive at a settlement
            date
          format: int64
          example: 30
        settlementDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date on which the early payoff is expected
          format: date
          example: '2021-01-01'
        interveningScheduledPayment:
          type: boolean
          description: >-
            To define the regular payments between settlement quote generation
            date and settlement date
          example: true
        status:
          type: string
          description: Status of the payoff quote
          example: Cancelled
        earlyPayoffFeeIndicator:
          type: boolean
          description: >-
            Indicator to specify whether a payoff fee is included in the net
            payoff amount
          example: true
      description: Specifies the set of fields that are required to generate a payoff quote
    LocAccount_business_reporting:
      type: object
      properties:
        purposeCode:
          type: string
          description: Purpose code. Identifies the reason for the loan
          example: Purchased
      description: Contains reporting information
    LocAccount_business_maturity:
      type: object
      properties:
        terms:
          type: array
          description: Array of term detail
          items:
            $ref: '#/components/schemas/TermTypeNumber'
      description: Contains maturity info
    LocAccount_business_accountClosure:
      type: object
      properties:
        daysDelay:
          minimum: 1
          type: integer
          description: >-
            This field signifies the number of days by which loan closure would
            be delayed once a payoff is successfully processed on the loan
            account.
          format: int64
          example: 5
        allowAutoClosureIndicator:
          type: boolean
          description: Determines whether an account would be automatically closed or not
          example: false
      description: >-
        Details related to process closure on the loan accountDays Delay for
        account
    LocAccount_business:
      required:
        - repayment
      type: object
      properties:
        servicingBranch:
          type: string
          description: Branch where account is serviced
          example: OU001
        classificationCode:
          type: string
          description: Classification code of the loan
          example: AnyCode
        riskRating:
          type: string
          description: Current risk rating or loan grade on the loan
          example: NoRisk
        riskRatingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of last risk rating update
          format: date
          example: '2021-01-01'
        collateralType:
          type: string
          description: Indicates the type of collateral securing the loan
          example: >-
            House, Apartment, Auto, Motorcycle, ATV, Personal Water Craft,
            Camper, Boats
        financedCharge:
          $ref: '#/components/schemas/Amount'
        originalProceed:
          $ref: '#/components/schemas/Amount'
        reporting:
          $ref: '#/components/schemas/LocAccount_business_reporting'
        maturity:
          $ref: '#/components/schemas/LocAccount_business_maturity'
        paymentAppropriationCode:
          type: string
          description: Payment appropriation code
          example: BALANCE01
        stateCode:
          type: string
          description: Indicates the State where the account is been serviced.
          example: CA
        accountClosure:
          $ref: '#/components/schemas/LocAccount_business_accountClosure'
        disbursement:
          $ref: '#/components/schemas/LocDisbursement'
        repayment:
          $ref: '#/components/schemas/LocRepayment'
        nonAccrualAllowedIndicator:
          type: boolean
          description: Indicates whether non accrual is auto updated or not
          example: true
        chargeOffAllowedIndicator:
          type: boolean
          description: Indicates whether charge off is auto updated or not
          example: true
      description: Contains business information
    LocAccountBasicInfo_externalAccount_additionalAccounts:
      required:
        - accountId
        - accountIdType
      type: object
      properties:
        accountIdType:
          type: string
          description: The account id type of the account number
          example: AccountNumber
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '10000350070163'
    LocAccountBasicInfo_externalAccount:
      type: object
      properties:
        internationalBankAccountNumber:
          type: string
          description: International bank account number
          example: IBAN0035284
        additionalAccounts:
          type: array
          description: Additional account detail
          items:
            $ref: >-
              #/components/schemas/LocAccountBasicInfo_externalAccount_additionalAccounts
      description: External account identification
    SearchBillInfo_bills:
      required:
        - id
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: Unique bill number for which inquiry is being done
          format: int64
          example: 232000000394032450
        generationDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date on which the bill record is generated
          format: date
          example: '2021-01-01'
        dueDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The scheduled dates on which the bill will be due
          format: date
          example: '2021-01-01'
        status:
          type: string
          description: Status of the bill record
          example: Due
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
        unpaidAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
        takeDownBillIndicator:
          type: boolean
          description: Indicates if the bill record is a takedown bill or not.
          example: false
      description: Contains bill information
    LocAccountInfo_ownerships:
      required:
        - customerId
        - relationshipCode
      type: object
      properties:
        customerId:
          type: string
          description: >-
            This is the primary customer id of the customer system to which the
            MBP Deposits is integrated with
          example: >-
            Default Integration – MBP Core Deposits by default integrated with
            FIS Enterprise Customer system
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        relationshipPercentage:
          type: number
          description: Percentage shared by the related roles
          format: double
          example: 100
        relationshipCode:
          type: string
          description: >-
            The code identifies how the customer and account are related to each
            other
          example: owner
        relationshipDescription:
          type: string
          description: The description of the relationship code
          example: owner
        relationshipType:
          type: string
          description: Relation Type
          example: Primary
          enum:
            - Primary
            - Secondary
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Details of the customer
    LocAccountInfo_business_collectionReport:
      type: object
      properties:
        autoCollection:
          type: string
          description: Auto collection
          example: 'true'
        accountInCollection:
          type: string
          description: Account in collection
          example: 'false'
          enum:
            - 'false'
            - Forced
            - Automatic
      description: Collection reporting
    LocAccountInfo_business_payment_repayment:
      type: object
      properties:
        firstPaymentDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date signifies the date from which payment would be started for
            the loan account
          format: date
          example: '2021-01-01'
        autoPaymentIndicator:
          type: boolean
          description: Indicates whether auto payment of loan is allowed
          example: false
        paymentMethod:
          type: string
          description: >-
            Identifies if the payment is from an internal account or External
            account or via a cheque
          example: TransferExternalAccount
        paymentFrequencyType:
          type: string
          description: >-
            The frequency at which the payments should be scheduled. The payment
            frequency type defined at the product level should default
          example: EndOfEveryMonth
        paymentFrequencyValue:
          minimum: 1
          type: integer
          description: >-
            A component of the payment frequency which identifies the date of
            repayment. The value defined at the product level should default
          format: int64
          example: 5
        paymentDaysAfterAdvDate:
          minimum: 1
          type: integer
          description: >-
            The date by which the repayments of Advanced amount is expected from
            the borrower.Specific to Convenience Access Line
          format: int64
          example: 2
      description: Contains repayment information
    LocAccountInfo_business_payment_scheduled:
      type: object
      properties:
        paymentDueStatus:
          type: string
          description: Payment due status
          example: Current
        nextDueDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The next date on which the loan re-payment is due
          format: date
          example: '2021-01-01'
        lastDueDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The last date on which the loan re-payment was due and satisfied.
          format: date
          example: '2021-01-01'
        nextPaymentDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Next payment date
          format: date
          example: '2021-01-01'
      description: Contains schedules information
    LocAccountInfo_business_payment:
      type: object
      properties:
        repayment:
          $ref: '#/components/schemas/LocAccountInfo_business_payment_repayment'
        scheduled:
          $ref: '#/components/schemas/LocAccountInfo_business_payment_scheduled'
        lastPaymentDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date on which the most recent payment on the account is
            processed.
          format: date
          example: '2021-01-01'
        lastPaymentAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
        billLeadDay:
          minimum: 1
          type: integer
          description: Lead days to payment
          format: int64
          example: 15
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains payment information
    LocAccountInfo_business:
      type: object
      properties:
        basic:
          $ref: '#/components/schemas/AdditionalBasicDetail'
        collectionReport:
          $ref: '#/components/schemas/LocAccountInfo_business_collectionReport'
        disbursement:
          $ref: '#/components/schemas/LocDisbursementInfo'
        payment:
          $ref: '#/components/schemas/LocAccountInfo_business_payment'
        maturity:
          $ref: '#/components/schemas/MaturityCurrent'
      description: Contains line of credit loan business information
    LocAccountInfo_externalAccount:
      required:
        - accountType
        - financialEntityIdType
        - financialEntityIdValue
      type: object
      properties:
        accountType:
          type: string
          description: Indicates the account type of settlement
          example: Consumer Checking
        financialEntityIdType:
          type: string
          description: >-
            Indicates the transaction type/settlement medium through which the
            settlement happens
          example: ACH
        financialEntityIdValue:
          type: string
          description: Indicates the value of financial entity id
          example: ABA Number, Routing Number, BIC, UI, etc
      description: Contains external account information
    LocAccountInfo_accountToAccountRelationships:
      required:
        - account
        - accountClassificationType
        - relationshipType
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        endDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is no longer in effect
          format: date
          example: '2021-01-01'
        accountClassificationType:
          type: string
          description: Classification type
          example: Internal
          enum:
            - Internal
            - External
        relationshipType:
          type: string
          description: The type of the relationship
          example: DisbursementAccount
        account:
          $ref: '#/components/schemas/LoanAccount_1'
        percentage:
          type: number
          description: Indicates the percentage applicable for the account relationship
          format: double
          example: 100
        externalAccount:
          $ref: '#/components/schemas/LocAccountInfo_externalAccount'
        settlementMethod:
          type: string
          description: >-
            Indicates a valid settlement type as defined for the FE like ACH,
            SWIFT, FEDWIRE
          example: ACH
        priority:
          minimum: 1
          type: integer
          description: Indicates the priority of the account relationship
          format: int64
          example: 1
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains account to account relationship details
    LocAccountInfo_nonChargeBalances:
      required:
        - amount
        - balanceCode
      type: object
      properties:
        balanceCode:
          type: string
          description: Balance code. Identifies the type of balance
          example: OutStandingPrincipalBalance
        balanceName:
          type: string
          description: Balance name. Contains description of the balance code
          example: OutStanding Principal Balance
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
      description: Contains non charge balance information
    LocAccountInfo_debitCard:
      type: object
      properties:
        cardIndicator:
          type: boolean
          description: Debit card indicator
          example: true
        atmTransaction:
          type: string
          description: Identifies if ATM transaction is allowed for the account
          example: 'true'
        posTransaction:
          type: string
          description: Identifies if POS transaction is allowed for the account
          example: 'true'
      description: Contains debit card information
    LocAccountInfo_termout_maturity:
      type: object
      properties:
        term:
          type: array
          description: Loan maturity term
          items:
            $ref: '#/components/schemas/TermTypeNumber_1'
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Maturity Date
          format: date
          example: '2021-01-01'
      description: Maturity Detail
    LocAccountInfo_termout:
      required:
        - effectiveDate
        - termOutIndicator
        - termOutReason
      type: object
      properties:
        id:
          type: integer
          description: TermOut Identifier
          format: int64
          example: 22837
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
        termoutIndicator:
          type: boolean
          description: >-
            Indicates the ability to stop all advances on the credit line at the
            account level
          example: false
        reason:
          type: string
          description: >-
            Indicates the reason for which the LOC is converted to a Term Out
            Loan.
          example: Bank Decision
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Date from which account is going to be effective.This is the same
            Date on which bank converts the LOC to a Term Out Loan
          format: date
          example: '2021-01-01'
        firstPaymentDateAfterTermOut:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            This is the date when the first payment is due after the account is
            termed out. This should be the date in the future relative to
            current system date
          format: date
          example: '2021-01-01'
        autoPayoffIndicator:
          type: boolean
          description: >-
            Indicates the system to perform payoff evaluation and process the
            transaction.
          example: false
        paymentAmount:
          $ref: '#/components/schemas/AmountWithoutDate'
        maturity:
          $ref: '#/components/schemas/LocAccountInfo_termout_maturity'
        billScheduleCode:
          type: string
          description: >-
            Billing schedule code determines the payment type and payment
            calculation option
          example: PRINANDPROJINT
        billScheduledescription:
          type: string
          description: Description of the code
          example: PrincipalAndProjectedInterest
        auditTrail:
          $ref: '#/components/schemas/AuditTrail_1'
      description: Term out LOC business detail
    LocAccountInfo_nonSufficientFundCounters:
      type: object
      properties:
        periodType:
          type: string
          description: >-
            Period type . Year to Date is between Jan-Dec. Life to Date is
            between the period of loan start date to loan maturity
          example: YTD (Year to Date) and LTD (Life to Date)
        defaultNumber:
          minimum: 1
          type: integer
          description: >-
            This field provides the number of times a business process is
            completed.
          format: int64
          example: 2
    LocAccountInfo_takeDown:
      type: object
      properties:
        numberOfTakeDownAllowed:
          minimum: 1
          type: integer
          description: >-
            Total number of takedowns allowed on primary LOC. This number
            includes active as well as disposed takedowns
          format: int64
          example: 1
        numberOfActiveTakeDownAllowed:
          minimum: 1
          type: integer
          description: >-
            Total number of active takedowns allowed on primary LOC. This number
            includes all takedowns which are not disposed( active, expired,
            rolled in)
          format: int64
          example: 1
        sameAsCashIndicator:
          type: boolean
          description: >-
            This field indicates whether takedowns allowed are same as cash
            takedowns or regular takedowns
          example: false
        paymentPrioritySequence:
          type: string
          description: >-
            This field signifies payment priority sequence based on which
            payment would be posted on the primary LOC and the underlying
            takedowns
          example: OldestToLatestWithLOC
        latestProcessingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: This signifies date of latest processed takedown
          format: date
          example: '2021-01-01'
        takeDownCounters:
          type: array
          description: Array of takedown counters
          items:
            $ref: '#/components/schemas/TakeDownCounter'
      description: >-
        This aggregate signifies takedown related details on primary LOC
        account.
    LocAccountBasicDetail_externalAccount_additionalAccounts:
      required:
        - accountId
        - accountIdType
      type: object
      properties:
        accountIdType:
          type: string
          description: The account id type of the account number
          example: LegacyAccountNumber
        accountId:
          type: string
          description: The account identifier from the system of record
          example: '452525333'
    LocAccountBasicDetail_externalAccount:
      type: object
      properties:
        additionalAccounts:
          type: array
          description: Additional account detail
          items:
            $ref: >-
              #/components/schemas/LocAccountBasicDetail_externalAccount_additionalAccounts
      description: External account identification
    AdditionalBasicDetail_accountClosure:
      type: object
      properties:
        daysDelay:
          minimum: 1
          type: integer
          description: >-
            This field signifies the number of days by which loan closure (if
            the auto closure is yes) would be delayed once a payoff is
            successfully processed on the loan account.
          format: int64
          example: 5
        allowAutoClosureIndicator:
          type: boolean
          description: Determines whether an account would be automatically closed or not
          example: false
      description: >-
        Details related to process closure on the loan accountDays Delay for
        account
    PaymentInstructionFrequency_alternateFrequency:
      required:
        - frequencyType
      type: object
      properties:
        frequencyType:
          type: string
          description: Describes the periodicity for payment instruction set up
          example: EveryMonth
        frequencyUnitVal:
          minimum: 1
          type: integer
          description: Associates a value to the frequency type
          format: int64
          example: 5
      description: Contains details related to alternate periodicity
    PaymentInstructionInfo_paymentInstructions:
      required:
        - accountOneOf
        - effectiveDate
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date from which instruction will be applicable
          format: date
          example: '2021-01-01'
        processingStatus:
          type: string
          description: Status of the payment instruction
          readOnly: true
          example: Active
        paymentInstructionReferenceNumber:
          minimum: 1
          type: integer
          description: >-
            Payment instruction reference number which will be created at the
            time of new payment instruction set up
          format: int64
          example: 5
        accountDetail:
          $ref: '#/components/schemas/AccountDetailWithoutSOR'
        paymentCollectionAccount:
          $ref: '#/components/schemas/PaymentCollectionAccount'
        paymentInstructionOccurrence:
          type: string
          description: >-
            Defines whether this payment instruction set up is for one off
            occurrence or recurring occurrence
          example: OneOff, Recurring
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
        paymentInstructionAdditionalDetail:
          $ref: '#/components/schemas/PaymentAdditionalDetail'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
    PaymentInstructionDetail_paymentInstruction:
      required:
        - accountOneOf
        - effectiveDate
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date from which instruction will be applicable
          format: date
          example: '2021-01-01'
        processingStatus:
          type: string
          description: Status of the payment instruction
          readOnly: true
          example: Active
        paymentInstructionReferenceNumber:
          minimum: 1
          type: integer
          description: >-
            Payment instruction reference number which will be created at the
            time of new payment instruction set up
          format: int64
          example: 5
        accountDetail:
          $ref: '#/components/schemas/AccountDetailWithoutSOR'
        paymentCollectionAccount:
          $ref: '#/components/schemas/PaymentCollectionAccount'
        paymentInstructionOccurrence:
          type: string
          description: >-
            Defines whether this payment instruction set up is for one off
            occurrence or recurring occurrence
          example: OneOff, Recurring
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
        paymentInstructionAdditionalDetail:
          $ref: '#/components/schemas/PaymentAdditionalDetail'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: A payment instruction
    RenewalEffectiveDateInfo_processingInfo_amount:
      type: object
      properties:
        renewalAmount:
          $ref: '#/components/schemas/Amount'
      description: Contains renewal amount details
    RenewalEffectiveDateInfo_processingInfo:
      type: object
      properties:
        transactionReferenceNumber:
          type: integer
          description: Unique transaction reference number associated with each Renewal
          format: int64
          example: 9000194650519
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective date of the Renewal
          format: date
          example: '2021-01-01'
        processingStatus:
          type: string
          description: Processing status of the Renewal
          example: Created
        applicableFeeIndicator:
          type: boolean
          description: Indicates if the renewal fee has been assessed for the renewal
          example: true
        termType:
          type: string
          description: >-
            Term type identifies if the term is defined in days, months or
            years.
          example: Months
        termValue:
          minimum: 1
          type: integer
          description: >-
            Term value identifies the  loan term in actual number of days or
            months or years.
          format: int64
          example: 2
        amount:
          $ref: '#/components/schemas/RenewalEffectiveDateInfo_processingInfo_amount'
        additionalDetails:
          type: array
          description: Array of additional detail
          items:
            $ref: '#/components/schemas/AdditionalDetail'
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Renewal Processing Details
    UpdateTermOutLOC_maturity:
      type: object
      properties:
        terms:
          type: array
          description: Array of term detail
          items:
            $ref: '#/components/schemas/TermTypeNumber_1'
      description: Contains maturity info
    UpdateLOCAccountBusiness_business_maturity:
      type: object
      properties:
        terms:
          type: array
          description: Array of term detail
          items:
            $ref: '#/components/schemas/TermTypeNumber_1'
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Maturity date
          format: date
          example: '2021-01-01'
      description: Contains maturity info
    UpdateLOCAccountBusiness_business_accountClosure:
      type: object
      properties:
        dayDelay:
          minimum: 0
          type: integer
          description: Days delay for account closure
          format: int64
          example: 2
        allowAutoClosureIndicator:
          type: boolean
          description: Indicates whether an account would be automatically closed or not
          example: false
      description: Account closure
    UpdateLOCAccountBusiness_business_accountTakeDown:
      type: object
      properties:
        numberOfTakeDownAllowed:
          type: integer
          description: Number of Take down allowed
          format: int64
          example: 5
        numberOfActiveTakeDownAllowed:
          type: integer
          description: Number of Active Take down allowed
          format: int64
          example: 5
        sameAsCashIndicator:
          type: boolean
          description: Same as Cash Indicator
          example: false
        takeDownPaymentPrioritySequence:
          type: string
          description: Take down payment priority sequence
          example: >-
            Oldest to latest with LOC( Default), Highest to lowest with LOC,
            Lowest to highest with LOC, LOC with oldest to latest
      description: Account take down detail
    UpdateLOCAccountBusiness_business:
      type: object
      properties:
        overpaymentMaturityRecalculationOption:
          type: string
          description: >-
            Option to determine whether the maturity date of the account needs
            to be recalculated or the repayment amount needs to be recalculated
          example: Recalculate Maturity Date, Recalculate payment amount
        servicingBranch:
          type: string
          description: Branch where account is serviced
          example: OU001
        classificationCode:
          type: string
          description: Classification code of the loan
          example: AnyCode
        riskRating:
          type: string
          description: Current risk rating or loan grade on the loan
          example: NoRisk
        riskRatingDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of last risk rating update
          format: date
          example: '2021-01-01'
        collateralType:
          type: string
          description: >-
            Indicates the type of collateral securing the loan.Eg. Auto,
            Motobike, Recreational Vehicles
          example: Auto, Motobike, Recreational Vehicles
        financedCharge:
          $ref: '#/components/schemas/Amount'
        originalProceed:
          $ref: '#/components/schemas/Amount'
        reportingPurposeCode:
          type: string
          description: Purpose code. Identifies the reason for the loan
          example: Purchased
        maturity:
          $ref: '#/components/schemas/UpdateLOCAccountBusiness_business_maturity'
        paymentAppropriationCode:
          type: string
          description: Payment appropriation code
          example: BYBALPYMNTPNI
        stateCode:
          type: string
          description: Indicates the State where the account is been serviced.
          example: CA
        accountClosure:
          $ref: >-
            #/components/schemas/UpdateLOCAccountBusiness_business_accountClosure
        accountTakeDown:
          $ref: >-
            #/components/schemas/UpdateLOCAccountBusiness_business_accountTakeDown
      description: Business Detail for a loan account
    AccountToAdditionalAccountRelationship_additionalAccounts:
      required:
        - accountId
        - accountIdType
      type: object
      properties:
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date form which additional account details are going to be effective
          format: date
          example: '2021-01-01'
        accountIdType:
          type: string
          description: The account id type of the account number
          example: LegacyAccountNumber
        accountId:
          maximum: 40
          type: string
          description: The account identifier
          example: '1234535434'
      description: Contains account's additional account detail.
    AlliedAccount_disbursement:
      required:
        - frequencyType
        - method
      type: object
      properties:
        frequencyType:
          type: string
          description: Disbursement Frequency Type
          example: EveryMonth
        frequencyValue:
          minimum: 1
          type: integer
          description: Disbursement Frequency Value
          format: int64
          example: 10
        method:
          type: string
          description: >-
            Identifies if the disbursement is to an external account or internal
            account or via a cheque.
          example: External
          enum:
            - External
            - Internal
      description: Disbursement Detail
    AlliedAccountInfo_basic:
      required:
        - productKey
      type: object
      properties:
        productKey:
          maxLength: 32
          minLength: 1
          type: string
          description: Enterprise Product Key
          example: MBPAPIBILL
        currencyCode:
          type: string
          description: The Currency that is supported for the product.
          example: USD
        currencyName:
          type: string
          description: Name of the currency
          example: US Dollar
        effectiveDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date from which account is going to be effective
          format: date
          example: '2021-01-01'
        primaryStatus:
          type: string
          description: Primary life cycle status of the account
          example: UnderEstablishment
          enum:
            - Active
            - Cancelled
            - Settled
            - UnderEstablishment
        secondaryStatus:
          type: string
          description: Secondary life cycle status of the account
          example: In Progress
        approvalStatus:
          $ref: '#/components/schemas/ApprovalStatus'
      description: Allied Account Basic Detail
    AlliedAccountInfo_disbursement:
      required:
        - frequencyType
        - method
        - nextDisbursementDate
      type: object
      properties:
        frequencyType:
          type: string
          description: Disbursement Frequency Type
          example: EndOfEveryMonth
        frequencyValue:
          minimum: 1
          type: integer
          description: Disbursement Frequency Value
          format: int64
          example: 10
        method:
          type: string
          description: >-
            Identifies if the disbursement is to an external account or internal
            account or via a cheque.
          example: TransferExternalAccount
        lastDisbursementDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of last disbursement
          format: date
          example: '2021-01-01'
        nextDisbursementDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Date of next disbursement
          format: date
          example: '2021-01-01'
        lastDisbursementAmount:
          type: number
          description: Last Disbursement Amount
          format: double
          example: 100
      description: Disbursement Detail Information
    AlliedAccountInfo_ownership:
      type: object
      properties:
        customerId:
          type: string
          description: This is the primary customer id of the customer system
          example: '123456789'
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The date the relationship is effective
          format: date
          example: '2021-01-01'
        relationshipCode:
          type: string
          description: >-
            The code identifies how the customer and account are related to each
            other
          example: owner
        relationshipDescription:
          type: string
          description: The description of the relationship code
          example: owner
        relationshipType:
          type: string
          description: >-
            Identifies whether the customer is primary or secondary on the
            account.
          example: Primary
          enum:
            - Primary
            - Secondary
      description: Indicates the Customer ID for the role.
    AccountRelatedToAlliedAccount_insurance_customer:
      required:
        - customerId
      type: object
      properties:
        customerId:
          type: string
          description: Customer id
          example: '70000021901'
        name:
          type: string
          description: Specifies customer name
          example: Laura Flores
        relationshipType:
          type: string
          description: Specifies relationship type
          example: Primary
      description: Insurance customer details
    AccountRelatedToAlliedAccount_insurance:
      required:
        - customer
        - planType
        - status
        - type
      type: object
      properties:
        planType:
          type: string
          description: Describes the type of insurance plan linked to an account
          example: CreditLife
        type:
          type: string
          description: Describes the type of insurance linked to an account
          example: Financed, Accruing
        status:
          type: string
          description: Describes the status of insurance linked to an account
          example: Active
        customer:
          $ref: >-
            #/components/schemas/AccountRelatedToAlliedAccount_insurance_customer
        balances:
          type: array
          description: Array of additional balances
          items:
            $ref: '#/components/schemas/AdditionalBalance_1'
      description: Insurance details
    CreateGLPosting_fromGeneralLedger:
      required:
        - accountNumber
        - systemCode
      type: object
      properties:
        accountNumber:
          type: string
          description: The GL account number from where funds need to be moved.
          example: GLA12346
        systemCode:
          type: string
          description: The GL system to which the above GL account belongs
          example: '200000000001'
      description: >-
        This aggregate identifies the GL account from where funds need to be
        reduced. In case of Suspense GL- from GL account is optional
    CreateGLPosting_toGeneralLedger:
      required:
        - accountNumber
        - systemCode
      type: object
      properties:
        accountNumber:
          type: string
          description: The GL account number from where funds need to be moved.
          example: '337003'
        systemCode:
          type: string
          description: The GL system to which the above GL account belongs
          example: '200000000001'
      description: >-
        This aggregate identifies the GL account where funds need to be
        moved/increased.
    CreateGLPosting_bookingDateRange:
      required:
        - fromDate
      type: object
      properties:
        fromDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Indicates the from date.
          format: date
          example: '2021-01-01'
        toDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Indicates the to date.
          format: date
          example: '2021-01-01'
      description: Booking date range
    CreateGLPosting_financialPosting:
      type: object
      properties:
        postingStandardCode:
          type: string
          description: >-
            Posting standard code used for the transaction posting while account
            in Non Accrual or Charge-off status
          example: ReviewLoanPayment, ShadowLoanPayment
        postingId:
          type: integer
          description: >-
            Posting Identifier. Indicates the unique number generated for each
            posting of a transaction
          format: int64
          example: 7000267184171
        financialOperationId:
          type: integer
          description: Financial operation identifier
          format: int64
          example: 2620
      description: >-
        Financial Posting Details is a required choice between Posting Id or
        Financial Operation Id or Posting Standard Code
    ScheduledEventResponse_scheduledEvents:
      required:
        - businessEventStatus
        - transactionReferenceNumber
      type: object
      properties:
        transactionReferenceNumber:
          type: integer
          description: Specifies the transaction reference number mapped to scheduled event
          format: int64
          readOnly: true
          example: 9000194650519
        businessEventStatus:
          type: string
          description: Specifies the current status of scheduled event
          example: Cancelled
          enum:
            - Cancelled
            - Created
            - Processed
            - Rejected
            - Retry
            - Suspended
      description: Schedule event
    ExternalAccount_accounts:
      type: object
      properties:
        accountIdType:
          type: string
          description: Identifies the standard account type
          example: Email
        accountId:
          type: string
          description: The account identifier from the system of record
          example: JacksSwayer2@gmail.com
    UnsecuredTermAccountOwnership_systemOfRecord:
      required:
        - applicationName
        - processorName
      type: object
      properties:
        processorName:
          type: string
          description: >-
            The software processor name which along with the application name
            uniquely identifies the system of record
          example: FIS NextGen
        applicationName:
          type: string
          description: Application name
          example: Lending
      description: >-
        Currently, this aggregate is not used. This can be enabled only if the
        core is Integrated with more than 1 customer system and this will be
        used to identify to which customer system this id belongs to
    Business_maturity:
      type: object
      properties:
        initial:
          $ref: '#/components/schemas/Maturity'
        active:
          $ref: '#/components/schemas/MaturityCurrent'
      description: Contains maturity information
    Business_closure:
      type: object
      properties:
        dayDelay:
          minimum: 1
          type: integer
          description: Day delay
          format: int64
          example: 2
        autoClosureIndicator:
          type: boolean
          description: Indicates whether an account would be automatically closed or not
          example: true
      description: Account closure
    Business_payment_scheduled:
      required:
        - nextDueDate
        - paymentDueStatus
      type: object
      properties:
        paymentDueStatus:
          type: string
          description: Payment due status
          example: Current
        nextDueDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The next date on which the loan re-payment is due
          format: date
          example: '2021-01-01'
        lastDueDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The last date on which the loan re-payment was due and satisfied
          format: date
          example: '2021-01-01'
        repaymentAmount:
          $ref: '#/components/schemas/Amount'
        nextPaymentDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Next payment date
          format: date
          example: '2021-01-01'
      description: Contains schedules information
    Business_payment_bill:
      type: object
      properties:
        billLeadDay:
          minimum: 1
          type: integer
          description: Bill lead day
          format: int64
          example: 10
        nextBillDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Next bill date
          format: date
          example: '2021-01-01'
        previousBillDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Previous bill date
          format: date
          example: '2021-01-01'
      description: Contains bill info
    Business_payment_advancedBill_bills:
      type: object
      properties:
        periodType:
          type: string
          description: Period type
          example: periodType
        number:
          type: integer
          description: Number
          format: int64
          example: 5
    Business_payment_advancedBill:
      type: object
      properties:
        advanceBillingAllowedIndicator:
          type: boolean
          description: Indicates if advance billing is allowed
          example: true
        numberOfActiveBillAllowed:
          type: integer
          description: Number of active advance bills allowed
          format: int64
          example: 4
        numberOfActiveBill:
          type: integer
          description: Number of active advance bills
          format: int64
          example: 5
        bills:
          type: array
          description: Array of bill info
          items:
            $ref: '#/components/schemas/Business_payment_advancedBill_bills'
      description: Contains advanced bill information
    Business_payment:
      type: object
      properties:
        repayment:
          $ref: '#/components/schemas/Repayment'
        scheduled:
          $ref: '#/components/schemas/Business_payment_scheduled'
        lastPaymentDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date on which the most recent payment on the account is
            processed
          format: date
          example: '2021-01-01'
        lastPaymentAmount:
          $ref: '#/components/schemas/Amount'
        scheduledNumberOfPaymentLife:
          minimum: 1
          type: integer
          description: Scheduled number of payment life
          format: int64
          example: 20
        numberOfPaymentLife:
          minimum: 1
          type: integer
          description: This is the sum of payments satisfied and the payments remaining
          format: int64
          example: 24
        numberOfPaymentPerYear:
          minimum: 1
          type: integer
          description: >-
            This is the number of installments the borrower should satisfy in a
            year
          format: int64
          example: 2
        numberOfPaymentSatisfied:
          minimum: 1
          type: integer
          description: >-
            This is the number of installments satisfied since the loan
            origination
          format: int64
          example: 2
        numberOfPaymentRemaining:
          minimum: 0
          type: integer
          description: This is the number of installments pending upto maturity date
          format: int64
          example: 20
        bill:
          $ref: '#/components/schemas/Business_payment_bill'
        advancedBill:
          $ref: '#/components/schemas/Business_payment_advancedBill'
        overpaymentMaturityRecalculationOption:
          type: string
          description: >-
            Option to determine whether the maturity date of the account needs
            to be recalculated or the repayment amount needs to be recalculated
          example: Recalculate Maturity Date, Recalculate payment amount
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains payment information
    SecuredBusiness_closure:
      type: object
      properties:
        dayDelay:
          minimum: 1
          type: integer
          description: Day delay
          format: int64
          example: 1
        autoClosureIndicator:
          type: boolean
          description: Indicates whether an account would be automatically closed or not
          example: true
      description: Account closure
    SecuredBusiness_payment_scheduled:
      required:
        - nextDueDate
        - paymentDueStatus
      type: object
      properties:
        paymentDueStatus:
          type: string
          description: Payment due status
          example: Current
        nextDueDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The next date on which the loan re-payment is due
          format: date
          example: '2021-01-01'
        lastDueDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: The last date on which the loan re-payment was due and satisfied
          format: date
          example: '2021-01-01'
        repaymentAmount:
          $ref: '#/components/schemas/Amount'
        nextPaymentDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Next payment date
          format: date
          example: '2021-01-01'
      description: Contains scheduled information
    SecuredBusiness_payment_bill:
      type: object
      properties:
        billLeadDay:
          minimum: 1
          type: integer
          description: Bill lead day
          format: int64
          example: 5
        nextBillDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Next bill date
          format: date
          example: '2021-01-01'
        previousBillDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Previous bill date
          format: date
          example: '2021-01-01'
      description: Contains bill info
    SecuredBusiness_payment_advancedBill:
      type: object
      properties:
        advanceBillingAllowedIndicator:
          type: boolean
          description: Indicates if advance billing is allowed
          example: true
        numberOfActiveBillAllowed:
          type: integer
          description: Number of active advance bills allowed
          format: int64
          example: 5
        numberOfActiveBill:
          type: integer
          description: Number of active advance bills
          format: int64
          example: 3
        bills:
          type: array
          description: Array of bill info
          items:
            $ref: '#/components/schemas/Business_payment_advancedBill_bills'
      description: Contains advanced bill information
    SecuredBusiness_payment:
      type: object
      properties:
        repayment:
          $ref: '#/components/schemas/Repayment'
        scheduled:
          $ref: '#/components/schemas/SecuredBusiness_payment_scheduled'
        lastPaymentDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            The date on which the most recent payment on the account is
            processed
          format: date
          example: '2021-01-01'
        lastPaymentAmount:
          $ref: '#/components/schemas/Amount'
        scheduledNumberOfPaymentLife:
          minimum: 1
          type: integer
          description: Scheduled number of payment life
          format: int64
          example: 83
        numberOfPaymentLife:
          minimum: 1
          type: integer
          description: This is the sum of payments satisfied and the payments remaining
          format: int64
          example: 83
        numberOfPaymentPerYear:
          minimum: 1
          type: integer
          description: >-
            This is the number of installments the borrower should satisfy in a
            year
          format: int64
          example: 1
        numberOfPaymentSatisfied:
          minimum: 1
          type: integer
          description: >-
            This is the number of installments satisfied since the loan
            origination
          format: int64
          example: 1
        numberOfPaymentRemaining:
          minimum: 0
          type: integer
          description: This is the number of installments pending upto maturity date
          format: int64
          example: 82
        bill:
          $ref: '#/components/schemas/SecuredBusiness_payment_bill'
        advancedBill:
          $ref: '#/components/schemas/SecuredBusiness_payment_advancedBill'
        overpaymentMaturityRecalculationOption:
          type: string
          description: >-
            Option to determine whether the maturity date of the account needs
            to be recalculated or the repayment amount needs to be recalculated
          example: Recalculate Maturity Date, Recalculate payment amount
        auditTrail:
          $ref: '#/components/schemas/AuditTrail'
      description: Contains payment information
    LocCreditLimit_overLine:
      required:
        - allowedIndicator
      type: object
      properties:
        allowedIndicator:
          type: boolean
          description: Indicates whether overline is allowed in the LOC
          example: true
      description: Record the amount which can be overdrawn over and above the credit limit
    LocDisbursementInfo_notes:
      type: object
      properties:
        date:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            Disbursement date. The date on which the funds from the loan account
            is made available for the customer. In case of multiple
            disbursements, this will be the first date of disbursement
          format: date
          example: '2021-01-01'
        method:
          type: string
          description: >-
            Disbursement method. Identifies if the disbursement is to an
            external account or internal account or via a cheque
          example: TransferExternalAccount
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
      description: Contains disbusement record information
    LocCreditLimitInfo_overLine:
      required:
        - allowedIndicator
      type: object
      properties:
        allowedIndicator:
          type: boolean
          description: Indicates whether overline is allowed in the LOC
          example: true
        amount:
          $ref: '#/components/schemas/AmountWithoutDate'
        overlinePercentage:
          type: number
          description: Indicates the percentage of Overline (Percentage of Limit)
          format: double
          example: 50
      description: Record the amount which can be overdrawn over and above the credit limit
    InsuranceInfo_accountInsurance:
      required:
        - plan
        - planId
        - startDate
        - status
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective date of the insurance policy
          format: date
          example: '2021-01-01'
        planId:
          type: string
          description: Refers the insurance plan id.
          example: '3012003'
        planDescription:
          type: string
          description: A description of the insurance plan recorded on an account
          example: InsPlnDesc
        policyNumber:
          type: string
          description: Denotes the insurance policy number
          example: '987443'
        term:
          minimum: 1
          type: integer
          description: Represents the actual length of the insurance policy in months
          format: int64
          example: 2
        status:
          type: string
          description: Describes the status of the insurance on an account
          example: Active
        customerId:
          type: string
          description: >-
            Unique identifier used to identify the customer within the system of
            record (SOR).
          example: '70000021883'
        collateralId:
          type: string
          description: Refers the collateral id linked to the insurance plan
          example: '2011'
        companyId:
          type: string
          description: Refers the insurance company id linked to the insurance plan
          example: '10000580030078'
        plan:
          $ref: '#/components/schemas/InsurancePlan'
      description: Contains the account insurance details.
    CreateInsuranceInfo_accountInsurance:
      required:
        - collateralId
        - companyId
        - plan
        - policyNumber
        - startDate
        - status
        - term
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective date of the insurance policy
          format: date
          example: '2021-01-01'
        planId:
          type: string
          description: Refers the insurance plan id.
          example: '3012003'
        planDescription:
          type: string
          description: A description of the insurance plan recorded on an account
          example: InsPlnDesc
        policyNumber:
          type: string
          description: Denotes the insurance policy number
          example: '987443'
        term:
          minimum: 1
          type: integer
          description: Represents the actual length of the insurance policy in months
          format: int64
          example: 2
        status:
          type: string
          description: Describes the status of the insurance on an account
          example: Active
        customerId:
          type: string
          description: >-
            Unique identifier used to identify the customer within the system of
            record (SOR).
          example: '70000021883'
        collateralId:
          type: string
          description: Refers the collateral id linked to the insurance plan
          example: '2011'
        companyId:
          type: string
          description: Refers the insurance company id linked to the insurance plan
          example: '10000580030078'
        plan:
          $ref: '#/components/schemas/CreateInsurancePlan'
      description: Contains the account insurance details.
    AccountInsurance_accountInsurance_rebate:
      type: object
      properties:
        currentRebate:
          $ref: '#/components/schemas/Rebate'
        nextRebate:
          $ref: '#/components/schemas/Rebate'
      description: Rebate details
    AccountInsurance_accountInsurance:
      required:
        - expiryDate
        - insurancePlan
        - startDate
        - status
      type: object
      properties:
        startDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Effective date of the insurance policy
          format: date
          example: '2021-01-01'
        expiryDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: Expiry date of the insurance policy
          format: date
          example: '2021-01-01'
        planId:
          type: string
          description: Refers the insurance plan id
          example: '3012003'
        planDescription:
          type: string
          description: A description of the insurance plan recorded on an account
          example: InsPlnDesc
        policyNumber:
          type: string
          description: Refers the insurance policy number
          example: '987443'
        term:
          minimum: 1
          type: integer
          description: Represents the actual length of the insurance policy in months
          format: int64
          example: 2
        status:
          type: string
          description: Describes the status of the insurance on an account
          example: Active
        customerId:
          type: string
          description: >-
            Unique identifier used to identify the customer within the system of
            record (SOR).
          example: '70000021883'
        customerName:
          type: string
          description: Refers customer name.
          example: customerName
        relationshipType:
          type: string
          description: >-
            Identifies whether the customer is primary or secondary on a loan
            account.
          example: Primary
          enum:
            - Primary
            - Secondary
        collateralId:
          type: string
          description: Refers the collateral id linked to the insurance plan
          example: '2011'
        companyId:
          type: string
          description: Refers the insurance company Id linked to the insurance plan
          example: '10000580030078'
        plan:
          $ref: '#/components/schemas/InsurancePlanInfo'
        dailyInsuranceAccrualAmount:
          $ref: '#/components/schemas/Amount'
        balances:
          type: array
          description: Represents the periodic balance Detail
          items:
            $ref: '#/components/schemas/PeriodicBalanceInfo'
        rebate:
          $ref: '#/components/schemas/AccountInsurance_accountInsurance_rebate'
      description: Contains the account insurance details
    PeriodicBalanceInfo_balanceAttribute:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: A code associated with an entity identifed by the aggregate.
          example: Total Accrued Insurance Balance
        description:
          type: string
          description: A description of the code.
          example: Total Accrued Insurance Balance
      description: Specifies the code and name of a balance type.
    RenewalProcess_repayment:
      required:
        - paymentFrequencyType
      type: object
      properties:
        firstPaymentDate:
          pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
          type: string
          description: >-
            First Payment Date indicates the date from when the payments are
            going to start after renewal on the loan account
          format: date
          example: '2021-01-01'
        userDefinedFlatAmount:
          $ref: '#/components/schemas/Amount'
        paymentFrequencyType:
          type: string
          description: >-
            The frequency at which the payments should be scheduled. The payment
            frequency type defined at the product level should default
          example: EndOfEveryMonth
        paymentFrequencyValue:
          minimum: 1
          type: integer
          description: >-
            A component of the payment frequency which identifies the date of
            repayment. The value defined at the product level should default
          format: int64
          example: 2
      description: Contains renewal repayment details
    RenewalProcess_skipPayment:
      required:
        - inheritSkipDetailIndicator
      type: object
      properties:
        inheritSkipDetailIndicator:
          type: boolean
          description: Inherit Skip Details Indicator
          example: true
        payment:
          $ref: '#/components/schemas/SkipPayment_2'
      description: Renewal Skip Payment Detail
  parameters:
    transactionReferenceNumber:
      name: transactionReferenceNumber
      in: path
      description: Unique transaction reference id associated with each posted transaction
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
        example: 9000194650519
  securitySchemes:
    oauth2:
      type: oauth2
      description: The following flows are supported.  Need a URL to document this.
      flows:
        clientCredentials:
          tokenUrl: https://codeconnect.fisglobal.com/token
          scopes: {}
        authorizationCode:
          authorizationUrl: https://codeconnect.fisglobal.com/authorize
          tokenUrl: https://codeconnect.fisglobal.com/token
          scopes: {}
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://test.com
          scopes: {}
