{
  "openapi": "3.0.0",
  "info": {
    "title": "MBPAPI: Customer",
    "description": "Operations related to creating, retrieving and updating customer information",
    "contact": {
      "email": "MBPAPI-Support@fisglobal.com"
    },
    "license": {
      "name": "FIS Proprietary and Confidential"
    },
    "version": "1.3.0"
  },
  "servers": [
    {
      "url": "https://api-gw-uat.fisglobal.com/rest/mbp-api/customer/v1.3"
    }
  ],
  "security": [
    {
      "oauth2": []
    }
  ],
  "paths": {
    "/customers": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create a new customer",
        "description": "Creates a new customer record.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-POST.html"
        },
        "operationId": "createCustomer",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          }
        ],
        "requestBody": {
          "description": "The customer record to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCustomerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Retrieve customer details(Deprecated)",
        "description": "Based on the query param supplied, will either return the complete customer or customer summary info for the given customer id(This API has been deprecated. Please use GET /process/customers/{customerId})",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-GET.html"
        },
        "operationId": "getCustomer",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id or external identifier of the customer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "List of comma separated values of the aggregate structure contents desired in the response; if not specified all values are returned.Valid values are commonDemographics, externalIdentifiers, customerRoles, taxes, names, contactInfo, census, officers, branches, identifications, attributes, individualDemographics, annualIncomeLevel, employmentDetails, citizenships, organizationDemographics, dueDiligence, verificationStatus, includeAll",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "includeAll"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Update a customer record",
        "description": "Updates a customer record.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-PUT.html"
        },
        "operationId": "updateCustomer",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The customer record to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/notes": {
      "get": {
        "tags": [
          "Customer notes"
        ],
        "summary": "Retrieve a list of notes for a customer",
        "description": "Based on the query parm supplied, will return the notes for the given customer id.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-notes-GET.html"
        },
        "operationId": "getCustomerNotes",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "cursorKey",
            "in": "query",
            "description": "The cursor string indicates where the system of record should start on the next query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "generatedCursorKey"
          },
          {
            "name": "numberRecordsRequested",
            "in": "query",
            "description": "The number of records to be returned in the response.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            },
            "example": 10
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "noteId",
            "in": "query",
            "description": "The note id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "999900138067057"
            }
          },
          {
            "name": "notePriority",
            "in": "query",
            "description": "The note priority",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "High",
              "enum": [
                "High",
                "Medium",
                "Low"
              ]
            }
          },
          {
            "name": "noteCategory",
            "in": "query",
            "description": "The note catgeory",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Account"
            }
          },
          {
            "name": "excludeDetail",
            "in": "query",
            "description": "Exclude Detail Filter Indicator",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "List of comma separated values of the aggregate structure contents desired in the response; if not specified all are returned. Valid values include Current, Future, History, or All",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Current"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "Link": {
                "description": "A list of HATEOS links for page navigation.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "total-records-available": {
                "description": "If provided by the system of record, should be the total number of items that matched the search criteria.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n}\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notes"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "tags": [
          "Customer notes"
        ],
        "summary": "Create a new customer note",
        "description": "Creates a new customer note.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-notes-POST.html"
        },
        "operationId": "createCustomerNote",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          }
        ],
        "requestBody": {
          "description": "The customer note to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNote"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerNotesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/notes/{noteId}": {
      "put": {
        "tags": [
          "Customer notes"
        ],
        "summary": "Update a customer note",
        "description": "Updates a customer note record.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-notes-PUT.html"
        },
        "operationId": "updateCustomerNoteById",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "999900138067059"
            }
          },
          {
            "name": "noteProcessorName",
            "in": "query",
            "description": "The note processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "noteApplicationName",
            "in": "query",
            "description": "The note application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The customer note to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNote"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerNotesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "Customer notes"
        ],
        "summary": "Delete a customer note",
        "description": "Deletes a customer note record.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-notes-DELETE.html"
        },
        "operationId": "deleteCustomerNoteById",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "The note id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "999900138067059"
            }
          },
          {
            "name": "noteProcessorName",
            "in": "query",
            "description": "The note processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "noteApplicationName",
            "in": "query",
            "description": "The note application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/external-identifiers": {
      "get": {
        "tags": [
          "External identifiers"
        ],
        "summary": "Retrieve a list of external identifiers for a customer",
        "description": "Based on the query parm supplied, will return the external identifiers for the given customer id.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-external-identifiers-GET.html"
        },
        "operationId": "getCustomerExternalIds",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "cursorKey",
            "in": "query",
            "description": "The cursor string indicates where the system of record should start on the next query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "generatedCursorKey"
          },
          {
            "name": "numberRecordsRequested",
            "in": "query",
            "description": "The number of records to be returned in the response.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            },
            "example": 10
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "Link": {
                "description": "A list of HATEOS links for page navigation.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "total-records-available": {
                "description": "If provided by the system of record, should be the total number of items that matched the search criteria.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalIdentifiers"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "tags": [
          "External identifiers"
        ],
        "summary": "Create new customer external identifiers",
        "description": "Create new customer external identifiers.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-external-identifiers-POST.html"
        },
        "operationId": "createCustomerExternalId",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The external identifiers to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalIdentifierCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/external-identifiers/{externalId}": {
      "put": {
        "tags": [
          "External identifiers"
        ],
        "summary": "Update customer external identifier",
        "description": "Updates customer external identifier.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-external-identifiers-PUT.html"
        },
        "operationId": "updateCustomerExternalId",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "externalId",
            "in": "path",
            "description": "The external id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "999900138067059"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The customer external identifier to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalIdentifier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "External identifiers"
        ],
        "summary": "Delete customer external identifiers",
        "description": "Deletes customer external identifier.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-external-identifiers-DELETE.html"
        },
        "operationId": "deleteCustomerExternalId",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "externalId",
            "in": "path",
            "description": "The external id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "999900138067059"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve contacts associated with the customer",
        "description": "Based on the query parm supplied, will return the list of contacts for the given customer id.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-contacts-GET.html"
        },
        "operationId": "getCustomerContacts",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "cursorKey",
            "in": "query",
            "description": "The cursor string indicates where the system of record should start on the next query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "generatedCursorKey"
          },
          {
            "name": "numberRecordsRequested",
            "in": "query",
            "description": "The number of records to be returned in the response.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            },
            "example": 10
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "contactType",
            "in": "query",
            "description": "Indicates whether the contact information requested should be limited to email addresses, phones, postal addresses or social medias",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Phone",
              "enum": [
                "Email",
                "Phone",
                "Postal Address",
                "Social Media"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "Link": {
                "description": "A list of HATEOS links for page navigation.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "total-records-available": {
                "description": "If provided by the system of record, should be the total number of items that matched the search criteria.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Updates contact for the customer",
        "description": "Updates contact for an existing customer",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-contacts-PUT.html"
        },
        "operationId": "updateCustomerContact",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The contact details to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerContactsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Creates a new contact for the customer",
        "description": "Creates a new contact for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-contacts-POST.html"
        },
        "operationId": "createCustomerContact",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The contact details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerContactsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a customer contact",
        "description": "Deletes a existing customer contact",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-contacts-DELETE.html"
        },
        "operationId": "deleteCustomerContact",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "contactType",
            "in": "query",
            "description": "The type of the contact based on the category",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "PhoneNumber",
              "enum": [
                "PostalAddress",
                "PhoneNumber",
                "EmailAddress",
                "SocialMediaAccount"
              ]
            }
          },
          {
            "name": "addressCategory",
            "in": "query",
            "description": "The postal address category",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/AddressCategory"
            }
          },
          {
            "name": "addressType",
            "in": "query",
            "description": "The postal address type",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/AddressType"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The effective date of the postal address",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-01-01"
            }
          },
          {
            "name": "perpetualStartDate",
            "in": "query",
            "description": "Perpetual calendar month and day represented as 01-31 used for identifying the date the postal address, of category seasonal, will be in effect each year",
            "required": false,
            "style": "form",
            "explode": true,
            "allowReserved": true,
            "schema": {
              "pattern": "^(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$",
              "type": "string",
              "example": "01-31"
            }
          },
          {
            "name": "perpetualEndDate",
            "in": "query",
            "description": "Perpetual calendar month and day represented as 01-31 used for identifying the date the postal address, of category seasonal, will no longer be in effect each year",
            "required": false,
            "style": "form",
            "explode": true,
            "allowReserved": true,
            "schema": {
              "pattern": "^(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$",
              "type": "string",
              "example": "01-31"
            }
          },
          {
            "name": "phoneType",
            "in": "query",
            "description": "The phone type",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/PhoneType"
            }
          },
          {
            "name": "emailType",
            "in": "query",
            "description": "The email type",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/EmailType"
            }
          },
          {
            "name": "socialMediaType",
            "in": "query",
            "description": "The social media type",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 1,
              "type": "string",
              "example": "Facebook"
            }
          },
          {
            "name": "socialMediaAccountId",
            "in": "query",
            "description": "The social media account id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 1,
              "type": "string",
              "example": "customer@fisglobal.com"
            }
          },
          {
            "name": "contactSequenceNumber",
            "in": "query",
            "description": "The sequence number of the contact",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/employments": {
      "get": {
        "tags": [
          "Employments"
        ],
        "summary": "Retrieve employment details associated with the customer",
        "description": "Based on the query parm supplied, will return the employement details for the given customer id.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-employments-GET.html"
        },
        "operationId": "getCustomerEmployment",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "cursorKey",
            "in": "query",
            "description": "The cursor string indicates where the system of record should start on the next query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "generatedCursorKey"
          },
          {
            "name": "numberRecordsRequested",
            "in": "query",
            "description": "The number of records to be returned in the response.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            },
            "example": 10
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "employmentType",
            "in": "query",
            "description": "Employment type",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Education",
              "enum": [
                "Education",
                "Service",
                "Service Dependent",
                "Standard"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "Link": {
                "description": "A list of HATEOS links for page navigation.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "total-records-available": {
                "description": "If provided by the system of record, should be the total number of items that matched the search criteria.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "tags": [
          "Employments"
        ],
        "summary": "Update a employment details for the customer",
        "description": "Updates employment details for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-employments-PUT.html"
        },
        "operationId": "updateCustomerEmployment",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The employment details to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmploymentDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEmploymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "tags": [
          "Employments"
        ],
        "summary": "Create a employment details for the customer",
        "description": "Creates employment details for an existing customer",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-employments-POST.html"
        },
        "operationId": "createCustomerEmployment",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The employment details to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmploymentDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEmploymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "Employments"
        ],
        "summary": "Delete a customer employment",
        "description": "Deletes a customer employment record.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-employments-DELETE.html"
        },
        "operationId": "deleteCustomerEmploymentById",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "employment-id",
            "in": "query",
            "description": "Employment id",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "999900087069656"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/tax-information": {
      "get": {
        "tags": [
          "Tax information"
        ],
        "summary": "Retrieve tax details associated with the customer",
        "description": "Based on the query parm supplied, will return the tax details for the given customer id.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-tax-information-GET.html"
        },
        "operationId": "getCustomerTaxInfo",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "primaryTaxIdIndicator",
            "in": "query",
            "description": "The primary tax id to be searched on",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxInformation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "tags": [
          "Tax information"
        ],
        "summary": "Updates a tax details for the customer",
        "description": "Updates tax details for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-tax-information-PUT.html"
        },
        "operationId": "updateCustomerTaxById",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The tax details to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "tags": [
          "Tax information"
        ],
        "summary": "Create tax details for the customer",
        "description": "Creates tax details for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-tax-information-POST.html"
        },
        "operationId": "createCustomerTaxInfo",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The tax details to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "Tax information"
        ],
        "summary": "Delete a customer tax detail",
        "description": "Deletes a customer tax record.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-tax-information-DELETE.html"
        },
        "operationId": "deleteCustomerTaxInfoById",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "protectedTaxIdType",
            "in": "query",
            "description": "Protected tax identifier type or  \"protectedTaxIdType\" (tax identifier type passed in protected params header)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SSN"
            }
          },
          {
            "name": "protectedTaxIdCountryCode",
            "in": "query",
            "description": "Protected tax identifier country code or  \"protectedTaxIdCountryCode\" (tax identifier type passed in protected params header)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "USA"
            }
          },
          {
            "name": "protected-parameters",
            "in": "header",
            "description": "Base64 encoded JSON object containing one or more path or query parameters\n```\n e.g. Base64 of protected account id\n  {\n      \"protectedAccountId\" : \"123456789\"\n  }\n```\n",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "{ \"protectedAccountId\" : \"MTIzNDU2Nzg5\" }"
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/issued-identification": {
      "get": {
        "tags": [
          "Issued identifications"
        ],
        "summary": "Retrieve issue identification details associated with the customer",
        "description": "Based on the query parm supplied, will return the issue identification details for the given customer id",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-issued-identification-GET.html"
        },
        "operationId": "getCustomerIssueId",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "issuedIdType",
            "in": "query",
            "description": "Allows for limiting the output to a specified issued id type  (e.g. Drivers License, Military, National, Occupation, Passport, State, Other)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Passport"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentificationInformation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "tags": [
          "Issued identifications"
        ],
        "summary": "Update issue identification details for the customer",
        "description": "Updates issue identification for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-issued-identification-PUT.html"
        },
        "operationId": "updateCustomerIssueId",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The issue identification details to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentificationInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "tags": [
          "Issued identifications"
        ],
        "summary": "Create issue identification details for the customer",
        "description": "Creates issue identification details for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-issued-identification-POST.html"
        },
        "operationId": "createCustomerIssueId",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The issue identification details to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentificationInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "Issued identifications"
        ],
        "summary": "Delete a customer issue identification detail",
        "description": "Deletes a customer issue identification record.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-issued-identification-DELETE.html"
        },
        "operationId": "deleteCustomerIssueId",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "protectedIssuedIdType",
            "in": "query",
            "description": "Protected documentary issued id type or  \"protectedIssuedIdType\" (issued id type passed in protected params header)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Passport"
            }
          },
          {
            "name": "protectedIssuedBy",
            "in": "query",
            "description": "Protected issued by or  \"protectedIssuedBy\" (issued by passed in protected params header)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Admin"
            }
          },
          {
            "name": "protected-parameters",
            "in": "header",
            "description": "Base64 encoded JSON object containing one or more path or query parameters\n```\n e.g. Base64 of protected account id\n  {\n      \"protectedAccountId\" : \"123456789\"\n  }\n```\n",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "{ \"protectedAccountId\" : \"MTIzNDU2Nzg5\" }"
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/names": {
      "get": {
        "tags": [
          "Names"
        ],
        "summary": "Retrieve name details associated with the customer",
        "description": "Based on the query parm supplied, will return the name details for the given customer id.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-names-GET.html"
        },
        "operationId": "getCustomerName",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "cursorKey",
            "in": "query",
            "description": "The cursor string indicates where the system of record should start on the next query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "generatedCursorKey"
          },
          {
            "name": "numberRecordsRequested",
            "in": "query",
            "description": "The number of records to be returned in the response.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            },
            "example": 10
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Name Type. Identifies the type of name for the customer",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Alternate, DBA, Primary"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "Link": {
                "description": "A list of HATEOS links for page navigation.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "total-records-available": {
                "description": "If provided by the system of record, should be the total number of items that matched the search criteria.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Names"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "tags": [
          "Names"
        ],
        "summary": "Update a name details for the customer",
        "description": "Updates name for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-names-PUT.html"
        },
        "operationId": "updateCustomerName",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The name details to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Names"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "tags": [
          "Names"
        ],
        "summary": "Create a name details for the customer",
        "description": "Creates name details for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-names-POST.html"
        },
        "operationId": "createCustomerName",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The name details to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Names"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "Names"
        ],
        "summary": "Delete a customer name detail",
        "description": "Deletes a customer name record.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-names-DELETE.html"
        },
        "operationId": "deleteCustomerName",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Name type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Alternate, DBA, Primary"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/attributes": {
      "get": {
        "tags": [
          "Attributes"
        ],
        "summary": "Retrieve attribute details associated with the customer",
        "description": "Based on the query parm supplied, will return the attributes details for the given customer id.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-attributes-GET.html"
        },
        "operationId": "getCustomerAttribute",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "cursorKey",
            "in": "query",
            "description": "The cursor string indicates where the system of record should start on the next query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "generatedCursorKey"
          },
          {
            "name": "numberRecordsRequested",
            "in": "query",
            "description": "The number of records to be returned in the response.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            },
            "example": 10
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "Link": {
                "description": "A list of HATEOS links for page navigation.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "total-records-available": {
                "description": "If provided by the system of record, should be the total number of items that matched the search criteria.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attributes"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "tags": [
          "Attributes"
        ],
        "summary": "Update attribute details for the customer",
        "description": "Updates attributes for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-attributes-PUT.html"
        },
        "operationId": "updateCustomerAttribute",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The attribute details to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attributes"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "tags": [
          "Attributes"
        ],
        "summary": "Creates attribute details for the customer",
        "description": "Creates attributes for a customer.",
        "operationId": "createCustomerAttribute",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The attribute details to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attributes"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "Attributes"
        ],
        "summary": "Delete a customer attribute detail",
        "description": "Deletes a customer attribute.",
        "operationId": "deleteCustomerAttribute",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "attributeId",
            "in": "query",
            "description": "The attribute id for customer",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "999900053002439"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/attributes/{attributeId}": {
      "get": {
        "tags": [
          "Attributes"
        ],
        "summary": "Retrieve attribute details associated with the customer",
        "description": "Based on the query parm supplied, will return the attribute details for the given customer id.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-attributes-2-GET.html"
        },
        "operationId": "getCustomerAttributeDetail",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "attributeId",
            "in": "path",
            "description": "Attribute id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "example": 999900014002997
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attribute"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/due-diligence": {
      "get": {
        "tags": [
          "Due diligence"
        ],
        "summary": "Retrieve due diligence details associated with the customer",
        "description": "Based on the query parm supplied, will return the due diligence details for the given customer id.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-due-diligence-GET.html"
        },
        "operationId": "getCustomerDueDiligence",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "moneyServiceIndicator",
            "in": "query",
            "description": "Indicates whether to include customer's money services information",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DueDiligence"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "tags": [
          "Due diligence"
        ],
        "summary": "Update a due diligence details for the customer",
        "description": "Updates customer due diligence record for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-due-diligence-PUT.html"
        },
        "operationId": "updateCustomerDueDiligence",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The customer record to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DueDiligence"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "tags": [
          "Due diligence"
        ],
        "summary": "Create due diligence details for the customer",
        "description": "Create customer due diligence record for customer.",
        "operationId": "createCustomerDueDiligence",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The customer record to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DueDiligence"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "Due diligence"
        ],
        "summary": "Delete a customer due diligence",
        "description": "Deletes a customer due diligence",
        "operationId": "deleteCustomerDueDiligence",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "riskRatingType",
            "in": "query",
            "description": "Risk Rating Type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "RiskType"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/due-diligence/affiliations": {
      "post": {
        "tags": [
          "Due diligence"
        ],
        "summary": "Create due diligence affiliation for the customer",
        "description": "Create customer due diligence affiliation for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-due-diligence-affiliations-POST.html"
        },
        "operationId": "createCustomerDueDiligenceAffiliation",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The customer affiliation to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Affiliations"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "Due diligence"
        ],
        "summary": "Delete a customer affiliation",
        "description": "Deletes a customer affiliation.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-due-diligence-affiliations-DELETE.html"
        },
        "operationId": "deleteCustomerDueDiligenceAffiliation",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Affiliation name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "FIS"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Affiliation start date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-01-01"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Affiliation end date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-01-01"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/common-demographics": {
      "get": {
        "tags": [
          "Common demographics"
        ],
        "summary": "Retrieve common demographic details associated with the customer",
        "description": "Based on the query parm supplied, will return the common demographic details for the given customer id.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-common-demographics-GET.html"
        },
        "operationId": "getCustomerCommonDemographic",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "Link": {
                "description": "A list of HATEOS links for page navigation.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "total-records-available": {
                "description": "If provided by the system of record, should be the total number of items that matched the search criteria.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonDemographicDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "tags": [
          "Common demographics"
        ],
        "summary": "Update a common demographics details for the customer",
        "description": "Updates common demographics details for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-common-demographics-PUT.html"
        },
        "operationId": "updateCustomerCommonDemographic",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The common demographics details to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommonDemographicDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "tags": [
          "Common demographics"
        ],
        "summary": "Create common demographic details for the customer",
        "description": "Creates common demographics details for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-common-demographics-POST.html"
        },
        "operationId": "createCustomerCommonDemographic",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The common demographics details to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommonDemographicDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "Common demographics"
        ],
        "summary": "Delete a customer common demographics",
        "description": "Deletes customer common demographics.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-common-demographics-DELETE.html"
        },
        "operationId": "deleteCustomerCommonDemographics",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "demographic",
            "in": "query",
            "description": "Demographic type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Branch"
            }
          },
          {
            "name": "demographicId",
            "in": "query",
            "description": "Demographic id to be deleted",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1000"
            }
          },
          {
            "name": "roleType",
            "in": "query",
            "description": "The type of officer association",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Primary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/individual-demographics": {
      "get": {
        "tags": [
          "Individual demographics"
        ],
        "summary": "Retrieve individual demographic details associated with the customer",
        "description": "Based on the query parm supplied, will return the individual demographic details for the given customer id.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-individual-demographics-GET.html"
        },
        "operationId": "getCustomerIndividualDemographic",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "Link": {
                "description": "A list of HATEOS links for page navigation.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "total-records-available": {
                "description": "If provided by the system of record, should be the total number of items that matched the search criteria.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualDemographicsInformation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "tags": [
          "Individual demographics"
        ],
        "summary": "Update a individual demographics details for the customer",
        "description": "Updates individual demographics details for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-individual-demographics-PUT.html"
        },
        "operationId": "updateCustomerIndividualDemographic",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The individual demographics details to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndividualDemographicsInformation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "tags": [
          "Individual demographics"
        ],
        "summary": "Create a individual demographic details for the customer",
        "description": "Creates individual demographics details for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-individual-demographics-POST.html"
        },
        "operationId": "createCustomerIndividualDemographic",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The individual demographics details to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndividualDemographicDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "Individual demographics"
        ],
        "summary": "Delete a customer individual demographics",
        "description": "Deletes customer individual demographics.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-individual-demographics-DELETE.html"
        },
        "operationId": "deleteCustomerIndividualDemographics",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "citizenshipCountryCode",
            "in": "query",
            "description": "Identifies the country in which the Involved Party is a citizen.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 3,
              "minimum": 3,
              "type": "string",
              "example": "USA"
            }
          },
          {
            "name": "citizenshipStatus",
            "in": "query",
            "description": "Identifies the citizenship status of the customer",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Other"
            }
          },
          {
            "name": "residentIndicator",
            "in": "query",
            "description": "Indicates whether the involved party is a resident of the country",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "citizenshipStartDate",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-01-01"
            }
          },
          {
            "name": "citizenshipEndDate",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2030-01-01"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/census": {
      "put": {
        "tags": [
          "Other details"
        ],
        "summary": "Update a customer census details for the customer",
        "description": "Update customer census details for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-census-PUT.html"
        },
        "operationId": "updateCustomerCensus",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The customer census record to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Census"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/income": {
      "put": {
        "tags": [
          "Other details"
        ],
        "summary": "Update a customer income details for the customer",
        "description": "Update customer income details for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-income-PUT.html"
        },
        "operationId": "updateCustomerIncome",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The customer income record to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Income"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/preference": {
      "put": {
        "tags": [
          "Other details"
        ],
        "summary": "Update a customer preference details for the customer",
        "description": "Update customer preference details for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-preference-PUT.html"
        },
        "operationId": "updateCustomerPreference",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The customer preference record to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Preference"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/life-cycle-status": {
      "put": {
        "tags": [
          "Other details"
        ],
        "summary": "Update a customer life cycle status details for the customer",
        "description": "Update customer life cycle status details for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-life-cycle-status-PUT.html"
        },
        "operationId": "updateCustomerLifeCycleStatus",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The customer life cycle record to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LifecycleStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/communication-preferences": {
      "get": {
        "tags": [
          "Communication Preferences"
        ],
        "summary": "Retrieve communication preferences associated with the customer",
        "description": "Based on the query parm supplied, will return the communication preferences details for the given customer id.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-communication-preferences-GET.html"
        },
        "operationId": "getCustomerCommunicationPreference",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationPreferences"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "tags": [
          "Communication Preferences"
        ],
        "summary": "Update a communication preferences for the customer",
        "description": "Updates communication preference for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-communication-preferences-PUT.html"
        },
        "operationId": "updateCustomerCommunicationPreferences",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The communication preference to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCommunicationPreference"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/notification-preferences": {
      "post": {
        "tags": [
          "Communication Preferences"
        ],
        "summary": "Create a communication preference notification for the customer",
        "description": "Creates a communication preference notification for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-notification-preferences-POST.html"
        },
        "operationId": "createCustomerCommunicationPreferencesNotification",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The communication preference notification create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationPreferenceNotificationList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "Communication Preferences"
        ],
        "summary": "Delete a customer communication preference notification",
        "description": "Delete a customer communication preference notification.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-notification-preferences-DELETE.html"
        },
        "operationId": "deleteCustomerCommunicationPreferenceNotification",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "communicationPreferenceType",
            "in": "query",
            "description": "The communication preference type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "ADA Large Print, Direct Mail Maintenance"
            }
          },
          {
            "name": "notificationType",
            "in": "query",
            "description": "The communication preference notification type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "10001"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/contact-preferences": {
      "put": {
        "tags": [
          "Communication Preferences"
        ],
        "summary": "Update a preferred contact for the customer",
        "description": "Updates a preferred contact for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-contact-preferences-PUT.html"
        },
        "operationId": "updateCustomerPreferredContact",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The preferred contact update request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactPreferences"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "tags": [
          "Communication Preferences"
        ],
        "summary": "Create a preferred contact for the customer",
        "description": "Creates a preferred contact for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-contact-preferences-POST.html"
        },
        "operationId": "createCustomerPreferredContact",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The preferred contact create request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactPreferences"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "Communication Preferences"
        ],
        "summary": "Delete a preferred contact",
        "description": "Deletes a customer preferred contact.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-contact-preferences-DELETE.html"
        },
        "operationId": "deleteCustomerPreferredContact",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "deliveryType",
            "in": "query",
            "description": "Contact delivery type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Phone",
              "enum": [
                "Phone",
                "Text",
                "Email",
                "PostalAddress",
                "SocialMedia"
              ]
            }
          },
          {
            "name": "contactSequenceNumber",
            "in": "query",
            "description": "Order of the contact entity",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The effective date of the postal address",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-01-01"
            }
          },
          {
            "name": "contactType",
            "in": "query",
            "description": "Contact reference type (based on delivery type)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Home"
            }
          },
          {
            "name": "contactCode",
            "in": "query",
            "description": "Contact reference type (based on delivery type)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Home"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/restrictions": {
      "get": {
        "tags": [
          "Restrictions"
        ],
        "summary": "Retrieve restrictions details associated with the customer",
        "description": "Based on the query parm supplied, will return the restrictions details for the given customer id.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-restrictions-GET.html"
        },
        "operationId": "getCustomerRestrictions",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "List of comma separated values of the aggregate structure contents desired in the response; if not specified all are returned. Valid values include Current, Future, History, or All",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Current"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Restrictions"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "tags": [
          "Restrictions"
        ],
        "summary": "Update a restrictions for the customer",
        "description": "Updates restrictions for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-restrictions-PUT.html"
        },
        "operationId": "updateCustomerRestrictions",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The restrictions to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Restrictions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "tags": [
          "Restrictions"
        ],
        "summary": "Create a restrictions for the customer",
        "description": "Creates restrictions for an existing customer.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-restrictions-POST.html"
        },
        "operationId": "createCustomerRestriction",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The restrictions to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Restrictions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "tags": [
          "Restrictions"
        ],
        "summary": "Delete a customer restriction",
        "description": "Deletes a customer restriction.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-restrictions-DELETE.html"
        },
        "operationId": "deleteCustomerRestriction",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-01-01"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2030-01-01"
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Restriction value",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Debit card statement"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "description": "Restriction comment",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "comment"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/fatca-details": {
      "get": {
        "tags": [
          "Foreign Account Tax Compliance Act (Fatca) details"
        ],
        "summary": "Retrieve the fatca details for the customer",
        "description": "Based on the query parm supplied, will return the fatca details for the given customer id.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-fatca-details-GET.html"
        },
        "operationId": "getCustomerFatcaDetails",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FatcaDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "tags": [
          "Foreign Account Tax Compliance Act (Fatca) details"
        ],
        "summary": "Update the fatca details for the customer.",
        "description": "Updates the fatca details for an existing customer",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-fatca-details-PUT.html"
        },
        "operationId": "updateCustomerFatcaDetails",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The fatca details to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FatcaDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/customers/{customerId}/identity-verification": {
      "get": {
        "tags": [
          "Identity Verification"
        ],
        "summary": "Retrieve list of verification attributes for the customer",
        "description": "Based on the query parm supplied, this will return the list of verification attributes  configured at FE level which is used to verify the given customer id",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-identity-verification-GET.html"
        },
        "operationId": "getCustomerIdentityVerification",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityVerificationList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "tags": [
          "Identity Verification"
        ],
        "summary": "Update the verification information for the customer.",
        "description": "Updates the verification information, such as date of birth or tax ID, that were gathered from the customer during a customer contact situation.",
        "externalDocs": {
          "description": "API Documentation available at below link",
          "url": "${docs_base_url}/MBP-Customer-v1-customers-identity-verification-PUT.html"
        },
        "operationId": "updateCustomerIdentityVerification",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines which language sets are accepted.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "en-US"
          },
          {
            "name": "organization-id",
            "in": "header",
            "description": "FIS processing organization ID - the fe/orgId the consumer is focused upon",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "client-metadata",
            "in": "header",
            "description": "Client metadata.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "{ \"metadata\" : true }"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "Unique request identifier (generated by channelServices server if not provided)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 36,
              "minLength": 36,
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "type": "string"
            },
            "example": "22585e06-3da4-427e-a4e3-0ad5cd3f0fe9"
          },
          {
            "name": "device-id",
            "in": "header",
            "description": "The device IP address from which the transaction request is originated.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "127.0.0.1"
          },
          {
            "name": "branch-organization-id",
            "in": "header",
            "description": "The unique identifier used to identify the organization unit (OU) within org.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": 1000
          },
          {
            "name": "activity-id",
            "in": "header",
            "description": "Service consumer defined, used for tracking purposes.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "minLength": 1,
              "type": "string"
            },
            "example": "myActivityId"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customer id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "70000000000"
            }
          },
          {
            "name": "processorName",
            "in": "query",
            "description": "The processor name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          },
          {
            "name": "applicationName",
            "in": "query",
            "description": "The application name of the external system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "example": "External"
            }
          }
        ],
        "requestBody": {
          "description": "The verification information to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityVerificationList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Info-Messages": {
                "description": "Array of additional info messages in the format\n```\n[\n  {\n    \"code\" : \"MessageCode\",\n    \"message\" : \"The info message\",\n    \"service\" : \"ServiceName\",\n    \"parameters\" : [{\n      \"type\" : \"string\", \n      \"code\": \"string\",\n      \"value\" : \"string\", \n      \"valueCode\" : \"string\"}]\n  }\n]\n```\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "Failure response with no body"
          }
        },
        "security": [
          {
            "default": []
          }
        ],
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    }
  },
  "components": {
    "schemas": {
      "Customer": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "The unique customer identifier.",
            "readOnly": true,
            "example": "70000000000"
          },
          "commonDemographics": {
            "$ref": "#/components/schemas/CommonDemographics"
          },
          "individualDemographics": {
            "$ref": "#/components/schemas/IndividualDemographics"
          },
          "organizationDemographics": {
            "$ref": "#/components/schemas/OrganizationDemographicsInfo"
          },
          "dueDiligence": {
            "$ref": "#/components/schemas/DueDiligence"
          },
          "verificationStatus": {
            "$ref": "#/components/schemas/VerificationStatus"
          }
        },
        "description": "The customer"
      },
      "CreateCustomer": {
        "required": [
          "commonDemographics"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "The unique customer identifier.",
            "readOnly": true,
            "example": "70000000000"
          },
          "commonDemographics": {
            "$ref": "#/components/schemas/CommonDemographicsInfo"
          },
          "individualDemographics": {
            "$ref": "#/components/schemas/IndividualDemographicsInfo"
          },
          "organizationDemographics": {
            "$ref": "#/components/schemas/OrganizationDemographicsDetails"
          }
        },
        "description": "The customer"
      },
      "CommonDemographicsInfo": {
        "required": [
          "customerType"
        ],
        "type": "object",
        "properties": {
          "customerStatus": {
            "type": "string",
            "description": "The state of the customer",
            "example": "Open",
            "enum": [
              "Open",
              "Closed"
            ]
          },
          "customerType": {
            "$ref": "#/components/schemas/CustomerTypeEnum"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/ExternalIdentifierInfo"
          },
          "openDate": {
            "type": "string",
            "description": "Date the customer record was opened.",
            "format": "date",
            "example": "2020-01-01"
          },
          "closeDate": {
            "type": "string",
            "description": "Date the customer record was closed.",
            "format": "date",
            "example": "2020-01-01"
          },
          "ownRentCode": {
            "type": "string",
            "description": "Indicates whether the customer's principal residence ownership or rental.",
            "example": "Own"
          },
          "ownRentCodeDescription": {
            "type": "string",
            "description": "Description of the customer's residence ownership or rental",
            "readOnly": true,
            "example": "Own"
          },
          "regionCode": {
            "type": "string",
            "description": "Identifies the designated region.",
            "example": "Domestic"
          },
          "regionCodeDescription": {
            "type": "string",
            "description": "Description of the designated region",
            "readOnly": true,
            "example": "Domestic Text"
          },
          "basedInCountry": {
            "$ref": "#/components/schemas/BasedInCountryInfo"
          },
          "customerSegmentInfomation": {
            "$ref": "#/components/schemas/CustomerSegmentInfo"
          },
          "customerRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerRoleInfo"
            }
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Name"
            }
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ContactInfo"
          },
          "officers": {
            "type": "array",
            "description": "Contains customer officer information.",
            "items": {
              "$ref": "#/components/schemas/OfficerInfo"
            }
          },
          "branches": {
            "type": "array",
            "description": "Contains customer branch information",
            "items": {
              "$ref": "#/components/schemas/BranchInfo"
            }
          }
        },
        "description": "Defines the demographic fields that relate to any type of customer."
      },
      "CommonDemographics": {
        "required": [
          "customerType"
        ],
        "type": "object",
        "properties": {
          "customerStatus": {
            "type": "string",
            "description": "The state of the customer",
            "example": "Open",
            "enum": [
              "Open",
              "Closed"
            ]
          },
          "customerType": {
            "$ref": "#/components/schemas/CustomerTypeEnum"
          },
          "externalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalIdentifierInfo"
            }
          },
          "customerRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerRole"
            }
          },
          "openDate": {
            "type": "string",
            "description": "Date the customer record was opened.",
            "format": "date",
            "example": "2020-01-01"
          },
          "closeDate": {
            "type": "string",
            "description": "Date the customer record was closed.",
            "format": "date",
            "example": "2030-01-01"
          },
          "closeReason": {
            "type": "string",
            "description": "Reason the customer record was closed.",
            "example": "BankInitiated"
          },
          "closeReasonDescription": {
            "type": "string",
            "description": "The description details for losing the customer",
            "readOnly": true,
            "example": "BankInitiated"
          },
          "lastContactDate": {
            "type": "string",
            "description": "Date the institution last had contact with the customer.",
            "format": "date",
            "example": "2020-01-01"
          },
          "lastContactType": {
            "type": "string",
            "description": "The type of contact last made with the customer.",
            "example": "Phone"
          },
          "ownRentCode": {
            "type": "string",
            "description": "Indicates whether the customer's principal residence ownership or rental.",
            "example": "Own"
          },
          "ownRentCodeDescription": {
            "type": "string",
            "description": "Description of the customer's residence ownership or rental",
            "readOnly": true,
            "example": "Own"
          },
          "bankSectorCode": {
            "type": "string",
            "description": "Identifies the banking sector assigned to the involved party as defined by the financial entity.",
            "example": "Retail"
          },
          "bankSectorDescription": {
            "type": "string",
            "description": "Description of the bank sector code.",
            "readOnly": true,
            "example": "Retail Banking"
          },
          "regionCode": {
            "type": "string",
            "description": "Identifies the designated region.",
            "example": "Domestic"
          },
          "regionCodeDescription": {
            "type": "string",
            "description": "Description of the designated region",
            "readOnly": true,
            "example": "Domestic Text"
          },
          "legalStatus": {
            "type": "string",
            "description": "Contains the identification of the legal status of an Involved Party as defined by the financial entity.",
            "example": "Liquidation"
          },
          "legalStatusDescription": {
            "type": "string",
            "description": "Description of the legal status of an Involved Party.",
            "readOnly": true,
            "example": "Creditors' Voluntary Liquidation"
          },
          "preferredLanguage": {
            "type": "string",
            "description": "The customer's preferred language.",
            "example": "en-US"
          },
          "basedInCountry": {
            "$ref": "#/components/schemas/BasedInCountryInfo"
          },
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxInfo"
            }
          },
          "customerSegmentInfomation": {
            "$ref": "#/components/schemas/CustomerSegmentInfo"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Name"
            }
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ContactInfo"
          },
          "census": {
            "$ref": "#/components/schemas/Census"
          },
          "officers": {
            "type": "array",
            "description": "Contains customer officer information.",
            "items": {
              "$ref": "#/components/schemas/OfficerInfo"
            }
          },
          "branches": {
            "type": "array",
            "description": "Contains customer branch information",
            "items": {
              "$ref": "#/components/schemas/BranchInfo"
            }
          },
          "identifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentificationInfo"
            }
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          }
        },
        "description": "Defines the demographic fields that relate to any type of customer."
      },
      "ExternalIdentifierInfo": {
        "required": [
          "applicationName",
          "externalId",
          "processorName"
        ],
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "External identifier of the customer",
            "example": "999900138067059"
          },
          "processorName": {
            "type": "string",
            "description": "The processor name of the external system",
            "example": "External"
          },
          "applicationName": {
            "type": "string",
            "description": "The application name of the external system",
            "example": "External"
          }
        },
        "description": "Defines external identification of the customer"
      },
      "IndividualDemographicsInfo": {
        "type": "object",
        "properties": {
          "birthDate": {
            "type": "string",
            "description": "Date of birth of the customer",
            "format": "date",
            "example": "1975-01-01"
          },
          "deathDate": {
            "type": "string",
            "description": "The date that the individual was deceased.",
            "format": "date",
            "example": "9999-01-01"
          },
          "gender": {
            "type": "string",
            "description": "The gender of the individual customer.",
            "example": "Female",
            "enum": [
              "Male",
              "Female",
              "Unknown"
            ]
          },
          "ethnicity": {
            "type": "string",
            "description": "The individual's ethnic heritage.",
            "example": "Other"
          },
          "maritalStatus": {
            "type": "string",
            "description": "The marital status of the individual customer.",
            "example": "Single",
            "enum": [
              "Divorced",
              "Married",
              "Separated",
              "Single",
              "Widow",
              "Other"
            ]
          },
          "educationLevel": {
            "type": "string",
            "description": "Furthest education level completed. (E.g. High School, Associate Degree, College Degree, Masters, PhD, 8th Grade, 12th Grade, etc.)",
            "example": "High School"
          },
          "numberDependents": {
            "type": "number",
            "description": "The customer's number of dependents.",
            "example": 2
          },
          "occupation": {
            "$ref": "#/components/schemas/OccupationInfo"
          },
          "citizenships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CitizenshipInfo"
            }
          }
        },
        "description": "Defines the demographic fields related to an individual customer."
      },
      "IndividualDemographicsInformation": {
        "type": "object",
        "properties": {
          "birthDate": {
            "type": "string",
            "description": "Date of birth of the customer",
            "format": "date",
            "example": "1975-01-01"
          },
          "deathDate": {
            "type": "string",
            "description": "The date that the individual was deceased.",
            "format": "date",
            "example": "9999-01-01"
          },
          "gender": {
            "type": "string",
            "description": "The gender of the individual customer.",
            "example": "Female",
            "enum": [
              "Male",
              "Female",
              "Unknown"
            ]
          },
          "ethnicity": {
            "type": "string",
            "description": "The individual's ethnic heritage.",
            "example": "Other"
          },
          "maritalStatus": {
            "type": "string",
            "description": "The marital status of the individual customer.",
            "example": "Single",
            "enum": [
              "Divorced",
              "Married",
              "Separated",
              "Single",
              "Widow",
              "Other"
            ]
          },
          "educationLevel": {
            "type": "string",
            "description": "Furthest education level completed. (E.g. High School, Associate Degree, College Degree, Masters, PhD, 8th Grade, 12th Grade, etc.)",
            "example": "High School"
          },
          "numberDependents": {
            "type": "number",
            "description": "The customer's number of dependents.",
            "example": 2
          },
          "birthCountryCode": {
            "type": "string",
            "description": "Identifies the country code in which the involved party is born.",
            "example": "USA"
          },
          "birthCountryName": {
            "type": "string",
            "description": "Name of the Country code in which Involved Party is born.",
            "readOnly": true,
            "example": "United States of America"
          },
          "occupation": {
            "$ref": "#/components/schemas/OccupationInfo"
          },
          "citizenships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CitizenshipInfo"
            }
          }
        },
        "description": "Defines the demographic fields related to an individual customer."
      },
      "UpdateCustomer": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "The unique customer identifier.",
            "readOnly": true,
            "example": "70000000000"
          },
          "commonDemographics": {
            "$ref": "#/components/schemas/CustomerCommonDemographicsUpdate"
          },
          "organizationDemographics": {
            "$ref": "#/components/schemas/OrganizationDemographics"
          },
          "verificationStatus": {
            "$ref": "#/components/schemas/VerificationStatus"
          }
        },
        "description": "The customer"
      },
      "CustomerCommonDemographicsUpdate": {
        "type": "object",
        "properties": {
          "customerStatus": {
            "type": "string",
            "description": "The state of the customer",
            "example": "Open",
            "enum": [
              "Open",
              "Closed"
            ]
          },
          "customerType": {
            "$ref": "#/components/schemas/CustomerTypeEnum"
          },
          "openDate": {
            "type": "string",
            "description": "Date the customer record was opened.",
            "format": "date",
            "example": "2020-01-01"
          },
          "closeDate": {
            "type": "string",
            "description": "Date the customer record was closed.",
            "format": "date",
            "example": "9999-01-01"
          },
          "ownRentCode": {
            "type": "string",
            "description": "Indicates whether the customer's principal residence ownership or rental.",
            "example": "Own"
          },
          "ownRentCodeDescription": {
            "type": "string",
            "description": "Description of the customer's residence ownership or rental",
            "readOnly": true,
            "example": "Own"
          },
          "bankSectorCode": {
            "type": "string",
            "description": "Identifies the banking sector assigned to the involved party as defined by the financial entity.",
            "example": "Retail"
          },
          "bankSectorDescription": {
            "type": "string",
            "description": "Description of the Bank Sector Code.",
            "readOnly": true,
            "example": "Retail Banking"
          },
          "regionCode": {
            "type": "string",
            "description": "Identifies the designated region.",
            "example": "Domestic"
          },
          "regionCodeDescription": {
            "type": "string",
            "description": "Description of the designated region",
            "readOnly": true
          },
          "legalStatus": {
            "type": "string",
            "description": "Contains the identification of the legal status of an Involved Party as defined by the financial entity.",
            "example": "Liquidation"
          },
          "legalStatusDescription": {
            "type": "string",
            "description": "Description of the legal status of an Involved Party.",
            "readOnly": true,
            "example": "Creditors' Voluntary Liquidation"
          },
          "basedInCountry": {
            "$ref": "#/components/schemas/BasedInCountryInfo"
          },
          "customerSegmentInfomation": {
            "$ref": "#/components/schemas/CustomerSegmentInfo"
          },
          "customerRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerRoleInfo"
            }
          }
        }
      },
      "IndividualDemographics": {
        "type": "object",
        "properties": {
          "birthDate": {
            "type": "string",
            "description": "Date of birth of the customer",
            "format": "date",
            "example": "1975-01-01"
          },
          "deathDate": {
            "type": "string",
            "description": "The date that the individual was deceased.",
            "format": "date",
            "example": "9999-01-01"
          },
          "gender": {
            "type": "string",
            "description": "The gender of the individual customer.",
            "example": "Female",
            "enum": [
              "Male",
              "Female",
              "Unknown"
            ]
          },
          "ethnicity": {
            "type": "string",
            "description": "The individual's ethnic heritage."
          },
          "annualIncomeLevel": {
            "$ref": "#/components/schemas/Amount_1"
          },
          "maritalStatus": {
            "type": "string",
            "description": "The marital status of the individual customer.",
            "example": "Single",
            "enum": [
              "Divorced",
              "Married",
              "Separated",
              "Single",
              "Widow",
              "Other"
            ]
          },
          "educationLevel": {
            "type": "string",
            "description": "Furthest education level completed. (E.g. High School, Associate Degree, College Degree, Masters, PhD, 8th Grade, 12th Grade, etc.)",
            "example": "High School"
          },
          "numberDependents": {
            "type": "number",
            "description": "The customer's number of dependents.",
            "example": 2
          },
          "birthCountryCode": {
            "type": "string",
            "description": "Identifies the country code in which the Involved Party is born.",
            "example": "USA"
          },
          "birthCountryName": {
            "type": "string",
            "description": "Name of the country code in which involved party is born.",
            "readOnly": true,
            "example": "United States of America"
          },
          "occupation": {
            "$ref": "#/components/schemas/OccupationInfo"
          },
          "employmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentDetail"
            }
          },
          "citizenships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CitizenshipInfo"
            }
          }
        },
        "description": "Defines the demographic fields related to an individual customer."
      },
      "OrganizationDemographicsDetails": {
        "type": "object",
        "properties": {
          "businessType": {
            "type": "string",
            "description": "The classification on the type of business",
            "example": "401BT"
          },
          "foundedDate": {
            "type": "string",
            "description": "Date of inception of the Organization",
            "format": "date",
            "example": "1975-01-01"
          },
          "numberEmployees": {
            "type": "string",
            "description": "The number of employees.",
            "example": "100"
          },
          "annualSalesDetails": {
            "$ref": "#/components/schemas/AnnualSalesDetailsInfo"
          }
        },
        "description": "Defines the demographic fields related to an organization customer."
      },
      "OrganizationDemographics": {
        "type": "object",
        "properties": {
          "businessType": {
            "type": "string",
            "description": "The classification on the type of business",
            "example": "401BT"
          },
          "foundedDate": {
            "type": "string",
            "description": "Date of inception of the Organization",
            "format": "date",
            "example": "1975-01-01"
          },
          "numberEmployees": {
            "type": "string",
            "description": "The number of employees.",
            "example": "100"
          },
          "industryCode": {
            "type": "string",
            "description": "Contains a classification of a commercial customer into business purpose categories.",
            "example": "NAICS â€“ North American Industry Classification Code"
          },
          "industryDescripton": {
            "type": "string",
            "description": "Description of the Industry Code.",
            "readOnly": true,
            "example": "NAICS 44-45"
          },
          "annualSalesDetails": {
            "$ref": "#/components/schemas/AnnualSalesDetailsInfo"
          }
        },
        "description": "Defines the demographic fields related to an organization customer."
      },
      "OrganizationDemographicsInfo": {
        "type": "object",
        "properties": {
          "businessType": {
            "type": "string",
            "description": "The classification on the type of business",
            "example": "401BT"
          },
          "foundedDate": {
            "type": "string",
            "description": "Date of inception of the Organization",
            "format": "date",
            "example": "1975-01-01"
          },
          "numberEmployees": {
            "type": "string",
            "description": "The number of employees.",
            "example": "100"
          },
          "industryCode": {
            "type": "string",
            "description": "Contains a classification of a commercial customer into business purpose categories.",
            "example": "NAICS â€“ North American Industry Classification Code"
          },
          "industryDescripton": {
            "type": "string",
            "description": "Description of the Industry Code.",
            "readOnly": true,
            "example": "NAICS 44-45"
          },
          "annualIncomeAmount": {
            "type": "number",
            "description": "Contains the income the involved party receives within a year. Income is the sum of all the wages, salaries, profits, interest payments, rents, and other forms of earnings received.",
            "format": "double",
            "example": 100
          },
          "annualIncomeCurrencyCode": {
            "type": "string",
            "description": "The ISO currency code defining the currency associated with the amount.",
            "example": "USD"
          },
          "annualIncomeDate": {
            "type": "string",
            "description": "The date associated with the amount.",
            "format": "date",
            "example": "2020-01-01"
          },
          "annualSalesDetails": {
            "$ref": "#/components/schemas/AnnualSalesDetailsInfo"
          }
        },
        "description": "Defines the demographic fields related to an organization customer."
      },
      "EmploymentDetails": {
        "type": "object",
        "properties": {
          "employmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentDetail"
            }
          }
        }
      },
      "EmploymentDetail": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "employmentId": {
            "type": "string",
            "description": "The unique system identifier associated to this employer record.",
            "example": "999900087069656"
          },
          "startDate": {
            "type": "string",
            "description": "The date the individual began his/her employment with the employer.",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "The date the individual ended his/her employment with the employer.",
            "format": "date",
            "example": "2020-01-01"
          },
          "type": {
            "type": "string",
            "description": "Identifies the type of employment record.  Education indicates that the customer is in college or university.  Service indicates that the customer is in the military service or is in a service employment protected under the SCRA regulations.  Standard Employment is any other employment a customer may have.",
            "example": "Education",
            "enum": [
              "Education",
              "Service",
              "Service Dependent",
              "Standard"
            ]
          },
          "serviceDependentInfo": {
            "$ref": "#/components/schemas/ServiceDependentInfo"
          },
          "employerName": {
            "type": "string",
            "description": "Identifies the name of the individual's employer.",
            "example": "FISGLOBAL"
          },
          "employmentPosition": {
            "type": "string",
            "description": "Identifies the position or title of the individual",
            "example": "Manager"
          },
          "selfEmployedIndicator": {
            "type": "boolean",
            "description": "Indicates whether the customer is self-employed.",
            "example": false
          },
          "currentSalary": {
            "$ref": "#/components/schemas/Amount_1"
          },
          "salaryFrequency": {
            "type": "string",
            "description": "Identifies the frequency at which the employee receives the salary.",
            "example": "Monthly",
            "enum": [
              "Biweekly",
              "Annually",
              "Monthly",
              "Semimonthly",
              "Weekly"
            ]
          },
          "employmentStatus": {
            "type": "string",
            "description": "The employment status of the individual (e.g. Employed, Leave of Absence, Not Employed, Retired).",
            "example": "Employed"
          },
          "educationalInstituteName": {
            "type": "string",
            "description": "Identifies the name of the institution of higher learning that the student is attending.",
            "example": "FIS U"
          },
          "serviceEmploymentDetail": {
            "$ref": "#/components/schemas/ServiceEmploymentDetails"
          }
        },
        "description": "Contains information related to an individual's employment history."
      },
      "ServiceDependentInfo": {
        "type": "object",
        "properties": {
          "customerId": {
            "minimum": 0,
            "type": "integer",
            "description": "Service dependent customer id",
            "example": 70000000000
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/ExternalIdentifierInfo"
          }
        },
        "description": "Contains the identification of the service member for which the customer is a dependent. To be provided only when type is \"Service Dependent\" . Either customerId or externalIdentifier to be provided"
      },
      "DueDiligence": {
        "type": "object",
        "properties": {
          "completedDate": {
            "type": "string",
            "description": "The date the due diligence information was collected.",
            "format": "date",
            "example": "9999-01-01"
          },
          "comment": {
            "type": "string",
            "description": "Comments related to the due diligence associated with the customer.",
            "example": "comment"
          },
          "obtainedByCode": {
            "type": "string",
            "description": "Code identifying the person that collected the Customer Due Diligence information.",
            "example": "10000"
          },
          "politicallyExposed": {
            "$ref": "#/components/schemas/PoliticallyExposed"
          },
          "riskRating": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/riskRating"
            }
          },
          "moneyServiceIndicator": {
            "type": "string",
            "description": "Indicates whether or not the organization offers money services.",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "moneyServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MoneyService"
            }
          },
          "affiliateAssociationIndicator": {
            "type": "string",
            "description": "Indicates whether the person is a affiliated to the financial entity.",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "affiliations": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Affiliation"
            }
          },
          "externalFinancialEntityRelationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalFinancialEntityRelationship"
            }
          },
          "netWorthAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "refreshDate": {
            "type": "string",
            "description": "The date the due diligence information needs to be refreshed.",
            "format": "date",
            "example": "2020-01-01"
          },
          "obtainedByName": {
            "type": "string",
            "description": "Obtained by relationship manager name",
            "readOnly": true,
            "example": "John"
          },
          "individualRiskAttributes": {
            "$ref": "#/components/schemas/IndividualRiskAttributes"
          },
          "organizationRiskAttributes": {
            "$ref": "#/components/schemas/OrganizationRiskAttributes"
          },
          "emigrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Emigration"
            }
          },
          "identityTheft": {
            "$ref": "#/components/schemas/IdentityTheft"
          },
          "insiderRelationship": {
            "$ref": "#/components/schemas/InsiderRelationship"
          }
        },
        "description": "Contains due diligence field information."
      },
      "PoliticallyExposed": {
        "required": [
          "politicallyExposedIndicator"
        ],
        "type": "object",
        "properties": {
          "politicallyExposedIndicator": {
            "type": "string",
            "description": "Indicates whether the person is a politically exposed person.",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "politicallyExposedDescription": {
            "type": "string",
            "description": "Describes the political relationship the customer has to the political person or entity.",
            "example": "Pltcl"
          }
        }
      },
      "riskRating": {
        "required": [
          "riskRatingReviewFrequency",
          "riskRatingReviewFrequencyNumber",
          "riskRatingType",
          "riskRatingValue"
        ],
        "type": "object",
        "properties": {
          "riskRatingType": {
            "type": "string",
            "description": "Value associated with the entity.",
            "example": "Risk type"
          },
          "riskRatingValue": {
            "type": "string",
            "description": "Value assigned to the results of the risk assessment.",
            "example": "Risk"
          },
          "riskRatingDate": {
            "type": "string",
            "description": "Date the risk rating was determined.",
            "format": "date",
            "example": "2020-01-01"
          },
          "riskRatingSource": {
            "type": "string",
            "description": "Name of the source that provided the risk rating value.",
            "example": "Risk test"
          },
          "riskRatingNextReviewDate": {
            "type": "string",
            "description": "Identifies the date the risk rating evaluation for the customer should next occur.",
            "format": "date",
            "example": "2021-01-01"
          },
          "riskRatingReviewFrequency": {
            "type": "string",
            "description": "Identifies the frequency of the risk rating review for the customer.",
            "example": "Yearly",
            "enum": [
              "Biweekly",
              "Daily",
              "Monthly",
              "Quarterly",
              "Weekly",
              "Yearly"
            ]
          },
          "riskRatingReviewFrequencyNumber": {
            "minimum": 0,
            "type": "number",
            "description": "Identifies the number of units associated with the frequency for the customer.",
            "example": 1
          }
        }
      },
      "MoneyService": {
        "type": "object",
        "properties": {
          "serviceType": {
            "type": "string",
            "description": "Identifies the type of money services offered by the organization.  (e.g. Money Orders, Travelers Checks, Money Transmissions, Check Cashing, Currency Exchange, Currency Dealing, Stored Value Cards, etc.)",
            "example": "Check Cashing"
          },
          "serviceTypeDescription": {
            "type": "string",
            "description": "Identifies the type of money services offered by the organization.  (e.g. Money Orders, Travelers Checks, Money Transmissions, Check Cashing, Currency Exchange, Currency Dealing, Stored Value Cards, etc.)",
            "readOnly": true,
            "example": "Check Cashing"
          },
          "performsServiceIndicator": {
            "type": "string",
            "description": "Indicates whether or not the business performs money services",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "registrationType": {
            "type": "string",
            "description": "Identifies the type of registration associated with the money service type (e.g. FinCen, State, Both, Other, None).",
            "example": "Both"
          },
          "registrationConfirmation": {
            "type": "string",
            "description": "Identifies the type of confirmation type associated with the money service type (e.g. Registration Number, License Number, IRS Acknowledgement Letter).",
            "example": "Registration Number"
          },
          "actingAsAgentFor": {
            "type": "string",
            "description": "The company that the organization is an agent for in providing this money service."
          },
          "maxDailyPerPerson": {
            "$ref": "#/components/schemas/Amount"
          },
          "estimatedMonthlySale": {
            "$ref": "#/components/schemas/Amount"
          },
          "estimatedPercentageOfIncome": {
            "type": "number",
            "description": "The estimated percentage of income obtained through the issuing or performance of this money service.",
            "format": "float",
            "example": 10
          }
        },
        "description": "Contains information associated with the money service offered by the organization."
      },
      "Amount": {
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "currencyCode": {
            "maxLength": 3,
            "minLength": 2,
            "type": "string",
            "description": "The code of currency",
            "example": "USD"
          },
          "amount": {
            "maximum": 1000000000000000000,
            "type": "number",
            "description": "Amount involved with the entity",
            "format": "double",
            "example": 100
          },
          "date": {
            "type": "string",
            "description": "The date associated within the amount",
            "format": "date",
            "example": "2020-01-01"
          }
        },
        "description": "Amount info"
      },
      "BranchInfo": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier for the branch",
            "example": "1000"
          },
          "roleType": {
            "type": "string",
            "description": "The type of branch association",
            "example": "Back Office"
          },
          "preferredIndicator": {
            "type": "boolean",
            "description": "Indicates that the branch is the preferred branch for the customer",
            "example": true
          }
        },
        "description": "Information related to a customer branch association"
      },
      "OfficerInfo": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier for the officer.",
            "example": "2000"
          },
          "fullName": {
            "type": "string",
            "description": "The full name of the officer",
            "example": "John"
          },
          "roleType": {
            "type": "string",
            "description": "The type of officer association (e.g., Opening, Primary, Secondary, etc).",
            "example": "Primary"
          },
          "preferredIndicator": {
            "type": "boolean",
            "description": "Indicates that the officer is the preferred officer for the customer",
            "example": true
          }
        },
        "description": "Contains related officer information."
      },
      "Notes": {
        "type": "object",
        "properties": {
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "noteSummary": {
            "$ref": "#/components/schemas/NoteSummary"
          }
        }
      },
      "NoteSummary": {
        "type": "object",
        "properties": {
          "highPriorityIndicator": {
            "type": "boolean",
            "description": "High Priority Note Indicator.",
            "example": true
          },
          "mediumPriorityIndicator": {
            "type": "boolean",
            "description": "Medium Priority Note Indicator.",
            "example": true
          },
          "lowPriorityIndicator": {
            "type": "boolean",
            "description": "Low Priority Note Indicator.",
            "example": true
          }
        },
        "description": "Notes summary"
      },
      "Note": {
        "type": "object",
        "properties": {
          "noteId": {
            "type": "integer",
            "description": "The ID of the note.",
            "format": "int64",
            "readOnly": true,
            "example": 999900138067055
          },
          "externalNoteDetails": {
            "$ref": "#/components/schemas/ExternalNoteDetails"
          },
          "noteDetails": {
            "$ref": "#/components/schemas/NoteDetails"
          },
          "auditTrail": {
            "$ref": "#/components/schemas/NoteAuditTrail"
          }
        },
        "description": "Customer Note Details"
      },
      "NoteAuditTrail": {
        "type": "object",
        "properties": {
          "maintenanceUserId": {
            "type": "string",
            "description": "User id who has updated the data",
            "example": "Admin"
          },
          "maintenancePeriod": {
            "type": "string",
            "description": "Maintenance Period",
            "example": "Current",
            "enum": [
              "Current",
              "Future",
              "Historical"
            ]
          },
          "maintenanceTime": {
            "$ref": "#/components/schemas/NoteMaintenanceTime"
          },
          "createUserId": {
            "type": "string",
            "description": "User id who has created the data",
            "example": "Admin User"
          },
          "createTime": {
            "$ref": "#/components/schemas/NoteMaintenanceTime"
          }
        },
        "description": "Contains the audit trail information",
        "readOnly": true
      },
      "NoteMaintenanceTime": {
        "type": "object",
        "properties": {
          "financialEntityOperationalTimestamp": {
            "type": "string",
            "description": "Financial entity operational timestamp",
            "example": "2020-07-20T06:48:19.183352-04:00"
          },
          "operatorUTCTimestamp": {
            "type": "string",
            "description": "Date and time that the service was completed",
            "example": "2020-07-20T06:48:19.183352-04:00"
          },
          "organizationUnitOperationalTimestamp": {
            "type": "string",
            "description": "Organization unit operational timestamp",
            "example": "2020-07-20T06:48:19.183352-04:00"
          }
        },
        "description": "Operational timestamp information",
        "readOnly": true
      },
      "CreateNote": {
        "type": "object",
        "properties": {
          "externalNoteDetails": {
            "$ref": "#/components/schemas/ExternalNoteDetails"
          },
          "noteDetails": {
            "$ref": "#/components/schemas/NoteDetails"
          }
        },
        "description": "Create Customer Note Details"
      },
      "UpdateNote": {
        "type": "object",
        "properties": {
          "noteDetails": {
            "$ref": "#/components/schemas/NoteDetails"
          }
        },
        "description": "Update Customer Note Details"
      },
      "ExternalNoteDetails": {
        "required": [
          "applicationName",
          "externalId",
          "processorName"
        ],
        "type": "object",
        "properties": {
          "externalId": {
            "minLength": 1,
            "type": "string",
            "description": "External Note Id",
            "example": "999900138067059"
          },
          "processorName": {
            "minLength": 1,
            "type": "string",
            "description": "The note processor name of the external system",
            "example": "External"
          },
          "applicationName": {
            "minLength": 1,
            "type": "string",
            "description": "The note application name of the external system",
            "example": "External"
          }
        },
        "description": "External note details"
      },
      "NoteDetails": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "The effective date of the note.",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "The date the note expires.",
            "format": "date",
            "example": "2030-01-01"
          },
          "priority": {
            "type": "string",
            "description": "The priority of the note.",
            "example": "Low",
            "enum": [
              "High",
              "Medium",
              "Low"
            ]
          },
          "text": {
            "$ref": "#/components/schemas/NoteText"
          },
          "category": {
            "$ref": "#/components/schemas/NoteCategory"
          },
          "requestedBy": {
            "$ref": "#/components/schemas/NoteRequestedBy"
          }
        },
        "description": "Customer Note Details"
      },
      "NoteText": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The text of the note.",
            "example": "Text"
          },
          "description": {
            "type": "string",
            "description": "The description of the note.",
            "example": "Text description"
          }
        },
        "description": "The note text"
      },
      "NoteCategory": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "minLength": 1,
            "type": "string",
            "description": "The category value of the note.",
            "example": "Account"
          },
          "description": {
            "type": "string",
            "description": "The category description of the note.",
            "example": "Account Description"
          }
        },
        "description": "The note category"
      },
      "NoteRequestedBy": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the person who requested the note.",
            "example": "70000001024"
          },
          "name": {
            "type": "string",
            "description": "The name of the person who requested the note.",
            "example": "John"
          }
        },
        "description": "The person who requested the note"
      },
      "ServiceEmploymentDetails": {
        "type": "object",
        "properties": {
          "serviceBranchAgency": {
            "type": "string",
            "description": "Contains the value of branch or agency of the service  (e.g. Army, Navy, Air Force, etc.)",
            "example": "Army"
          },
          "permanentStation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermanentStation"
            }
          },
          "serviceStatus": {
            "$ref": "#/components/schemas/ServiceStatus"
          }
        },
        "description": "Contains service employment information associated with soldiers, sailors, airmen, marines, coast guardsmen, commissioned officers in the Public Health Service and National Oceanic and Atmospheric Administration.  This is primarily used to track information for SCRA compliance."
      },
      "PermanentStation": {
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0,
            "type": "integer",
            "description": "The unique id associated with the permanent station record.",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the permanent station.",
            "example": "NewStation"
          },
          "startDate": {
            "type": "string",
            "description": "The effective date of the postal address.",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "The expiration date of the postal address.",
            "format": "date",
            "example": "2021-01-01"
          },
          "state": {
            "type": "string",
            "description": "State portion of the postal address",
            "example": "CA"
          },
          "stateDescription": {
            "type": "string",
            "description": "Description of the postal address",
            "readOnly": true,
            "example": "California"
          },
          "countryCode": {
            "type": "string",
            "description": "Country code portion of the postal address",
            "example": "USA"
          },
          "countryName": {
            "type": "string",
            "description": "Country name portion of the postal address",
            "readOnly": true,
            "example": "United States of America"
          }
        },
        "description": "Contains information related to the permanent station"
      },
      "ServiceStatus": {
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0,
            "type": "integer",
            "description": "The unique id associated with the service status."
          },
          "startDate": {
            "type": "string",
            "description": "The date the status is effective.",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "The date the status is no longer in effect.",
            "format": "date",
            "example": "2021-01-02"
          },
          "value": {
            "type": "string",
            "description": "The service status value of the service member (e.g. Active Duty, Deployed, Called to Active Duty, Called to Active Service, Retired)",
            "example": "Active Duty"
          }
        },
        "description": "Contains the information associated with the status of the service member for a specified duration."
      },
      "ExternalIdentifiers": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "The unique customer identifier.",
            "readOnly": true,
            "example": "70000000000"
          },
          "externalIdentifiers": {
            "$ref": "#/components/schemas/ExternalIdentifierList"
          }
        }
      },
      "ExternalIdentifierList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ExternalIdentifier"
        }
      },
      "ExternalIdentifier": {
        "required": [
          "applicationName",
          "externalId",
          "processorName"
        ],
        "type": "object",
        "properties": {
          "referenceExternalId": {
            "type": "string",
            "description": "Reference external Identifier",
            "example": "999900062071226"
          },
          "externalId": {
            "type": "string",
            "description": "External identifier of the customer",
            "example": "999900138067059"
          },
          "processorName": {
            "type": "string",
            "description": "The processor name of the external system",
            "example": "External"
          },
          "applicationName": {
            "type": "string",
            "description": "The application name of the external system",
            "example": "External"
          }
        },
        "description": "Defines external identification of the customer"
      },
      "ExternalIdentifierCreate": {
        "required": [
          "applicationName",
          "externalId",
          "processorName"
        ],
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "External identifier of the customer",
            "example": "999900138067059"
          },
          "processorName": {
            "type": "string",
            "description": "The processor name of the external system",
            "example": "External"
          },
          "applicationName": {
            "type": "string",
            "description": "The application name of the external system",
            "example": "External"
          }
        },
        "description": "Defines external identification of the customer"
      },
      "Attributes": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          }
        }
      },
      "Names": {
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Name"
            }
          }
        }
      },
      "Citizenships": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CitizenshipInfo"
        }
      },
      "Officers": {
        "type": "array",
        "description": "Contains customer officer information.",
        "items": {
          "$ref": "#/components/schemas/OfficerInfo"
        }
      },
      "Branches": {
        "type": "array",
        "description": "Contains customer branch information",
        "items": {
          "$ref": "#/components/schemas/BranchInfo"
        }
      },
      "IdentificationInformation": {
        "type": "object",
        "properties": {
          "identifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentificationInfo"
            }
          }
        }
      },
      "TaxInformation": {
        "type": "object",
        "properties": {
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxInfo"
            }
          }
        }
      },
      "TaxInfo": {
        "required": [
          "taxIdCountryCode",
          "taxIdType"
        ],
        "type": "object",
        "properties": {
          "taxIdCountryCode": {
            "maximum": 3,
            "minimum": 3,
            "type": "string",
            "description": "The country identifier for the customer SSN/EIN",
            "example": "USA"
          },
          "taxIdCountryName": {
            "type": "string",
            "description": "The country name for the customer SSN/EIN",
            "readOnly": true,
            "example": "United States of America"
          },
          "taxIdType": {
            "type": "string",
            "description": "Specifies the type of taxId number",
            "example": "EIN"
          },
          "taxIdTypeDescription": {
            "type": "string",
            "description": "Specifies the description of taxId number",
            "readOnly": true,
            "example": "Employer Identification Number"
          },
          "taxId": {
            "type": "string",
            "description": "The SSN/EIN for the customer",
            "example": "123456789"
          },
          "taxIdCertificationStatus": {
            "type": "string",
            "description": "The status of the tax ID number.",
            "example": "1"
          },
          "taxIdCertificationType": {
            "type": "string",
            "description": "The type of certification used for the tax Id",
            "example": "W-8BEN"
          },
          "taxIdCertificationDate": {
            "type": "string",
            "description": "The date of the tax Id certification",
            "format": "date",
            "example": "2020-01-01"
          },
          "primaryTaxIdIndicator": {
            "type": "boolean",
            "description": "Indicates whether this is a primary tax id for the customer",
            "example": true
          },
          "taxIdValidation": {
            "$ref": "#/components/schemas/TaxIdValidation"
          },
          "backupWithholding": {
            "$ref": "#/components/schemas/BackupWithholdingInfo"
          }
        },
        "description": "Represents the tax information"
      },
      "BackupWithholdingInfo": {
        "type": "object",
        "properties": {
          "subjectToBackupWitholdingIndicator": {
            "type": "boolean",
            "description": "Indicates whether the customer is a subject to backup withholding",
            "example": true
          },
          "exemptCode": {
            "type": "string",
            "description": "Exempt code for the backup withholding.",
            "example": "02"
          },
          "exemptDescription": {
            "type": "string",
            "description": "Exempt description for the backup withholding.",
            "readOnly": true,
            "example": "02 description"
          },
          "type": {
            "type": "string",
            "description": "Backup withholding type",
            "example": "11"
          },
          "typeDescription": {
            "type": "string",
            "description": "Backup withholding type description",
            "readOnly": true,
            "example": "No withholding"
          },
          "status": {
            "type": "string",
            "description": "Backup withholding status",
            "example": "01"
          },
          "statusDescription": {
            "type": "string",
            "description": "Backup withholding status description",
            "readOnly": true,
            "example": "U.S. Withholding Agent-Fl"
          },
          "effectiveDate": {
            "type": "string",
            "description": "The effective date of the backup withholding.",
            "format": "date",
            "example": "2020-01-01"
          }
        },
        "description": "Backup withholding information"
      },
      "TaxIdValidation": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Tax id validation code",
            "example": "Not Validated"
          },
          "validationSource": {
            "type": "string",
            "description": "Validation source",
            "example": "US"
          },
          "validationDate": {
            "type": "string",
            "description": "Validation date",
            "format": "date",
            "example": "2020-01-01"
          },
          "sentForValidationDate": {
            "type": "string",
            "description": "Date the tax id was sent for validation",
            "format": "date",
            "example": "2019-12-01"
          }
        },
        "description": "Tax id validation information"
      },
      "OccupationInfo": {
        "required": [
          "occupation"
        ],
        "type": "object",
        "properties": {
          "occupation": {
            "minLength": 1,
            "type": "string",
            "description": "Customer Occupation.",
            "example": "Doctor"
          },
          "occupationDescription": {
            "type": "string",
            "description": "Customer Occupation Description.",
            "readOnly": true,
            "example": "Cardiologist"
          }
        }
      },
      "CitizenshipInfo": {
        "required": [
          "citizenshipCountryCode"
        ],
        "type": "object",
        "properties": {
          "citizenshipStatus": {
            "type": "string",
            "description": "Identifies the citizenship status of the customer.",
            "example": "Other"
          },
          "citizenshipStatusDescription": {
            "type": "string",
            "description": "Identifies the citizenship status of the customer.",
            "readOnly": true,
            "example": "Other"
          },
          "citizenshipCountryCode": {
            "maximum": 3,
            "minimum": 3,
            "type": "string",
            "description": "Contains the citizenship country code",
            "example": "USA"
          },
          "citizenshipCountryName": {
            "type": "string",
            "description": "Contains the citizenship country",
            "readOnly": true,
            "example": "United States of America"
          },
          "citizenshipStartDate": {
            "type": "string",
            "description": "Identifies the start date of the citizenship",
            "format": "date",
            "example": "2020-01-01"
          },
          "citizenshipEndDate": {
            "type": "string",
            "description": "Identifies the end date of the citizenship",
            "format": "date",
            "example": "2030-01-01"
          },
          "residentIndicator": {
            "type": "boolean",
            "description": "Indicates whether the customer is a resident of the country",
            "example": true
          }
        },
        "description": "Represents the citizenship information"
      },
      "Census": {
        "type": "object",
        "properties": {
          "censusBlock": {
            "type": "string",
            "description": "The block name/number where the customer resides",
            "example": "K28"
          },
          "censusCounty": {
            "type": "string",
            "description": "The county where the customer currently resides",
            "example": "US"
          },
          "censusState": {
            "type": "string",
            "description": "The state where the customer currently resides",
            "example": "01"
          },
          "censusTract": {
            "type": "string",
            "description": "The tract name/number where the customer resides",
            "example": "Contract"
          },
          "msaCode": {
            "type": "string",
            "description": "The Metropolitan Statistical Area (MSA) demographic code supplied by the county",
            "example": "NY-NJ"
          }
        },
        "description": "Contains census information identifying the geographic area"
      },
      "Income": {
        "type": "object",
        "properties": {
          "annualIncomeLevel": {
            "$ref": "#/components/schemas/Amount_1"
          },
          "organizationIncome": {
            "$ref": "#/components/schemas/OrganizationIncomeUpdate"
          }
        },
        "description": "Contains income information"
      },
      "OrganizationIncomeUpdate": {
        "type": "object",
        "properties": {
          "annualIncomeAmount": {
            "type": "number",
            "description": "Contains the income the involved party receives within a year. Income is the sum of all the wages, salaries, profits, interest payments, rents, and other forms of earnings received.",
            "format": "double",
            "example": 100
          },
          "annualIncomeCurrencyCode": {
            "type": "string",
            "description": "The ISO currency code defining the currency associated with the amount.",
            "example": "USD"
          },
          "annualIncomeDate": {
            "type": "string",
            "description": "The date associated with the amount.",
            "format": "date",
            "example": "2021-05-01"
          }
        }
      },
      "Preference": {
        "type": "object",
        "properties": {
          "preferredWrittenLanguage": {
            "type": "string",
            "description": "The customer's preferred written language."
          },
          "documentDeliveryPreference": {
            "type": "string",
            "description": "The customer's Preferred method of document delivery such as statements, notifications, invoices, etc..",
            "example": "statements"
          },
          "prefferedOralLanguage": {
            "type": "string",
            "description": "The customer's Preferred Oral communication language. *ISO locale code as defined at system installation and retrieved by a call to ECRetrieveSysInstltnAtt Value where AttNme='Language Code'",
            "example": "en-US"
          },
          "currencyPreference": {
            "type": "string",
            "description": "The customer's Currency Preference *ISO4217 3-character currency code as defined at system installation and validated against Currency table.",
            "example": "USD"
          },
          "eSignaturePermission": {
            "type": "boolean",
            "description": "The customer's Electronic Signature Permission Verified Indicator"
          },
          "eSignaturePermissionDate": {
            "type": "string",
            "description": "The customer's Electronic Signature Permission Date",
            "format": "date",
            "example": "2020-01-01"
          },
          "preferredWrittenLanguageDescription": {
            "type": "string",
            "description": "Preferred written language description",
            "readOnly": true,
            "example": "en-US"
          }
        },
        "description": "Contains preference information"
      },
      "LifecycleStatus": {
        "type": "object",
        "properties": {
          "closeReason": {
            "type": "string",
            "description": "Reason the customer record was closed",
            "example": "BankInitiated"
          },
          "closeReasonDescription": {
            "type": "string",
            "description": "The description details for losing the customer",
            "readOnly": true,
            "example": "BankInitiated"
          },
          "lastContactDate": {
            "type": "string",
            "description": "Date the institution last had contact with the customer",
            "format": "date",
            "example": "2020-01-01"
          },
          "lastContactType": {
            "type": "string",
            "description": "The type of contact last made with the customer",
            "example": "Phone"
          }
        },
        "description": "Contains lifecycle status information"
      },
      "CommonDemographicDetail": {
        "type": "object",
        "properties": {
          "customerSegmentInfomation": {
            "$ref": "#/components/schemas/CustomerSegmentInfo"
          },
          "officers": {
            "$ref": "#/components/schemas/Officers"
          },
          "branches": {
            "$ref": "#/components/schemas/Branches"
          }
        },
        "description": "Defines complete set of Contact information for the customer"
      },
      "IndividualDemographicDetail": {
        "type": "object",
        "properties": {
          "occupation": {
            "$ref": "#/components/schemas/OccupationInfo"
          },
          "citizenships": {
            "$ref": "#/components/schemas/Citizenships"
          }
        },
        "description": "Defines complete set of Contact information for the customer"
      },
      "VerificationStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Verification status of the customer",
            "example": "V"
          },
          "statusDescription": {
            "type": "string",
            "description": "Verification status description for the customer",
            "readOnly": true,
            "example": "V-Verified"
          },
          "effectiveDate": {
            "type": "string",
            "description": "Effective date of the verification status",
            "format": "date",
            "example": "2020-01-01"
          }
        },
        "description": "Contains the verification status for the customer"
      },
      "CustomerEmploymentResponse": {
        "required": [
          "customerDetail",
          "maintenanceResponse"
        ],
        "type": "object",
        "properties": {
          "customerDetail": {
            "$ref": "#/components/schemas/CustomerResponse"
          },
          "employments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentResponse"
            }
          },
          "maintenanceResponse": {
            "$ref": "#/components/schemas/MaintenanceTime"
          }
        }
      },
      "CustomerNotesResponse": {
        "required": [
          "customerDetail",
          "maintenanceResponse",
          "noteDetail"
        ],
        "type": "object",
        "properties": {
          "customerDetail": {
            "$ref": "#/components/schemas/CustomerResponse"
          },
          "noteDetail": {
            "$ref": "#/components/schemas/NoteDetailResponse"
          },
          "maintenanceResponse": {
            "$ref": "#/components/schemas/MaintenanceTime"
          }
        }
      },
      "NoteDetailResponse": {
        "type": "object",
        "properties": {
          "noteId": {
            "type": "integer",
            "description": "Note identifier",
            "format": "int64",
            "example": 999900138067057
          },
          "externalNoteDetails": {
            "$ref": "#/components/schemas/ExternalNoteDetails"
          }
        }
      },
      "EmploymentResponse": {
        "required": [
          "employmentId"
        ],
        "type": "object",
        "properties": {
          "employmentId": {
            "type": "integer",
            "description": "Employment id",
            "format": "int64",
            "example": 999900087069656
          },
          "permanentStationIds": {
            "type": "array",
            "description": "Permanent station identifiers",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "serviceStatusIds": {
            "type": "array",
            "description": "Service status identifiers",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "CreateCustomerResponse": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Customer id",
            "format": "int64",
            "example": 70000000000
          },
          "contacts": {
            "$ref": "#/components/schemas/ContactResponseList"
          },
          "maintenanceResponse": {
            "$ref": "#/components/schemas/MaintenanceTime"
          }
        }
      },
      "CustomerContactsResponse": {
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components/schemas/ContactResponseList"
          },
          "maintenanceResponse": {
            "$ref": "#/components/schemas/MaintenanceTime"
          }
        }
      },
      "ContactResponseList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ContactResponse"
        }
      },
      "ContactResponse": {
        "type": "object",
        "properties": {
          "phone": {
            "$ref": "#/components/schemas/PhoneSummary"
          },
          "email": {
            "$ref": "#/components/schemas/EmailSummary"
          },
          "postalAddress": {
            "$ref": "#/components/schemas/PostalAddressSummary"
          },
          "socialMedia": {
            "$ref": "#/components/schemas/SocialMediaSummary"
          }
        },
        "description": "Contact response information"
      },
      "PhoneSummary": {
        "type": "object",
        "properties": {
          "phoneType": {
            "$ref": "#/components/schemas/PhoneType"
          },
          "sequenceNumber": {
            "minimum": 0,
            "type": "integer",
            "description": "Order of the phone number entity",
            "example": 1
          },
          "systemOfRecordPhone": {
            "$ref": "#/components/schemas/SystemOfRecordAddress"
          }
        },
        "description": "Phone summary information"
      },
      "EmailSummary": {
        "type": "object",
        "properties": {
          "emailType": {
            "$ref": "#/components/schemas/EmailType"
          },
          "sequenceNumber": {
            "minimum": 0,
            "type": "integer",
            "description": "Order of the email entity",
            "example": 1
          },
          "systemOfRecordEmail": {
            "$ref": "#/components/schemas/SystemOfRecordAddress"
          }
        },
        "description": "Email summary information"
      },
      "PostalAddressSummary": {
        "type": "object",
        "properties": {
          "postalAddressType": {
            "$ref": "#/components/schemas/AddressType"
          },
          "sequenceNumber": {
            "minimum": 0,
            "type": "integer",
            "description": "Order of the postal address entity",
            "example": 1
          },
          "systemOfRecordAddress": {
            "$ref": "#/components/schemas/SystemOfRecordAddress"
          }
        },
        "description": "Postal address summary information"
      },
      "SocialMediaSummary": {
        "type": "object",
        "properties": {
          "socialMediaType": {
            "type": "string",
            "description": "Social media type",
            "example": "Facebook"
          },
          "sequenceNumber": {
            "minimum": 0,
            "type": "integer",
            "description": "Order of the postal address entity",
            "example": 1
          },
          "systemOfRecordSocialMedia": {
            "$ref": "#/components/schemas/SystemOfRecordAddress"
          }
        },
        "description": "Social media summary information"
      },
      "CommunicationPreferences": {
        "type": "object",
        "properties": {
          "communicationPreferences": {
            "$ref": "#/components/schemas/CommunicationPreferencesList"
          },
          "communicationPreferenceNotifications": {
            "type": "array",
            "description": "Communication preference notifications",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/CommunicationPreferenceNotificationInfo"
            }
          },
          "contactPreferences": {
            "type": "array",
            "description": "Preferred contacts",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ContactPreference"
            }
          }
        }
      },
      "CommunicationPreferenceNotificationList": {
        "type": "object",
        "properties": {
          "communicationPreferenceNotifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommunicationPreferenceNotificationInfo"
            }
          }
        }
      },
      "CommunicationPreferenceNotificationInfo": {
        "required": [
          "notificationType",
          "preferenceType"
        ],
        "type": "object",
        "properties": {
          "preferenceType": {
            "type": "string",
            "description": "The communication preference type",
            "example": "Direct Mail Maintenance"
          },
          "displayName": {
            "type": "string",
            "description": "The communication preference display name",
            "readOnly": true,
            "example": "Direct Mail Maintenance"
          },
          "description": {
            "type": "string",
            "description": "The communication preference description",
            "readOnly": true,
            "example": "Direct Mail Maintenance"
          },
          "notificationType": {
            "type": "string",
            "description": "The type of notification",
            "example": "10001"
          },
          "notificationDescription": {
            "type": "string",
            "description": "The description of notification",
            "readOnly": true,
            "example": "10001"
          },
          "notificationDate": {
            "type": "string",
            "description": "The date the notification was sent to the Involved Party.",
            "format": "date",
            "example": "2020-01-01"
          }
        },
        "description": "Notification information"
      },
      "ExternalFinancialEntityRelationship": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date",
            "example": "2021-01-01"
          },
          "externalFinancialEntityRelationshipType": {
            "type": "string",
            "description": "External financial entity relationship type",
            "example": "Primary",
            "enum": [
              "Primary",
              "Secondary",
              "Tertiary"
            ]
          },
          "name": {
            "type": "string",
            "description": "The name of the financial entity. Please provide empty value to delete the financial entity.",
            "example": "FIS"
          }
        },
        "description": "External Financial Entity Relationship"
      },
      "IndividualRiskAttributes": {
        "type": "object",
        "properties": {
          "negativeSearchResult": {
            "type": "string",
            "description": "Negative search result description",
            "example": "Pass"
          },
          "referrerName": {
            "type": "string",
            "description": "Referrer name",
            "example": "John"
          },
          "doingBusinessAsIndicator": {
            "type": "string",
            "description": "Doing business as indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          }
        },
        "description": "Individual risk attributes"
      },
      "OrganizationRiskAttributes": {
        "type": "object",
        "properties": {
          "legalEntityType": {
            "type": "string",
            "description": "Legal entity type",
            "example": "001"
          },
          "legalEntityDescription": {
            "type": "string",
            "description": "Legal entity description",
            "readOnly": true,
            "example": "001 Text"
          },
          "classificationName": {
            "type": "string",
            "description": "Classification name",
            "example": "Aerospace industry"
          },
          "classificationDescription": {
            "type": "string",
            "description": "Classification description",
            "readOnly": true,
            "example": "Aerospace industry Text"
          },
          "geographicalArea": {
            "type": "string",
            "description": "Geographical area",
            "example": "Texas"
          },
          "negativeSearchResult": {
            "type": "string",
            "description": "Negative search result description",
            "example": "Pass"
          },
          "referrerName": {
            "type": "string",
            "description": "Referrer name",
            "example": "FIS"
          },
          "doingBusinessAsIndicator": {
            "type": "string",
            "description": "Doing business as indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "foreignCorrespondentBankIndicator": {
            "type": "string",
            "description": "Foreign correspondent bank indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "shellCorporationIndicator": {
            "type": "string",
            "description": "Shell corporation indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "privateInvestmentCompanyIndicator": {
            "type": "string",
            "description": "Private investment company indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "charityOrganizationIndicator": {
            "type": "string",
            "description": "Charity organization indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "embassyIndicator": {
            "type": "string",
            "description": "Embassy indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "foreignGovernmentIndicator": {
            "type": "string",
            "description": "Foreign government indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "subsidiaryIndicator": {
            "type": "string",
            "description": "Subsidiary indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "bearerOfSharesIndicator": {
            "type": "string",
            "description": "Bearer of shares indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "publiclyTradedIndicator": {
            "type": "string",
            "description": "Publicly traded indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "internationalIndicator": {
            "type": "string",
            "description": "International indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "usOwnershipIndicator": {
            "type": "string",
            "description": "US ownership indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "governmentAffiliatedIndicator": {
            "type": "string",
            "description": "Government affiliated indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "highRiskBusinessIndicator": {
            "type": "string",
            "description": "High risk business indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "smallBusinessIndicator": {
            "type": "string",
            "description": "Small business indicator",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "stockIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockIdentifier"
            }
          }
        },
        "description": "Organization risk attributes"
      },
      "StockIdentifier": {
        "type": "object",
        "properties": {
          "tickerSymbol": {
            "type": "string",
            "description": "Ticker symbol",
            "example": "USD1MLBB=L"
          },
          "stockExchange": {
            "type": "string",
            "description": "Stock exchange",
            "example": "NYSE"
          },
          "stockExchangeDescription": {
            "type": "string",
            "description": "Stock exchange description",
            "readOnly": true,
            "example": "NYSE Text"
          }
        },
        "description": "Stock identifier"
      },
      "InsiderRelationship": {
        "type": "object",
        "properties": {
          "personalRelationshipToFinancialEntityIndicator": {
            "type": "string",
            "description": "Indicates the personal relationship value the involved party has with the financial entity.",
            "example": "Director",
            "enum": [
              "Director",
              "Employee",
              "Officer",
              "None"
            ]
          },
          "stockHolderIndicator": {
            "type": "string",
            "description": "Indicates whether the customer holds stock in the financial entity.",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsiderRelationshipDetails"
            }
          }
        },
        "description": "Insider relationship"
      },
      "InsiderRelationshipDetails": {
        "type": "object",
        "properties": {
          "sinceDate": {
            "type": "string",
            "description": "Date when insider relationship started",
            "format": "date",
            "example": "1980-01-01"
          },
          "relationshipToInsiderTypeId": {
            "type": "integer",
            "description": "System generated identifier",
            "readOnly": true,
            "example": 999900131065672
          },
          "relationshipToInsiderType": {
            "type": "string",
            "description": "Relationship to insider type",
            "example": "Parent"
          },
          "relationshipToInsiderTypeDescription": {
            "type": "string",
            "description": "Relationship to insider type description",
            "readOnly": true,
            "example": "Parent Text"
          },
          "insiderType": {
            "type": "string",
            "description": "Insider type",
            "example": "Director"
          },
          "insiderTypeDescription": {
            "type": "string",
            "description": "Insider type description",
            "readOnly": true,
            "example": "Director Text"
          },
          "insiderFinancialEntityType": {
            "type": "string",
            "description": "Insider financial entity type",
            "example": "Holding Company"
          },
          "insiderFinancialEntityTypeDescription": {
            "type": "string",
            "description": "Insider financial entity type description",
            "readOnly": true,
            "example": "Holding Company Text"
          }
        },
        "description": "Insider relationship details"
      },
      "Emigration": {
        "type": "object",
        "properties": {
          "effectiveDate": {
            "type": "string",
            "description": "Date when the customer emigrated",
            "format": "date",
            "example": "1990-01-01"
          },
          "fromCountryCode": {
            "type": "string",
            "description": "Country code from where the customer emigrated",
            "example": "AFG"
          },
          "fromCountryName": {
            "type": "string",
            "description": "Name of the country from where the customer emigrated",
            "readOnly": true,
            "example": "Afghanistan"
          },
          "toCountryCode": {
            "type": "string",
            "description": "Country code to where the customer emigrated",
            "example": "USA"
          },
          "toCountryName": {
            "type": "string",
            "description": "Name of the country to where the customer emigrated",
            "readOnly": true,
            "example": "United States of America"
          }
        },
        "description": "Emigration details"
      },
      "IdentityTheft": {
        "type": "object",
        "properties": {
          "reportedIndicator": {
            "type": "string",
            "description": "Indicator if identity theft was reported",
            "example": "true",
            "enum": [
              "true",
              "false",
              "reset"
            ]
          },
          "reportedDate": {
            "type": "string",
            "description": "Date when identity theft was reported",
            "format": "date",
            "example": "2020-01-01"
          }
        }
      },
      "Affiliations": {
        "type": "object",
        "properties": {
          "affiliations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliation"
            }
          }
        },
        "description": "List of affiliations"
      },
      "Affiliation": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Date when the affiliation started",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "Date when the affiliation ended",
            "format": "date",
            "example": "2030-01-01"
          },
          "name": {
            "type": "string",
            "description": "Name of the affiliation",
            "example": "FIS"
          }
        },
        "description": "Affiliation"
      },
      "Restrictions": {
        "type": "object",
        "properties": {
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Restriction"
            }
          }
        },
        "description": "Restrictions"
      },
      "Restriction": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Date when the restriction started",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "Date when the restriction ended",
            "format": "date",
            "example": "2030-01-01"
          },
          "value": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the restriction",
            "example": "Debit card statement"
          },
          "description": {
            "type": "string",
            "description": "Description of the restriction",
            "readOnly": true,
            "example": "Debit card statement Text"
          },
          "comment": {
            "type": "string",
            "description": "Comment associated with the restriction",
            "example": "comment"
          }
        },
        "description": "Restriction"
      },
      "FatcaDetails": {
        "type": "object",
        "properties": {
          "giin": {
            "type": "string",
            "description": "Global intermediary identifier number",
            "example": "AAAAAA.11111.BB.222"
          },
          "giinCertificationStatus": {
            "$ref": "#/components/schemas/GiinCertificationStatus"
          },
          "giinAppliedForDate": {
            "type": "string",
            "description": "Giin applied for date",
            "format": "date",
            "example": "2020-01-01"
          },
          "waiverType": {
            "$ref": "#/components/schemas/FatcaWaiverType"
          },
          "withholdingIndicator": {
            "type": "boolean",
            "description": "Fatca withholding indicator",
            "example": false
          },
          "withholdingStatus": {
            "$ref": "#/components/schemas/FatcaWitholdingStatus"
          },
          "citizenshipStatus": {
            "type": "string",
            "description": "Identifies the FATCA Citizenship Status.",
            "readOnly": true,
            "example": "US Citizen"
          },
          "exemptCode": {
            "$ref": "#/components/schemas/FatcaExemptCode"
          }
        },
        "description": "Fatca details"
      },
      "GiinCertificationStatus": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Giin certification status value",
            "example": "1"
          },
          "description": {
            "type": "string",
            "description": "Giin certification status description",
            "readOnly": true,
            "example": "Needed and provided"
          }
        },
        "description": "Giin certification status"
      },
      "FatcaWaiverType": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Waiver type value",
            "example": "1"
          },
          "description": {
            "type": "string",
            "description": "Waiver type description",
            "readOnly": true,
            "example": "Needed and received"
          }
        },
        "description": "FATCA waiver type"
      },
      "FatcaWitholdingStatus": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Withholding status value",
            "example": "00"
          },
          "description": {
            "type": "string",
            "description": "Withholding status description",
            "readOnly": true,
            "example": "No withholding"
          }
        },
        "description": "FATCA witholding status"
      },
      "FatcaExemptCode": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Exempt code value",
            "example": "B"
          },
          "description": {
            "type": "string",
            "description": "Exempt code description",
            "readOnly": true,
            "example": "B - The U.S. or any of its agencies or instrumentalities"
          }
        },
        "description": "FATCA exempt code"
      },
      "IdentityVerificationList": {
        "type": "object",
        "properties": {
          "identityVerificationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityVerificationSummary"
            }
          }
        }
      },
      "IdentityVerificationSummary": {
        "type": "object",
        "properties": {
          "verificationTypeId": {
            "$ref": "#/components/schemas/VerificationTypeId"
          },
          "verificationValue": {
            "type": "string",
            "description": "Contains the value information related to the verification type for the involved party. For example, date of birth, passport number, phone number, driver's license id etc",
            "readOnly": true,
            "example": "1980-10-10"
          }
        }
      },
      "VerificationTypeId": {
        "required": [
          "verificationCode",
          "verificationType",
          "verificationTypeSource"
        ],
        "type": "object",
        "properties": {
          "verificationTypeSource": {
            "minLength": 1,
            "type": "string",
            "description": "Indicates the source of the verification type settings whether the settings were System defined or defined by the FE to apply to a broader implementation base",
            "example": "FE",
            "enum": [
              "System",
              "FE"
            ]
          },
          "verificationType": {
            "minLength": 1,
            "type": "string",
            "description": "Contains the verification type value information",
            "example": "Issued Identification Type"
          },
          "verificationCode": {
            "minLength": 1,
            "type": "string",
            "description": "Contains the verification code value information",
            "example": "Passport"
          }
        },
        "description": "Contains the verification type identifier information."
      },
      "BasedInCountryInfo": {
        "required": [
          "basedInCountryCode"
        ],
        "type": "object",
        "properties": {
          "basedInCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Contains the country code associated to the involved party's residence.",
            "example": "USA"
          },
          "basedInCountryName": {
            "type": "string",
            "description": "Contains the country name associated to the involved party's residence",
            "readOnly": true,
            "example": "United States Of America"
          }
        }
      },
      "AnnualSalesDetailsInfo": {
        "required": [
          "annualSalesAmount"
        ],
        "type": "object",
        "properties": {
          "annualSalesAmount": {
            "minLength": 1,
            "type": "string",
            "description": "Identifies the organizationâ€™s current sales level.",
            "example": "may be represented as a range â€“ (001) $0.00 - $100,000, (002) $100,001 - $250,000, etc."
          },
          "annualSalesDescription": {
            "type": "string",
            "description": "Description of the current sales value.",
            "readOnly": true,
            "example": "Annual Sales Revenue"
          }
        }
      },
      "CustomerSegmentInfo": {
        "required": [
          "customerSegmentCode"
        ],
        "type": "object",
        "properties": {
          "customerSegmentCode": {
            "minLength": 1,
            "type": "string",
            "description": "The short code or identifier of the Customer Segment that can be related to a product.",
            "example": "Corporate"
          },
          "customerSegmentName": {
            "type": "string",
            "description": "The name or description of the Customer Segment that can be related to a product.",
            "readOnly": true,
            "example": "Corporate Segment"
          }
        }
      },
      "CustomerRoleInfo": {
        "required": [
          "roleType"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Identifies the customer role  effective date.",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "Identifies the end date of current role of customer.",
            "format": "date",
            "example": "2030-01-01"
          },
          "roleType": {
            "minLength": 1,
            "type": "string",
            "description": "Categorization of the role the Customer is in related to the financial entity.",
            "example": "Customer",
            "enum": [
              "Customer",
              "Prospect",
              "Related Party"
            ]
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of condition that occurred.  Application semantics.  API clients should look here to determine type of problem.  Consider as required. Could be URN unique within API?!",
            "format": "uri",
            "example": "Error"
          },
          "title": {
            "type": "string",
            "description": "short summary of the problem (logically an attribute of type) ... human (developer) readable.  advisory.",
            "example": "Error title"
          },
          "details": {
            "maxItems": 32,
            "type": "array",
            "description": "List of error details",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          }
        },
        "description": "Error information"
      },
      "ErrorDetails": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "type": "string",
            "description": "The code uniquely identifying the message.",
            "example": "E00001"
          },
          "message": {
            "maxLength": 64,
            "type": "string",
            "description": "A text description of the instance of the problem that occurred, and possibly  to correct it.",
            "example": "Error message indicating what the problem is"
          },
          "field": {
            "maxLength": 32,
            "type": "string",
            "description": "This is used to identify a particular attribute of a corresponding API request that is in error.",
            "example": "field"
          }
        },
        "description": "Error details"
      },
      "CommonResponse": {
        "type": "object",
        "properties": {
          "customerDetail": {
            "$ref": "#/components/schemas/CustomerResponse"
          },
          "maintenanceResponse": {
            "$ref": "#/components/schemas/MaintenanceTime"
          }
        },
        "description": "Creation/updation response data for a customer"
      },
      "CustomerResponse": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "Customer id",
            "example": "70000000000"
          },
          "externalDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalDetail"
            }
          }
        }
      },
      "ExternalDetail": {
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "External id",
            "example": "999900138067059"
          },
          "processorName": {
            "type": "string",
            "description": "The software processor name which along with the application name uniquely identifies the system of record",
            "example": "External"
          },
          "applicationName": {
            "type": "string",
            "description": "Application name",
            "example": "External"
          }
        }
      },
      "MaintenanceTime": {
        "type": "object",
        "properties": {
          "acceptedTimestamp": {
            "type": "string",
            "description": "Date and time transaction was accepted by a delivery channel",
            "example": "2020-07-20T06:48:19.183352-04:00"
          },
          "financialEntityOperationalTimestamp": {
            "type": "string",
            "description": "Financial entity operational timestamp",
            "example": "2020-07-20T06:48:19.183352-04:00"
          },
          "operatorUTCTimestamp": {
            "type": "string",
            "description": "Date and time that the service was completed",
            "example": "2020-07-20T06:48:19.183352-04:00"
          },
          "organizationUnitOperationalTimestamp": {
            "type": "string",
            "description": "Organization unit operational timestamp",
            "example": "2020-07-20T06:48:19.183352-04:00"
          }
        },
        "description": "Operational timestamp information"
      },
      "ContactInfo": {
        "type": "object",
        "properties": {
          "postalAddresses": {
            "type": "array",
            "description": "array of postal addresses",
            "items": {
              "$ref": "#/components/schemas/PostalAddress"
            }
          },
          "phoneNumbers": {
            "type": "array",
            "description": "Array of Phone Numbers",
            "items": {
              "$ref": "#/components/schemas/Phone"
            }
          },
          "emailAddresses": {
            "type": "array",
            "description": "Defines an array of email addresses",
            "items": {
              "$ref": "#/components/schemas/EmailAddress"
            }
          },
          "socialMediaAccounts": {
            "type": "array",
            "description": "Defines an array of social media accounts",
            "items": {
              "$ref": "#/components/schemas/SocialMediaAccount"
            }
          }
        },
        "description": "Defines complete set of Contact information for the customer"
      },
      "PostalAddress": {
        "required": [
          "addressCategory",
          "postalAddressType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Internal system of record identifier to uniquely identify the Postal Address record",
            "readOnly": true,
            "example": "0000000000"
          },
          "addressCategory": {
            "$ref": "#/components/schemas/AddressCategory"
          },
          "startDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The effective date of the postal address.",
            "format": "date",
            "example": "2020-01-01"
          },
          "legalAddressStartDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The date the address became effective as the legal address of the customer",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The expiration date of the postal address.",
            "format": "date",
            "example": "2030-01-01"
          },
          "perpetualStartDate": {
            "pattern": "^(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$",
            "type": "string",
            "description": "Perpetual calendar month and day represented as 01-31 used for identifying the date the postal address, of category seasonal, will be in effect each year",
            "example": "01-31"
          },
          "perpetualEndDate": {
            "pattern": "^(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$",
            "type": "string",
            "description": "Perpetual calendar month and day represented as 01-31 used for identifying the date the postal address, of category seasonal, will no longer be in effect each year",
            "example": "01-31"
          },
          "addressFormatName": {
            "type": "string",
            "description": "The address format name identifies the format of the postal address.",
            "example": "US Domestic"
          },
          "addressFormatCountryCode": {
            "maxLength": 3,
            "minLength": 1,
            "type": "string",
            "description": "The country code used to look up the name of the postal address format for the postal address.",
            "writeOnly": true,
            "example": "US"
          },
          "mailingCode": {
            "type": "string",
            "description": "Identifies the usability of the address for direct mailing.",
            "example": "All Mail Allowed",
            "enum": [
              "All Mail Allowed",
              "Hold Mail",
              "No Mail Allowed",
              "Returned Mail",
              "Reset"
            ]
          },
          "specialInstruction": {
            "type": "string",
            "description": "Contains the special instructions associated with the contact point.",
            "example": "Will be available in office working hours, 10 am to 5 pm."
          },
          "sequenceNumber": {
            "minimum": 0,
            "type": "integer",
            "description": "Order of the postal address entity",
            "example": 1
          },
          "postalAddressType": {
            "$ref": "#/components/schemas/AddressType"
          },
          "preferredIndicator": {
            "type": "boolean",
            "description": "Indicates whether the address is the preferred address for the involved party.",
            "readOnly": true,
            "example": true
          },
          "addressLines": {
            "type": "array",
            "description": "The address lines associated with the postal address.",
            "items": {
              "$ref": "#/components/schemas/AddressDetail"
            }
          },
          "locationLines": {
            "type": "array",
            "description": "The location lines associated with the postal address.",
            "items": {
              "$ref": "#/components/schemas/LocationDetail"
            }
          },
          "formattedAddressLine": {
            "type": "array",
            "description": "List of formatted address lines",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/FormattedAddressLineDetails"
            }
          },
          "recipientLines": {
            "type": "array",
            "description": "The recipient lines associated with the postal address.",
            "items": {
              "$ref": "#/components/schemas/RecipientDetail"
            }
          },
          "systemOfRecordAddress": {
            "$ref": "#/components/schemas/SystemOfRecordAddress"
          }
        },
        "description": "Contains information related to a postal address."
      },
      "AddressCategory": {
        "type": "string",
        "description": "The categorization info for the address",
        "example": "Master",
        "enum": [
          "Master",
          "Temporary",
          "Seasonal"
        ]
      },
      "AddressType": {
        "type": "string",
        "description": "Address Type",
        "example": "Home",
        "enum": [
          "Work",
          "Business",
          "Physical",
          "Mailing",
          "Other",
          "Home",
          "Unknown"
        ]
      },
      "AddressDetail": {
        "type": "object",
        "properties": {
          "addressLineType": {
            "type": "string",
            "description": "Identifies the particular type of address line.  (e.g. Information Line 1, Information Line 2, Destination Line 1, Destination Line 2, Destination Line 3, Location Line 1, Location Line 2, Location Line 3, Location Line 4)",
            "example": "Destination Line 1"
          },
          "addressLineText": {
            "type": "string",
            "description": "Contains the text portion associated with the postal address line type",
            "example": "House No I1003"
          }
        },
        "description": "Defines address line details"
      },
      "LocationDetail": {
        "type": "object",
        "properties": {
          "locationType": {
            "type": "string",
            "description": "Identifies the type of address location component.  (e.g. City, Country, County, Delivery Point Bar Code, District, Municipality, Neighborhood, Parish, Postal Code, Postal Code Extension, Province, Region, State, Village)",
            "example": "City"
          },
          "locationText": {
            "type": "string",
            "description": "Contains the text portion associated with the location type",
            "example": "New York"
          }
        },
        "description": "Defines the postal address location details associated with the postal address type and category"
      },
      "FormattedAddressLineDetails": {
        "required": [
          "addressLineCode",
          "addressLineText",
          "sequenceNumber"
        ],
        "type": "object",
        "properties": {
          "sequenceNumber": {
            "type": "integer",
            "description": "Sequence number used to identify a particular address line.",
            "example": 2
          },
          "addressLineText": {
            "type": "string",
            "description": "An address line for an Involved Party.",
            "example": "James Williams"
          },
          "addressLineCode": {
            "type": "string",
            "description": "A code identifying the type of address contained in the attribute line text",
            "example": "Information Line 1"
          }
        }
      },
      "RecipientDetail": {
        "type": "object",
        "properties": {
          "recipientLineType": {
            "type": "string",
            "description": "Identifies the particular type of recipient line.  (e.g. Recipient Line 1, Recipient Line 2)",
            "example": "Recipient Line 1"
          },
          "recipientLineText": {
            "type": "string",
            "description": "Contains the text portion associated with the recipient line type",
            "example": "James William"
          },
          "recipientLineName": {
            "type": "string",
            "description": "Identifies the type of name associated with the recipient.",
            "example": "Primary"
          },
          "recipientLineDescription": {
            "type": "string",
            "description": "Description of the name type associated with the Recipient.",
            "example": "Individual Primary"
          }
        },
        "description": "Defines recipient line details"
      },
      "SystemOfRecordAddress": {
        "type": "object",
        "properties": {
          "contactCode": {
            "type": "string",
            "description": "The system of record (SOR) contact type for the point of contact",
            "example": "Home"
          },
          "sequenceNumber": {
            "minimum": 0,
            "type": "integer",
            "description": "SOR sequence number",
            "example": 1
          }
        },
        "description": "System of record address code"
      },
      "Phone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Internal system of record  identifier of the phone",
            "readOnly": true,
            "example": "0000000000"
          },
          "startDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The effective date of the phone number.",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The expiration date of the phone number.",
            "format": "date",
            "example": "2030-01-01"
          },
          "sequenceNumber": {
            "minimum": 0,
            "type": "integer",
            "description": "Order of the phone number entity",
            "example": 1
          },
          "fullPhoneNumber": {
            "type": "string",
            "description": "Phone number of the customer.",
            "example": "113-698-4472"
          },
          "type": {
            "$ref": "#/components/schemas/PhoneType"
          },
          "internationalPrefix": {
            "type": "string",
            "description": "Code dialed prior to the international number.",
            "example": "1"
          },
          "countryCallingCode": {
            "type": "string",
            "description": "Used to reach the particular telephone system for each nation or special service.",
            "example": "91"
          },
          "trunkCode": {
            "type": "string",
            "description": "Refers to the initial digit(s) to be dialed in a domestic call, prior to the area code (if necessary.",
            "example": "112"
          },
          "areaCode": {
            "type": "string",
            "description": "Used within many nations to route calls to a particular city, region or special service.",
            "example": "917"
          },
          "telephoneNumber": {
            "type": "string",
            "description": "The seven digit number used when dialing locally.",
            "example": "113-698-4472"
          },
          "extensionNumber": {
            "type": "string",
            "description": "A sub-number that is used when the telephone number is either a central number or toll free.",
            "example": "10107"
          },
          "textEnabledIndicator": {
            "type": "boolean",
            "description": "Identifies whether the telephone is capable of receiving a text message.",
            "example": true
          },
          "specialInstructions": {
            "type": "string",
            "description": "Contains the special instructions associated with the phone contact point.",
            "example": "NA"
          },
          "permitSalesCallsIndicator": {
            "type": "boolean",
            "description": "Identifies whether the involved party has given permission to use the telephone number for sales calls.",
            "example": true
          },
          "timezone": {
            "type": "string",
            "description": "Specifies the time zone associated with the phone record expressed in IANA format. For example, America/New York.",
            "example": "America/New York"
          },
          "preferredTimeframes": {
            "type": "array",
            "description": "List of preferred time frames",
            "items": {
              "$ref": "#/components/schemas/PreferredTimeFrame"
            }
          },
          "preferredPhoneIndicator": {
            "type": "boolean",
            "description": "Indicates whether the phone is the preferred phone for phone contact for the involved party.",
            "example": true
          },
          "preferredTextIndicator": {
            "type": "boolean",
            "description": "Indicates whether the text enabled phone is the preferred phone for text message communications for the involved party.",
            "example": true
          },
          "systemOfRecordPhone": {
            "$ref": "#/components/schemas/SystemOfRecordAddress"
          }
        },
        "description": "Phone Number Details"
      },
      "PhoneType": {
        "type": "string",
        "description": "Identifies the type of telephone number.",
        "example": "Home",
        "enum": [
          "Business",
          "Home",
          "Fax",
          "Mobile",
          "Work",
          "Other",
          "Unknown"
        ]
      },
      "PreferredTimeFrame": {
        "type": "object",
        "properties": {
          "startDay": {
            "type": "string",
            "description": "Designates the starting day of the time frame.",
            "example": "Sunday"
          },
          "endDay": {
            "type": "string",
            "description": "Designates the ending day of the time frame.",
            "example": "Monday"
          },
          "startTime": {
            "pattern": "(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]",
            "type": "string",
            "description": "Designates the starting time within a day.",
            "example": "09:00:00"
          },
          "endTime": {
            "pattern": "(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]",
            "type": "string",
            "description": "Designates the ending time within a day.",
            "example": "17:00:00"
          }
        },
        "description": "Contains the preferred timeframes for contacting the customer with the telephone number."
      },
      "EmailAddress": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Internal system of record identifier to uniquely identify Email Address record",
            "readOnly": true,
            "example": "0000000000"
          },
          "sequenceNumber": {
            "minimum": 0,
            "type": "integer",
            "description": "Order of the email address entity",
            "example": 1
          },
          "startDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The effective date of the email address.",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The expiration date of the email address.",
            "format": "date",
            "example": "2030-01-01"
          },
          "address": {
            "type": "string",
            "description": "Email Address of the customer",
            "example": "customer@fisglobal.com"
          },
          "addressType": {
            "$ref": "#/components/schemas/EmailType"
          },
          "preferredIndicator": {
            "type": "boolean",
            "description": "Indicates whether the email address is the preferred email address for the involved party.",
            "readOnly": true,
            "example": true
          },
          "systemOfRecordEmail": {
            "$ref": "#/components/schemas/SystemOfRecordAddress"
          }
        },
        "description": "Defines an email address information"
      },
      "EmailType": {
        "type": "string",
        "description": "Email type",
        "example": "Primary",
        "enum": [
          "Primary",
          "Secondary",
          "Other",
          "Unknown"
        ]
      },
      "SocialMediaAccount": {
        "type": "object",
        "properties": {
          "sequenceNumber": {
            "minimum": 0,
            "type": "integer",
            "description": "Order of the social media entity",
            "example": 1
          },
          "socialMediaType": {
            "type": "string",
            "description": "Information identifying which social media platform the info refers to",
            "example": "Facebook"
          },
          "socialMediaAccountId": {
            "type": "string",
            "description": "The customer's account Id with the social media provider",
            "example": "customer@fisglobal.com"
          },
          "systemOfRecordSocialMedia": {
            "$ref": "#/components/schemas/SystemOfRecordAddress"
          }
        },
        "description": "Contains information related to a customers social media accounts"
      },
      "IdentificationInfo": {
        "required": [
          "issueIdValue",
          "issuedBy",
          "issuedDate",
          "issuedIdType"
        ],
        "type": "object",
        "properties": {
          "issuedIdType": {
            "type": "string",
            "description": "Documentary Id type",
            "example": "Driver's License"
          },
          "issueIdTypeDescription": {
            "type": "string",
            "description": "Documentary Id type description",
            "readOnly": true,
            "example": "Driver's License"
          },
          "issueIdValue": {
            "type": "string",
            "description": "Documentary ID Value",
            "example": "DL556677"
          },
          "issuedDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The date the Id was issued",
            "format": "date",
            "example": "2020-01-01"
          },
          "issuedBy": {
            "type": "string",
            "description": "The Id issuing authority name",
            "example": "New York"
          },
          "issuedByDescription": {
            "type": "string",
            "description": "Information describing the issuing authority",
            "example": "Driver's license Bureau"
          },
          "expirationDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "Expiry date of the customer identification",
            "format": "date",
            "example": "2030-01-01"
          },
          "verificationStatus": {
            "type": "string",
            "description": "Specifies if/how the issued Id was verified",
            "example": "Verified"
          },
          "verificationStatusDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The date the issed Id was verified",
            "format": "date",
            "example": "2020-02-01"
          }
        },
        "description": "Defines complete set of Documentary Id of the customer"
      },
      "Attribute": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0,
            "type": "integer",
            "description": "The name of the attribute.",
            "example": 999900014002997
          },
          "value": {
            "type": "string",
            "description": "The value of the attribute.",
            "example": "Attribute Text"
          },
          "startDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The date the attribute became effective.",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The date the attribute became non-applicable.",
            "format": "date",
            "example": "2030-01-01"
          }
        },
        "description": "User definable structure to capture additional customer attributes."
      },
      "CustomerCommunicationPreference": {
        "type": "object",
        "properties": {
          "communicationPreferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommunicationPreference"
            }
          }
        },
        "description": "Communication preferences"
      },
      "CommunicationPreference": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The communication preference type",
            "example": "Direct Mail Maintenance"
          },
          "displayName": {
            "type": "string",
            "description": "The communication preference display name",
            "readOnly": true,
            "example": "Direct Mail Maintenance"
          },
          "description": {
            "type": "string",
            "description": "The communication preference description",
            "readOnly": true,
            "example": "Direct Mail Maintenance"
          },
          "status": {
            "type": "string",
            "description": "The communication preference status",
            "example": "Opt In",
            "enum": [
              "No Selection",
              "Opt In",
              "Opt Out"
            ]
          },
          "startDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The date the communication preference status was set.",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The date the communication preference status is no longer in effect.",
            "format": "date",
            "example": "2030-01-01"
          },
          "communicationDeliveryMethods": {
            "type": "array",
            "description": "Communication delivery methods",
            "items": {
              "$ref": "#/components/schemas/CommunicationDeliveryMethod"
            }
          }
        },
        "description": "Communication preferences"
      },
      "CommunicationDeliveryMethod": {
        "type": "object",
        "properties": {
          "preferredCommunicationMethod": {
            "type": "string",
            "description": "The preferred communication method for the preference.",
            "example": "Phone",
            "enum": [
              "Direct Mail",
              "Email",
              "Phone",
              "Secure E-Message",
              "Social Media",
              "Text Message"
            ]
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ContactReference"
          }
        },
        "description": "Communication delivery method"
      },
      "ContactReference": {
        "required": [
          "deliveryType"
        ],
        "type": "object",
        "properties": {
          "deliveryType": {
            "type": "string",
            "description": "Contact delivery type",
            "example": "Phone",
            "enum": [
              "Phone",
              "Text",
              "Email",
              "PostalAddress",
              "SocialMedia"
            ]
          },
          "contactType": {
            "type": "string",
            "description": "Contact reference type (based on delivery type)",
            "example": "Home"
          },
          "sequenceNumber": {
            "minimum": 0,
            "type": "integer",
            "description": "Order of the contact entity",
            "example": 1
          },
          "systemOfRecordContact": {
            "$ref": "#/components/schemas/SystemOfRecordAddress"
          }
        },
        "description": "Contact reference"
      },
      "ContactPreferences": {
        "type": "object",
        "properties": {
          "contactPreferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPreference"
            }
          }
        }
      },
      "ContactPreference": {
        "required": [
          "deliveryType"
        ],
        "type": "object",
        "properties": {
          "deliveryType": {
            "type": "string",
            "description": "Contact delivery type",
            "example": "Phone",
            "enum": [
              "Phone",
              "Text",
              "Email",
              "PostalAddress",
              "SocialMedia"
            ]
          },
          "contactType": {
            "type": "string",
            "description": "Contact reference type (based on delivery type)",
            "example": "Home"
          },
          "sequenceNumber": {
            "minimum": 0,
            "type": "integer",
            "description": "Order of the contact entity",
            "example": 1
          },
          "startDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The start date for the preferred contact.",
            "format": "date",
            "example": "2020-01-01"
          },
          "systemOfRecordContact": {
            "$ref": "#/components/schemas/SystemOfRecordContact"
          }
        },
        "description": "Contact reference"
      },
      "SystemOfRecordContact": {
        "required": [
          "contactCode",
          "sequenceNumber"
        ],
        "type": "object",
        "properties": {
          "contactCode": {
            "type": "string",
            "description": "The system of record (SOR) contact type for the point of contact",
            "example": "Home"
          },
          "sequenceNumber": {
            "minimum": 0,
            "type": "integer",
            "description": "SOR sequence number",
            "example": 1
          }
        },
        "description": "System of record address code"
      },
      "CustomerTypeEnum": {
        "type": "string",
        "description": "The type of customer (Individual, Organization)",
        "example": "Individual",
        "enum": [
          "Individual",
          "Organization"
        ]
      },
      "Name": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The date the name is effective",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The date the name is no longer in effect",
            "format": "date",
            "example": "2030-01-01"
          },
          "type": {
            "type": "string",
            "description": "Identifies the type of name associated with a customer (ie, DBA, Primary, Alternate, etc)",
            "example": "Alternate"
          },
          "typeDescription": {
            "type": "string",
            "description": "Description of the name type",
            "readOnly": true,
            "example": "description"
          },
          "fullName": {
            "type": "string",
            "description": "The full name of the customer",
            "example": "James William"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the customer",
            "example": "James"
          },
          "midName": {
            "type": "string",
            "description": "The middle name of an individual. This may represent a single name, multiple names, or an initial.",
            "example": "A"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the customer",
            "example": "William"
          },
          "secondLastName": {
            "type": "string",
            "description": "The second last or family name of the individual",
            "example": "Ethan"
          },
          "prefix": {
            "type": "string",
            "description": "The name prefix of the customer",
            "example": "Mr"
          },
          "suffix": {
            "type": "string",
            "description": "The name suffix of the individual's name",
            "example": "Sr"
          },
          "title": {
            "type": "string",
            "description": "The title of an individual.",
            "example": "Dr"
          }
        },
        "description": "Contains fields related to a customer name, such as first name, last name and name type."
      },
      "CustomerRole": {
        "required": [
          "roleType"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "Identifies the customer role  effective date.",
            "format": "date",
            "example": "2020-01-01"
          },
          "endDate": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "Identifies the end date of current role of customer.",
            "format": "date",
            "example": "2030-01-01"
          },
          "roleType": {
            "$ref": "#/components/schemas/CustomerRoleTypeEnum"
          }
        },
        "description": "Contains customer role details"
      },
      "CustomerRoleTypeEnum": {
        "type": "string",
        "description": "Categorization of the role the customer is in with the financial entity(Customer, Employee, Financial Entity, Organization Unit, Prospect, Related Party)",
        "example": "Customer",
        "enum": [
          "Customer",
          "Employee",
          "Financial Entity",
          "Organization Unit",
          "Prospect",
          "Related Party"
        ]
      },
      "Amount_1": {
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "currencyCode": {
            "maxLength": 3,
            "minLength": 2,
            "type": "string",
            "description": "The code of currency",
            "example": "USD"
          },
          "amount": {
            "type": "number",
            "description": "Amount involved with the entity",
            "format": "double",
            "example": 10
          },
          "date": {
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "type": "string",
            "description": "The date associated within the amount",
            "format": "date",
            "example": "2020-01-01"
          }
        },
        "description": "Amount info"
      },
      "CommunicationPreferencesList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CommunicationPreference"
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "description": "the following flows are supported.  need a URL to document this.",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://developer-api-test2.fnis.com/token",
            "scopes": {}
          },
          "authorizationCode": {
            "authorizationUrl": "https://developer-api-test2.fnis.com/authorize",
            "tokenUrl": "https://developer-api-test2.fnis.com/token",
            "scopes": {}
          }
        }
      },
      "default": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://test.com",
            "scopes": {}
          }
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}